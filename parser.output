Nonterminals useless in grammar

    string_literal
    constant
    primary_expression
    postfix_expression
    argument_expression_list
    unary_expression
    cast_expression
    multiplicative_expression
    additive_expression
    shift_expression
    relational_expression
    equality_expression
    and_expression
    xor_expression
    or_expression
    logical_and_expression
    logical_or_expression
    conditional_expression
    assignment_expression
    assignment_operator
    expression
    constant_expression
    type_name
    initializer


Terminals unused in grammar

    CHARLIT
    STRINGLIT
    NUMBERLIT
    "->"
    "++"
    "--"
    "<<"
    ">>"
    "<="
    ">="
    "=="
    "!="
    "&&"
    "||"
    "*="
    "/="
    "%="
    "+="
    "-="
    "<<="
    ">>="
    "&="
    "|="
    "^="
    ALIGNOF
    BREAK
    CASE
    CONTINUE
    DEFAULT
    DO
    ELSE
    FOR
    GOTO
    IF
    RETURN
    SIZEOF
    SWITCH
    TYPEDEF
    WHILE
    _IMAGINARY
    '.'
    '&'
    '+'
    '-'
    '~'
    '!'
    '/'
    '%'
    '<'
    '>'
    '^'
    '|'
    '?'
    ':'
    '='


Rules useless in grammar

  110 expression_statement: expression ';'

  111 string_literal: STRINGLIT

  112 constant: CHARLIT
  113         | NUMBERLIT

  114 primary_expression: identifier
  115                   | constant
  116                   | string_literal
  117                   | '(' expression ')'

  118 postfix_expression: primary_expression
  119                   | postfix_expression '[' expression ']'
  120                   | postfix_expression '(' ')'
  121                   | postfix_expression '(' argument_expression_list ')'
  122                   | postfix_expression '.' identifier
  123                   | postfix_expression "->" identifier
  124                   | postfix_expression "++"
  125                   | postfix_expression "--"

  126 argument_expression_list: assignment_expression
  127                         | argument_expression_list ',' assignment_expression

  128 unary_expression: postfix_expression
  129                 | "++" unary_expression
  130                 | "--" unary_expression
  131                 | '&' cast_expression
  132                 | '*' cast_expression
  133                 | '+' cast_expression
  134                 | '-' cast_expression
  135                 | '~' cast_expression
  136                 | '!' cast_expression
  137                 | SIZEOF unary_expression
  138                 | SIZEOF '(' type_name ')'
  139                 | ALIGNOF unary_expression

  140 cast_expression: unary_expression '(' type_name ')' cast_expression

  141 multiplicative_expression: cast_expression
  142                          | multiplicative_expression '*' cast_expression
  143                          | multiplicative_expression '/' cast_expression
  144                          | multiplicative_expression '%' cast_expression

  145 additive_expression: multiplicative_expression
  146                    | additive_expression '+' multiplicative_expression
  147                    | additive_expression '-' multiplicative_expression

  148 shift_expression: additive_expression
  149                 | shift_expression "<<" additive_expression
  150                 | shift_expression ">>" additive_expression

  151 relational_expression: shift_expression
  152                      | relational_expression '<' shift_expression
  153                      | relational_expression "<=" shift_expression
  154                      | relational_expression '>' shift_expression
  155                      | relational_expression ">=" shift_expression

  156 equality_expression: relational_expression
  157                    | equality_expression "==" relational_expression
  158                    | equality_expression "!=" relational_expression

  159 and_expression: equality_expression
  160               | and_expression '&' equality_expression

  161 xor_expression: and_expression
  162               | xor_expression '^' and_expression

  163 or_expression: xor_expression
  164              | or_expression '|' xor_expression

  165 logical_and_expression: or_expression
  166                       | logical_and_expression "&&" or_expression

  167 logical_or_expression: logical_and_expression
  168                      | logical_or_expression "||" logical_and_expression

  169 conditional_expression: logical_or_expression
  170                       | logical_or_expression '?' expression ':' conditional_expression

  171 assignment_expression: conditional_expression
  172                      | unary_expression assignment_operator assignment_expression

  173 assignment_operator: '='
  174                    | "*="
  175                    | "/="
  176                    | "%="
  177                    | "+="
  178                    | "-="
  179                    | "<<="
  180                    | ">>="
  181                    | "&="
  182                    | "^="
  183                    | "|="

  184 expression: assignment_expression
  185           | expression ',' assignment_expression

  186 constant_expression: conditional_expression

  187 init_declarator: declarator '=' initializer

  188 struct_declarator: ':' constant_expression
  189                  | declarator ':' constant_expression

  190 enumerator: identifier '=' constant_expression

  191 direct_declarator: direct_declarator '[' assignment_expression ']'
  192                  | direct_declarator '[' type_qualifier_list assignment_expression ']'
  193                  | direct_declarator '[' STATIC assignment_expression ']'
  194                  | direct_declarator '[' STATIC type_qualifier_list assignment_expression ']'
  195                  | direct_declarator '[' type_qualifier_list STATIC assignment_expression ']'

  196 type_name: specifier_qualifier_list
  197          | specifier_qualifier_list abstract_declarator

  198 direct_abstract_declarator: '[' assignment_expression ']'
  199                           | direct_abstract_declarator '[' assignment_expression ']'

  200 initializer: assignment_expression


Grammar

    0 $accept: external_declaration $end

    1 external_declaration: function_definition
    2                     | declaration

    3 function_definition: declaration_specifiers declarator compound_statement
    4                    | declaration_specifiers declarator declaration_list compound_statement

    5 declaration_list: declaration
    6                 | declaration_list declaration

    7 compound_statement: '{' block_item_list '}' '{' '}'

    8 block_item_list: block_item
    9                | block_item_list block_item

   10 block_item: declaration
   11           | statement

   12 statement: compound_statement
   13          | expression_statement

   14 expression_statement: ';'

   15 identifier: IDENT

   16 declaration: declaration_specifiers init_declarator_list ';'

   17 declaration_specifiers: storage_class_specifier
   18                       | type_specifier
   19                       | type_qualifier
   20                       | function_specifier
   21                       | declaration_specifiers storage_class_specifier
   22                       | declaration_specifiers type_specifier
   23                       | declaration_specifiers type_qualifier
   24                       | declaration_specifiers function_specifier

   25 init_declarator_list: init_declarator
   26                     | init_declarator_list ',' init_declarator

   27 init_declarator: declarator

   28 storage_class_specifier: EXTERN
   29                        | STATIC
   30                        | AUTO
   31                        | REGISTER

   32 type_specifier: VOID
   33               | CHAR
   34               | SHORT
   35               | INT
   36               | LONG
   37               | FLOAT
   38               | DOUBLE
   39               | SIGNED
   40               | UNSIGNED
   41               | _BOOL
   42               | _COMPLEX
   43               | struct_or_union_specifier
   44               | enum_specifier

   45 type_qualifier: CONST
   46               | RESTRICT
   47               | VOLATILE

   48 function_specifier: INLINE

   49 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}'
   50                          | struct_or_union IDENT '{' struct_declaration_list '}'
   51                          | struct_or_union IDENT

   52 struct_or_union: STRUCT
   53                | UNION

   54 struct_declaration_list: struct_declaration
   55                        | struct_declaration_list struct_declaration

   56 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

   57 specifier_qualifier_list: type_specifier
   58                         | specifier_qualifier_list type_specifier
   59                         | type_qualifier
   60                         | specifier_qualifier_list type_qualifier

   61 struct_declarator_list: struct_declarator
   62                       | struct_declarator_list ',' struct_declarator

   63 struct_declarator: declarator

   64 enum_specifier: ENUM identifier
   65               | ENUM '{' enumerator_list '}'
   66               | ENUM identifier '{' enumerator_list '}'
   67               | ENUM '{' enumerator_list ',' '}'
   68               | ENUM identifier '{' enumerator_list ',' '}'

   69 enumerator_list: enumerator
   70                | enumerator_list ',' enumerator

   71 enumerator: identifier

   72 declarator: direct_declarator
   73           | pointer direct_declarator

   74 direct_declarator: identifier
   75                  | '(' declarator ')'
   76                  | direct_declarator '[' ']'
   77                  | direct_declarator '[' type_qualifier_list ']'
   78                  | direct_declarator '[' type_qualifier_list '*' ']'
   79                  | direct_declarator '[' '*' ']'
   80                  | direct_declarator '(' parameter_type_list ')'
   81                  | direct_declarator '(' identifier_list ')'
   82                  | direct_declarator '(' ')'

   83 pointer: '*'
   84        | '*' type_qualifier_list
   85        | '*' pointer
   86        | '*' type_qualifier_list pointer

   87 type_qualifier_list: type_qualifier
   88                    | type_qualifier_list type_qualifier

   89 parameter_type_list: parameter_list
   90                    | parameter_list ',' "..."

   91 parameter_list: parameter_declaration
   92               | parameter_list ',' parameter_declaration

   93 parameter_declaration: declaration_specifiers declarator
   94                      | declaration_specifiers
   95                      | declaration_specifiers abstract_declarator

   96 identifier_list: identifier
   97                | identifier_list ',' identifier

   98 abstract_declarator: pointer
   99                    | direct_abstract_declarator
  100                    | pointer direct_abstract_declarator

  101 direct_abstract_declarator: '(' abstract_declarator ')'
  102                           | '[' ']'
  103                           | direct_abstract_declarator '[' ']'
  104                           | '[' '*' ']'
  105                           | direct_abstract_declarator '[' '*' ']'
  106                           | '(' ')'
  107                           | direct_abstract_declarator '(' ')'
  108                           | '(' parameter_type_list ')'
  109                           | direct_abstract_declarator '(' parameter_type_list ')'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33)
    '%' (37)
    '&' (38)
    '(' (40) 75 80 81 82 101 106 107 108 109
    ')' (41) 75 80 81 82 101 106 107 108 109
    '*' (42) 78 79 83 84 85 86 104 105
    '+' (43)
    ',' (44) 26 62 67 68 70 90 92 97
    '-' (45)
    '.' (46)
    '/' (47)
    ':' (58)
    ';' (59) 14 16 56
    '<' (60)
    '=' (61)
    '>' (62)
    '?' (63)
    '[' (91) 76 77 78 79 102 103 104 105
    ']' (93) 76 77 78 79 102 103 104 105
    '^' (94)
    '{' (123) 7 49 50 65 66 67 68
    '|' (124)
    '}' (125) 7 49 50 65 66 67 68
    '~' (126)
    error (256)
    IDENT <string> (258) 15 50 51
    CHARLIT <string> (259)
    STRINGLIT <string> (260)
    NUMBERLIT <number> (261)
    "->" (262)
    "++" (263)
    "--" (264)
    "<<" (265)
    ">>" (266)
    "<=" (267)
    ">=" (268)
    "==" (269)
    "!=" (270)
    "&&" (271)
    "||" (272)
    "..." (273) 90
    "*=" (274)
    "/=" (275)
    "%=" (276)
    "+=" (277)
    "-=" (278)
    "<<=" (279)
    ">>=" (280)
    "&=" (281)
    "|=" (282)
    "^=" (283)
    AUTO (284) 30
    ALIGNOF (285)
    BREAK (286)
    CASE (287)
    CHAR (288) 33
    CONST (289) 45
    CONTINUE (290)
    DEFAULT (291)
    DO (292)
    DOUBLE (293) 38
    ELSE (294)
    ENUM (295) 64 65 66 67 68
    EXTERN (296) 28
    FLOAT (297) 37
    FOR (298)
    GOTO (299)
    IF (300)
    INLINE (301) 48
    INT (302) 35
    LONG (303) 36
    REGISTER (304) 31
    RESTRICT (305) 46
    RETURN (306)
    SHORT (307) 34
    SIGNED (308) 39
    SIZEOF (309)
    STATIC (310) 29
    STRUCT (311) 52
    SWITCH (312)
    TYPEDEF (313)
    UNION (314) 53
    UNSIGNED (315) 40
    VOID (316) 32
    VOLATILE (317) 47
    WHILE (318)
    _BOOL (319) 41
    _COMPLEX (320) 42
    _IMAGINARY (321)


Nonterminals, with rules where they appear

    $accept (91)
        on left: 0
    external_declaration (92)
        on left: 1 2
        on right: 0
    function_definition (93)
        on left: 3 4
        on right: 1
    declaration_list (94)
        on left: 5 6
        on right: 4 6
    compound_statement (95)
        on left: 7
        on right: 3 4 12
    block_item_list (96)
        on left: 8 9
        on right: 7 9
    block_item (97)
        on left: 10 11
        on right: 8 9
    statement (98)
        on left: 12 13
        on right: 11
    expression_statement (99)
        on left: 14
        on right: 13
    identifier <node> (100)
        on left: 15
        on right: 64 66 68 71 74 96 97
    declaration (101)
        on left: 16
        on right: 2 5 6 10
    declaration_specifiers <node> (102)
        on left: 17 18 19 20 21 22 23 24
        on right: 3 4 16 21 22 23 24 93 94 95
    init_declarator_list (103)
        on left: 25 26
        on right: 16 26
    init_declarator (104)
        on left: 27
        on right: 25 26
    storage_class_specifier <storage_class_specifier> (105)
        on left: 28 29 30 31
        on right: 17 21
    type_specifier <type_specifier> (106)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43 44
        on right: 18 22 57 58
    type_qualifier <type_qualifier> (107)
        on left: 45 46 47
        on right: 19 23 59 60 87 88
    function_specifier <function_specifier> (108)
        on left: 48
        on right: 20 24
    struct_or_union_specifier <node> (109)
        on left: 49 50 51
        on right: 43
    struct_or_union (110)
        on left: 52 53
        on right: 49 50 51
    struct_declaration_list (111)
        on left: 54 55
        on right: 49 50 55
    struct_declaration (112)
        on left: 56
        on right: 54 55
    specifier_qualifier_list (113)
        on left: 57 58 59 60
        on right: 56 58 60
    struct_declarator_list (114)
        on left: 61 62
        on right: 56 62
    struct_declarator (115)
        on left: 63
        on right: 61 62
    enum_specifier <node> (116)
        on left: 64 65 66 67 68
        on right: 44
    enumerator_list (117)
        on left: 69 70
        on right: 65 66 67 68 70
    enumerator (118)
        on left: 71
        on right: 69 70
    declarator (119)
        on left: 72 73
        on right: 3 4 27 63 75 93
    direct_declarator (120)
        on left: 74 75 76 77 78 79 80 81 82
        on right: 72 73 76 77 78 79 80 81 82
    pointer (121)
        on left: 83 84 85 86
        on right: 73 85 86 98 100
    type_qualifier_list <type_qualifier> (122)
        on left: 87 88
        on right: 77 78 84 86 88
    parameter_type_list (123)
        on left: 89 90
        on right: 80 108 109
    parameter_list (124)
        on left: 91 92
        on right: 89 90 92
    parameter_declaration (125)
        on left: 93 94 95
        on right: 91 92
    identifier_list (126)
        on left: 96 97
        on right: 81 97
    abstract_declarator (127)
        on left: 98 99 100
        on right: 95 101
    direct_abstract_declarator (128)
        on left: 101 102 103 104 105 106 107 108 109
        on right: 99 100 103 105 107 109


State 0

    0 $accept: • external_declaration $end

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    external_declaration       go to state 23
    function_definition        go to state 24
    declaration                go to state 25
    declaration_specifiers     go to state 26
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    enum_specifier             go to state 33


State 1

   30 storage_class_specifier: AUTO •

    $default  reduce using rule 30 (storage_class_specifier)


State 2

   33 type_specifier: CHAR •

    $default  reduce using rule 33 (type_specifier)


State 3

   45 type_qualifier: CONST •

    $default  reduce using rule 45 (type_qualifier)


State 4

   38 type_specifier: DOUBLE •

    $default  reduce using rule 38 (type_specifier)


State 5

   64 enum_specifier: ENUM • identifier
   65               | ENUM • '{' enumerator_list '}'
   66               | ENUM • identifier '{' enumerator_list '}'
   67               | ENUM • '{' enumerator_list ',' '}'
   68               | ENUM • identifier '{' enumerator_list ',' '}'

    IDENT  shift, and go to state 34
    '{'    shift, and go to state 35

    identifier  go to state 36


State 6

   28 storage_class_specifier: EXTERN •

    $default  reduce using rule 28 (storage_class_specifier)


State 7

   37 type_specifier: FLOAT •

    $default  reduce using rule 37 (type_specifier)


State 8

   48 function_specifier: INLINE •

    $default  reduce using rule 48 (function_specifier)


State 9

   35 type_specifier: INT •

    $default  reduce using rule 35 (type_specifier)


State 10

   36 type_specifier: LONG •

    $default  reduce using rule 36 (type_specifier)


State 11

   31 storage_class_specifier: REGISTER •

    $default  reduce using rule 31 (storage_class_specifier)


State 12

   46 type_qualifier: RESTRICT •

    $default  reduce using rule 46 (type_qualifier)


State 13

   34 type_specifier: SHORT •

    $default  reduce using rule 34 (type_specifier)


State 14

   39 type_specifier: SIGNED •

    $default  reduce using rule 39 (type_specifier)


State 15

   29 storage_class_specifier: STATIC •

    $default  reduce using rule 29 (storage_class_specifier)


State 16

   52 struct_or_union: STRUCT •

    $default  reduce using rule 52 (struct_or_union)


State 17

   53 struct_or_union: UNION •

    $default  reduce using rule 53 (struct_or_union)


State 18

   40 type_specifier: UNSIGNED •

    $default  reduce using rule 40 (type_specifier)


State 19

   32 type_specifier: VOID •

    $default  reduce using rule 32 (type_specifier)


State 20

   47 type_qualifier: VOLATILE •

    $default  reduce using rule 47 (type_qualifier)


State 21

   41 type_specifier: _BOOL •

    $default  reduce using rule 41 (type_specifier)


State 22

   42 type_specifier: _COMPLEX •

    $default  reduce using rule 42 (type_specifier)


State 23

    0 $accept: external_declaration • $end

    $end  shift, and go to state 37


State 24

    1 external_declaration: function_definition •

    $default  reduce using rule 1 (external_declaration)


State 25

    2 external_declaration: declaration •

    $default  reduce using rule 2 (external_declaration)


State 26

    3 function_definition: declaration_specifiers • declarator compound_statement
    4                    | declaration_specifiers • declarator declaration_list compound_statement
   16 declaration: declaration_specifiers • init_declarator_list ';'
   21 declaration_specifiers: declaration_specifiers • storage_class_specifier
   22                       | declaration_specifiers • type_specifier
   23                       | declaration_specifiers • type_qualifier
   24                       | declaration_specifiers • function_specifier

    IDENT     shift, and go to state 34
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 38
    '*'       shift, and go to state 39

    identifier                 go to state 40
    init_declarator_list       go to state 41
    init_declarator            go to state 42
    storage_class_specifier    go to state 43
    type_specifier             go to state 44
    type_qualifier             go to state 45
    function_specifier         go to state 46
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    enum_specifier             go to state 33
    declarator                 go to state 47
    direct_declarator          go to state 48
    pointer                    go to state 49


State 27

   17 declaration_specifiers: storage_class_specifier •

    $default  reduce using rule 17 (declaration_specifiers)


State 28

   18 declaration_specifiers: type_specifier •

    $default  reduce using rule 18 (declaration_specifiers)


State 29

   19 declaration_specifiers: type_qualifier •

    $default  reduce using rule 19 (declaration_specifiers)


State 30

   20 declaration_specifiers: function_specifier •

    $default  reduce using rule 20 (declaration_specifiers)


State 31

   43 type_specifier: struct_or_union_specifier •

    $default  reduce using rule 43 (type_specifier)


State 32

   49 struct_or_union_specifier: struct_or_union • '{' struct_declaration_list '}'
   50                          | struct_or_union • IDENT '{' struct_declaration_list '}'
   51                          | struct_or_union • IDENT

    IDENT  shift, and go to state 50
    '{'    shift, and go to state 51


State 33

   44 type_specifier: enum_specifier •

    $default  reduce using rule 44 (type_specifier)


State 34

   15 identifier: IDENT •

    $default  reduce using rule 15 (identifier)


State 35

   65 enum_specifier: ENUM '{' • enumerator_list '}'
   67               | ENUM '{' • enumerator_list ',' '}'

    IDENT  shift, and go to state 34

    identifier       go to state 52
    enumerator_list  go to state 53
    enumerator       go to state 54


State 36

   64 enum_specifier: ENUM identifier •
   66               | ENUM identifier • '{' enumerator_list '}'
   68               | ENUM identifier • '{' enumerator_list ',' '}'

    '{'  shift, and go to state 55

    $default  reduce using rule 64 (enum_specifier)


State 37

    0 $accept: external_declaration $end •

    $default  accept


State 38

   75 direct_declarator: '(' • declarator ')'

    IDENT  shift, and go to state 34
    '('    shift, and go to state 38
    '*'    shift, and go to state 39

    identifier         go to state 40
    declarator         go to state 56
    direct_declarator  go to state 48
    pointer            go to state 49


State 39

   83 pointer: '*' •
   84        | '*' • type_qualifier_list
   85        | '*' • pointer
   86        | '*' • type_qualifier_list pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 20
    '*'       shift, and go to state 39

    $default  reduce using rule 83 (pointer)

    type_qualifier       go to state 57
    pointer              go to state 58
    type_qualifier_list  go to state 59


State 40

   74 direct_declarator: identifier •

    $default  reduce using rule 74 (direct_declarator)


State 41

   16 declaration: declaration_specifiers init_declarator_list • ';'
   26 init_declarator_list: init_declarator_list • ',' init_declarator

    ';'  shift, and go to state 60
    ','  shift, and go to state 61


State 42

   25 init_declarator_list: init_declarator •

    $default  reduce using rule 25 (init_declarator_list)


State 43

   21 declaration_specifiers: declaration_specifiers storage_class_specifier •

    $default  reduce using rule 21 (declaration_specifiers)


State 44

   22 declaration_specifiers: declaration_specifiers type_specifier •

    $default  reduce using rule 22 (declaration_specifiers)


State 45

   23 declaration_specifiers: declaration_specifiers type_qualifier •

    $default  reduce using rule 23 (declaration_specifiers)


State 46

   24 declaration_specifiers: declaration_specifiers function_specifier •

    $default  reduce using rule 24 (declaration_specifiers)


State 47

    3 function_definition: declaration_specifiers declarator • compound_statement
    4                    | declaration_specifiers declarator • declaration_list compound_statement
   27 init_declarator: declarator •

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '{'       shift, and go to state 62

    $default  reduce using rule 27 (init_declarator)

    declaration_list           go to state 63
    compound_statement         go to state 64
    declaration                go to state 65
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    enum_specifier             go to state 33


State 48

   72 declarator: direct_declarator •
   76 direct_declarator: direct_declarator • '[' ']'
   77                  | direct_declarator • '[' type_qualifier_list ']'
   78                  | direct_declarator • '[' type_qualifier_list '*' ']'
   79                  | direct_declarator • '[' '*' ']'
   80                  | direct_declarator • '(' parameter_type_list ')'
   81                  | direct_declarator • '(' identifier_list ')'
   82                  | direct_declarator • '(' ')'

    '('  shift, and go to state 67
    '['  shift, and go to state 68

    $default  reduce using rule 72 (declarator)


State 49

   73 declarator: pointer • direct_declarator

    IDENT  shift, and go to state 34
    '('    shift, and go to state 38

    identifier         go to state 40
    direct_declarator  go to state 69


State 50

   50 struct_or_union_specifier: struct_or_union IDENT • '{' struct_declaration_list '}'
   51                          | struct_or_union IDENT •

    '{'  shift, and go to state 70

    $default  reduce using rule 51 (struct_or_union_specifier)


State 51

   49 struct_or_union_specifier: struct_or_union '{' • struct_declaration_list '}'

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    type_specifier             go to state 71
    type_qualifier             go to state 72
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    struct_declaration_list    go to state 73
    struct_declaration         go to state 74
    specifier_qualifier_list   go to state 75
    enum_specifier             go to state 33


State 52

   71 enumerator: identifier •

    $default  reduce using rule 71 (enumerator)


State 53

   65 enum_specifier: ENUM '{' enumerator_list • '}'
   67               | ENUM '{' enumerator_list • ',' '}'
   70 enumerator_list: enumerator_list • ',' enumerator

    '}'  shift, and go to state 76
    ','  shift, and go to state 77


State 54

   69 enumerator_list: enumerator •

    $default  reduce using rule 69 (enumerator_list)


State 55

   66 enum_specifier: ENUM identifier '{' • enumerator_list '}'
   68               | ENUM identifier '{' • enumerator_list ',' '}'

    IDENT  shift, and go to state 34

    identifier       go to state 52
    enumerator_list  go to state 78
    enumerator       go to state 54


State 56

   75 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 79


State 57

   87 type_qualifier_list: type_qualifier •

    $default  reduce using rule 87 (type_qualifier_list)


State 58

   85 pointer: '*' pointer •

    $default  reduce using rule 85 (pointer)


State 59

   84 pointer: '*' type_qualifier_list •
   86        | '*' type_qualifier_list • pointer
   88 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 20
    '*'       shift, and go to state 39

    $default  reduce using rule 84 (pointer)

    type_qualifier  go to state 80
    pointer         go to state 81


State 60

   16 declaration: declaration_specifiers init_declarator_list ';' •

    $default  reduce using rule 16 (declaration)


State 61

   26 init_declarator_list: init_declarator_list ',' • init_declarator

    IDENT  shift, and go to state 34
    '('    shift, and go to state 38
    '*'    shift, and go to state 39

    identifier         go to state 40
    init_declarator    go to state 82
    declarator         go to state 83
    direct_declarator  go to state 48
    pointer            go to state 49


State 62

    7 compound_statement: '{' • block_item_list '}' '{' '}'

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '{'       shift, and go to state 62
    ';'       shift, and go to state 84

    compound_statement         go to state 85
    block_item_list            go to state 86
    block_item                 go to state 87
    statement                  go to state 88
    expression_statement       go to state 89
    declaration                go to state 90
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    enum_specifier             go to state 33


State 63

    4 function_definition: declaration_specifiers declarator declaration_list • compound_statement
    6 declaration_list: declaration_list • declaration

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '{'       shift, and go to state 62

    compound_statement         go to state 91
    declaration                go to state 92
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    enum_specifier             go to state 33


State 64

    3 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 3 (function_definition)


State 65

    5 declaration_list: declaration •

    $default  reduce using rule 5 (declaration_list)


State 66

   16 declaration: declaration_specifiers • init_declarator_list ';'
   21 declaration_specifiers: declaration_specifiers • storage_class_specifier
   22                       | declaration_specifiers • type_specifier
   23                       | declaration_specifiers • type_qualifier
   24                       | declaration_specifiers • function_specifier

    IDENT     shift, and go to state 34
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 38
    '*'       shift, and go to state 39

    identifier                 go to state 40
    init_declarator_list       go to state 41
    init_declarator            go to state 42
    storage_class_specifier    go to state 43
    type_specifier             go to state 44
    type_qualifier             go to state 45
    function_specifier         go to state 46
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    enum_specifier             go to state 33
    declarator                 go to state 83
    direct_declarator          go to state 48
    pointer                    go to state 49


State 67

   80 direct_declarator: direct_declarator '(' • parameter_type_list ')'
   81                  | direct_declarator '(' • identifier_list ')'
   82                  | direct_declarator '(' • ')'

    IDENT     shift, and go to state 34
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ')'       shift, and go to state 93

    identifier                 go to state 94
    declaration_specifiers     go to state 95
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    enum_specifier             go to state 33
    parameter_type_list        go to state 96
    parameter_list             go to state 97
    parameter_declaration      go to state 98
    identifier_list            go to state 99


State 68

   76 direct_declarator: direct_declarator '[' • ']'
   77                  | direct_declarator '[' • type_qualifier_list ']'
   78                  | direct_declarator '[' • type_qualifier_list '*' ']'
   79                  | direct_declarator '[' • '*' ']'

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 20
    ']'       shift, and go to state 100
    '*'       shift, and go to state 101

    type_qualifier       go to state 57
    type_qualifier_list  go to state 102


State 69

   73 declarator: pointer direct_declarator •
   76 direct_declarator: direct_declarator • '[' ']'
   77                  | direct_declarator • '[' type_qualifier_list ']'
   78                  | direct_declarator • '[' type_qualifier_list '*' ']'
   79                  | direct_declarator • '[' '*' ']'
   80                  | direct_declarator • '(' parameter_type_list ')'
   81                  | direct_declarator • '(' identifier_list ')'
   82                  | direct_declarator • '(' ')'

    '('  shift, and go to state 67
    '['  shift, and go to state 68

    $default  reduce using rule 73 (declarator)


State 70

   50 struct_or_union_specifier: struct_or_union IDENT '{' • struct_declaration_list '}'

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    type_specifier             go to state 71
    type_qualifier             go to state 72
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    struct_declaration_list    go to state 103
    struct_declaration         go to state 74
    specifier_qualifier_list   go to state 75
    enum_specifier             go to state 33


State 71

   57 specifier_qualifier_list: type_specifier •

    $default  reduce using rule 57 (specifier_qualifier_list)


State 72

   59 specifier_qualifier_list: type_qualifier •

    $default  reduce using rule 59 (specifier_qualifier_list)


State 73

   49 struct_or_union_specifier: struct_or_union '{' struct_declaration_list • '}'
   55 struct_declaration_list: struct_declaration_list • struct_declaration

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '}'       shift, and go to state 104

    type_specifier             go to state 71
    type_qualifier             go to state 72
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    struct_declaration         go to state 105
    specifier_qualifier_list   go to state 75
    enum_specifier             go to state 33


State 74

   54 struct_declaration_list: struct_declaration •

    $default  reduce using rule 54 (struct_declaration_list)


State 75

   56 struct_declaration: specifier_qualifier_list • struct_declarator_list ';'
   58 specifier_qualifier_list: specifier_qualifier_list • type_specifier
   60                         | specifier_qualifier_list • type_qualifier

    IDENT     shift, and go to state 34
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 38
    '*'       shift, and go to state 39

    identifier                 go to state 40
    type_specifier             go to state 106
    type_qualifier             go to state 107
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    struct_declarator_list     go to state 108
    struct_declarator          go to state 109
    enum_specifier             go to state 33
    declarator                 go to state 110
    direct_declarator          go to state 48
    pointer                    go to state 49


State 76

   65 enum_specifier: ENUM '{' enumerator_list '}' •

    $default  reduce using rule 65 (enum_specifier)


State 77

   67 enum_specifier: ENUM '{' enumerator_list ',' • '}'
   70 enumerator_list: enumerator_list ',' • enumerator

    IDENT  shift, and go to state 34
    '}'    shift, and go to state 111

    identifier  go to state 52
    enumerator  go to state 112


State 78

   66 enum_specifier: ENUM identifier '{' enumerator_list • '}'
   68               | ENUM identifier '{' enumerator_list • ',' '}'
   70 enumerator_list: enumerator_list • ',' enumerator

    '}'  shift, and go to state 113
    ','  shift, and go to state 114


State 79

   75 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 75 (direct_declarator)


State 80

   88 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 88 (type_qualifier_list)


State 81

   86 pointer: '*' type_qualifier_list pointer •

    $default  reduce using rule 86 (pointer)


State 82

   26 init_declarator_list: init_declarator_list ',' init_declarator •

    $default  reduce using rule 26 (init_declarator_list)


State 83

   27 init_declarator: declarator •

    $default  reduce using rule 27 (init_declarator)


State 84

   14 expression_statement: ';' •

    $default  reduce using rule 14 (expression_statement)


State 85

   12 statement: compound_statement •

    $default  reduce using rule 12 (statement)


State 86

    7 compound_statement: '{' block_item_list • '}' '{' '}'
    9 block_item_list: block_item_list • block_item

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '{'       shift, and go to state 62
    '}'       shift, and go to state 115
    ';'       shift, and go to state 84

    compound_statement         go to state 85
    block_item                 go to state 116
    statement                  go to state 88
    expression_statement       go to state 89
    declaration                go to state 90
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    enum_specifier             go to state 33


State 87

    8 block_item_list: block_item •

    $default  reduce using rule 8 (block_item_list)


State 88

   11 block_item: statement •

    $default  reduce using rule 11 (block_item)


State 89

   13 statement: expression_statement •

    $default  reduce using rule 13 (statement)


State 90

   10 block_item: declaration •

    $default  reduce using rule 10 (block_item)


State 91

    4 function_definition: declaration_specifiers declarator declaration_list compound_statement •

    $default  reduce using rule 4 (function_definition)


State 92

    6 declaration_list: declaration_list declaration •

    $default  reduce using rule 6 (declaration_list)


State 93

   82 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 82 (direct_declarator)


State 94

   96 identifier_list: identifier •

    $default  reduce using rule 96 (identifier_list)


State 95

   21 declaration_specifiers: declaration_specifiers • storage_class_specifier
   22                       | declaration_specifiers • type_specifier
   23                       | declaration_specifiers • type_qualifier
   24                       | declaration_specifiers • function_specifier
   93 parameter_declaration: declaration_specifiers • declarator
   94                      | declaration_specifiers •
   95                      | declaration_specifiers • abstract_declarator

    IDENT     shift, and go to state 34
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 117
    '['       shift, and go to state 118
    '*'       shift, and go to state 39

    $default  reduce using rule 94 (parameter_declaration)

    identifier                  go to state 40
    storage_class_specifier     go to state 43
    type_specifier              go to state 44
    type_qualifier              go to state 45
    function_specifier          go to state 46
    struct_or_union_specifier   go to state 31
    struct_or_union             go to state 32
    enum_specifier              go to state 33
    declarator                  go to state 119
    direct_declarator           go to state 48
    pointer                     go to state 120
    abstract_declarator         go to state 121
    direct_abstract_declarator  go to state 122


State 96

   80 direct_declarator: direct_declarator '(' parameter_type_list • ')'

    ')'  shift, and go to state 123


State 97

   89 parameter_type_list: parameter_list •
   90                    | parameter_list • ',' "..."
   92 parameter_list: parameter_list • ',' parameter_declaration

    ','  shift, and go to state 124

    $default  reduce using rule 89 (parameter_type_list)


State 98

   91 parameter_list: parameter_declaration •

    $default  reduce using rule 91 (parameter_list)


State 99

   81 direct_declarator: direct_declarator '(' identifier_list • ')'
   97 identifier_list: identifier_list • ',' identifier

    ')'  shift, and go to state 125
    ','  shift, and go to state 126


State 100

   76 direct_declarator: direct_declarator '[' ']' •

    $default  reduce using rule 76 (direct_declarator)


State 101

   79 direct_declarator: direct_declarator '[' '*' • ']'

    ']'  shift, and go to state 127


State 102

   77 direct_declarator: direct_declarator '[' type_qualifier_list • ']'
   78                  | direct_declarator '[' type_qualifier_list • '*' ']'
   88 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 20
    ']'       shift, and go to state 128
    '*'       shift, and go to state 129

    type_qualifier  go to state 80


State 103

   50 struct_or_union_specifier: struct_or_union IDENT '{' struct_declaration_list • '}'
   55 struct_declaration_list: struct_declaration_list • struct_declaration

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '}'       shift, and go to state 130

    type_specifier             go to state 71
    type_qualifier             go to state 72
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    struct_declaration         go to state 105
    specifier_qualifier_list   go to state 75
    enum_specifier             go to state 33


State 104

   49 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}' •

    $default  reduce using rule 49 (struct_or_union_specifier)


State 105

   55 struct_declaration_list: struct_declaration_list struct_declaration •

    $default  reduce using rule 55 (struct_declaration_list)


State 106

   58 specifier_qualifier_list: specifier_qualifier_list type_specifier •

    $default  reduce using rule 58 (specifier_qualifier_list)


State 107

   60 specifier_qualifier_list: specifier_qualifier_list type_qualifier •

    $default  reduce using rule 60 (specifier_qualifier_list)


State 108

   56 struct_declaration: specifier_qualifier_list struct_declarator_list • ';'
   62 struct_declarator_list: struct_declarator_list • ',' struct_declarator

    ';'  shift, and go to state 131
    ','  shift, and go to state 132


State 109

   61 struct_declarator_list: struct_declarator •

    $default  reduce using rule 61 (struct_declarator_list)


State 110

   63 struct_declarator: declarator •

    $default  reduce using rule 63 (struct_declarator)


State 111

   67 enum_specifier: ENUM '{' enumerator_list ',' '}' •

    $default  reduce using rule 67 (enum_specifier)


State 112

   70 enumerator_list: enumerator_list ',' enumerator •

    $default  reduce using rule 70 (enumerator_list)


State 113

   66 enum_specifier: ENUM identifier '{' enumerator_list '}' •

    $default  reduce using rule 66 (enum_specifier)


State 114

   68 enum_specifier: ENUM identifier '{' enumerator_list ',' • '}'
   70 enumerator_list: enumerator_list ',' • enumerator

    IDENT  shift, and go to state 34
    '}'    shift, and go to state 133

    identifier  go to state 52
    enumerator  go to state 112


State 115

    7 compound_statement: '{' block_item_list '}' • '{' '}'

    '{'  shift, and go to state 134


State 116

    9 block_item_list: block_item_list block_item •

    $default  reduce using rule 9 (block_item_list)


State 117

   75 direct_declarator: '(' • declarator ')'
  101 direct_abstract_declarator: '(' • abstract_declarator ')'
  106                           | '(' • ')'
  108                           | '(' • parameter_type_list ')'

    IDENT     shift, and go to state 34
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 117
    ')'       shift, and go to state 135
    '['       shift, and go to state 118
    '*'       shift, and go to state 39

    identifier                  go to state 40
    declaration_specifiers      go to state 95
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    type_qualifier              go to state 29
    function_specifier          go to state 30
    struct_or_union_specifier   go to state 31
    struct_or_union             go to state 32
    enum_specifier              go to state 33
    declarator                  go to state 56
    direct_declarator           go to state 48
    pointer                     go to state 120
    parameter_type_list         go to state 136
    parameter_list              go to state 97
    parameter_declaration       go to state 98
    abstract_declarator         go to state 137
    direct_abstract_declarator  go to state 122


State 118

  102 direct_abstract_declarator: '[' • ']'
  104                           | '[' • '*' ']'

    ']'  shift, and go to state 138
    '*'  shift, and go to state 139


State 119

   93 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 93 (parameter_declaration)


State 120

   73 declarator: pointer • direct_declarator
   98 abstract_declarator: pointer •
  100                    | pointer • direct_abstract_declarator

    IDENT  shift, and go to state 34
    '('    shift, and go to state 117
    '['    shift, and go to state 118

    $default  reduce using rule 98 (abstract_declarator)

    identifier                  go to state 40
    direct_declarator           go to state 69
    direct_abstract_declarator  go to state 140


State 121

   95 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 95 (parameter_declaration)


State 122

   99 abstract_declarator: direct_abstract_declarator •
  103 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
  105                           | direct_abstract_declarator • '[' '*' ']'
  107                           | direct_abstract_declarator • '(' ')'
  109                           | direct_abstract_declarator • '(' parameter_type_list ')'

    '('  shift, and go to state 141
    '['  shift, and go to state 142

    $default  reduce using rule 99 (abstract_declarator)


State 123

   80 direct_declarator: direct_declarator '(' parameter_type_list ')' •

    $default  reduce using rule 80 (direct_declarator)


State 124

   90 parameter_type_list: parameter_list ',' • "..."
   92 parameter_list: parameter_list ',' • parameter_declaration

    "..."     shift, and go to state 143
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    declaration_specifiers     go to state 95
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    enum_specifier             go to state 33
    parameter_declaration      go to state 144


State 125

   81 direct_declarator: direct_declarator '(' identifier_list ')' •

    $default  reduce using rule 81 (direct_declarator)


State 126

   97 identifier_list: identifier_list ',' • identifier

    IDENT  shift, and go to state 34

    identifier  go to state 145


State 127

   79 direct_declarator: direct_declarator '[' '*' ']' •

    $default  reduce using rule 79 (direct_declarator)


State 128

   77 direct_declarator: direct_declarator '[' type_qualifier_list ']' •

    $default  reduce using rule 77 (direct_declarator)


State 129

   78 direct_declarator: direct_declarator '[' type_qualifier_list '*' • ']'

    ']'  shift, and go to state 146


State 130

   50 struct_or_union_specifier: struct_or_union IDENT '{' struct_declaration_list '}' •

    $default  reduce using rule 50 (struct_or_union_specifier)


State 131

   56 struct_declaration: specifier_qualifier_list struct_declarator_list ';' •

    $default  reduce using rule 56 (struct_declaration)


State 132

   62 struct_declarator_list: struct_declarator_list ',' • struct_declarator

    IDENT  shift, and go to state 34
    '('    shift, and go to state 38
    '*'    shift, and go to state 39

    identifier         go to state 40
    struct_declarator  go to state 147
    declarator         go to state 110
    direct_declarator  go to state 48
    pointer            go to state 49


State 133

   68 enum_specifier: ENUM identifier '{' enumerator_list ',' '}' •

    $default  reduce using rule 68 (enum_specifier)


State 134

    7 compound_statement: '{' block_item_list '}' '{' • '}'

    '}'  shift, and go to state 148


State 135

  106 direct_abstract_declarator: '(' ')' •

    $default  reduce using rule 106 (direct_abstract_declarator)


State 136

  108 direct_abstract_declarator: '(' parameter_type_list • ')'

    ')'  shift, and go to state 149


State 137

  101 direct_abstract_declarator: '(' abstract_declarator • ')'

    ')'  shift, and go to state 150


State 138

  102 direct_abstract_declarator: '[' ']' •

    $default  reduce using rule 102 (direct_abstract_declarator)


State 139

  104 direct_abstract_declarator: '[' '*' • ']'

    ']'  shift, and go to state 151


State 140

  100 abstract_declarator: pointer direct_abstract_declarator •
  103 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
  105                           | direct_abstract_declarator • '[' '*' ']'
  107                           | direct_abstract_declarator • '(' ')'
  109                           | direct_abstract_declarator • '(' parameter_type_list ')'

    '('  shift, and go to state 141
    '['  shift, and go to state 142

    $default  reduce using rule 100 (abstract_declarator)


State 141

  107 direct_abstract_declarator: direct_abstract_declarator '(' • ')'
  109                           | direct_abstract_declarator '(' • parameter_type_list ')'

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ')'       shift, and go to state 152

    declaration_specifiers     go to state 95
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    struct_or_union_specifier  go to state 31
    struct_or_union            go to state 32
    enum_specifier             go to state 33
    parameter_type_list        go to state 153
    parameter_list             go to state 97
    parameter_declaration      go to state 98


State 142

  103 direct_abstract_declarator: direct_abstract_declarator '[' • ']'
  105                           | direct_abstract_declarator '[' • '*' ']'

    ']'  shift, and go to state 154
    '*'  shift, and go to state 155


State 143

   90 parameter_type_list: parameter_list ',' "..." •

    $default  reduce using rule 90 (parameter_type_list)


State 144

   92 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 92 (parameter_list)


State 145

   97 identifier_list: identifier_list ',' identifier •

    $default  reduce using rule 97 (identifier_list)


State 146

   78 direct_declarator: direct_declarator '[' type_qualifier_list '*' ']' •

    $default  reduce using rule 78 (direct_declarator)


State 147

   62 struct_declarator_list: struct_declarator_list ',' struct_declarator •

    $default  reduce using rule 62 (struct_declarator_list)


State 148

    7 compound_statement: '{' block_item_list '}' '{' '}' •

    $default  reduce using rule 7 (compound_statement)


State 149

  108 direct_abstract_declarator: '(' parameter_type_list ')' •

    $default  reduce using rule 108 (direct_abstract_declarator)


State 150

  101 direct_abstract_declarator: '(' abstract_declarator ')' •

    $default  reduce using rule 101 (direct_abstract_declarator)


State 151

  104 direct_abstract_declarator: '[' '*' ']' •

    $default  reduce using rule 104 (direct_abstract_declarator)


State 152

  107 direct_abstract_declarator: direct_abstract_declarator '(' ')' •

    $default  reduce using rule 107 (direct_abstract_declarator)


State 153

  109 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list • ')'

    ')'  shift, and go to state 156


State 154

  103 direct_abstract_declarator: direct_abstract_declarator '[' ']' •

    $default  reduce using rule 103 (direct_abstract_declarator)


State 155

  105 direct_abstract_declarator: direct_abstract_declarator '[' '*' • ']'

    ']'  shift, and go to state 157


State 156

  109 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list ')' •

    $default  reduce using rule 109 (direct_abstract_declarator)


State 157

  105 direct_abstract_declarator: direct_abstract_declarator '[' '*' ']' •

    $default  reduce using rule 105 (direct_abstract_declarator)
