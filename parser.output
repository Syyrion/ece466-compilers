Terminals unused in grammar

    BREAK
    CASE
    CONTINUE
    DEFAULT
    DO
    ELSE
    FOR
    GOTO
    IF
    RETURN
    SWITCH
    TYPEDEF
    WHILE
    _IMAGINARY


Grammar

    0 $accept: external_declaration_list $end

    1 external_declaration_list: external_declaration
    2                          | external_declaration_list external_declaration

    3 external_declaration: function_definition
    4                     | declaration

    5 function_definition: declaration_specifiers declarator compound_statement
    6                    | declaration_specifiers declarator declaration_list compound_statement

    7 declaration_list: declaration
    8                 | declaration_list declaration

    9 compound_statement: '{' block_item_list '}'
   10                   | '{' '}'

   11 block_item_list: block_item
   12                | block_item_list block_item

   13 block_item: declaration
   14           | statement

   15 statement: compound_statement
   16          | expression_statement

   17 expression_statement: expression ';'
   18                     | ';'

   19 identifier: IDENT

   20 string_literal: STRINGLIT

   21 constant: CHARLIT
   22         | NUMBERLIT

   23 primary_expression: identifier
   24                   | constant
   25                   | string_literal
   26                   | '(' expression ')'

   27 postfix_expression: primary_expression
   28                   | postfix_expression '[' expression ']'
   29                   | postfix_expression '(' ')'
   30                   | postfix_expression '(' argument_expression_list ')'
   31                   | postfix_expression '.' identifier
   32                   | postfix_expression "->" identifier
   33                   | postfix_expression "++"
   34                   | postfix_expression "--"

   35 argument_expression_list: assignment_expression
   36                         | argument_expression_list ',' assignment_expression

   37 unary_expression: postfix_expression
   38                 | "++" unary_expression
   39                 | "--" unary_expression
   40                 | '&' cast_expression
   41                 | '*' cast_expression
   42                 | '+' cast_expression
   43                 | '-' cast_expression
   44                 | '~' cast_expression
   45                 | '!' cast_expression
   46                 | SIZEOF unary_expression
   47                 | SIZEOF '(' type_name ')'
   48                 | ALIGNOF unary_expression

   49 cast_expression: unary_expression
   50                | '(' type_name ')' cast_expression

   51 multiplicative_expression: cast_expression
   52                          | multiplicative_expression '*' cast_expression
   53                          | multiplicative_expression '/' cast_expression
   54                          | multiplicative_expression '%' cast_expression

   55 additive_expression: multiplicative_expression
   56                    | additive_expression '+' multiplicative_expression
   57                    | additive_expression '-' multiplicative_expression

   58 shift_expression: additive_expression
   59                 | shift_expression "<<" additive_expression
   60                 | shift_expression ">>" additive_expression

   61 relational_expression: shift_expression
   62                      | relational_expression '<' shift_expression
   63                      | relational_expression "<=" shift_expression
   64                      | relational_expression '>' shift_expression
   65                      | relational_expression ">=" shift_expression

   66 equality_expression: relational_expression
   67                    | equality_expression "==" relational_expression
   68                    | equality_expression "!=" relational_expression

   69 and_expression: equality_expression
   70               | and_expression '&' equality_expression

   71 xor_expression: and_expression
   72               | xor_expression '^' and_expression

   73 or_expression: xor_expression
   74              | or_expression '|' xor_expression

   75 logical_and_expression: or_expression
   76                       | logical_and_expression "&&" or_expression

   77 logical_or_expression: logical_and_expression
   78                      | logical_or_expression "||" logical_and_expression

   79 conditional_expression: logical_or_expression
   80                       | logical_or_expression '?' expression ':' conditional_expression

   81 assignment_expression: conditional_expression
   82                      | unary_expression assignment_operator assignment_expression

   83 assignment_operator: '='
   84                    | "*="
   85                    | "/="
   86                    | "%="
   87                    | "+="
   88                    | "-="
   89                    | "<<="
   90                    | ">>="
   91                    | "&="
   92                    | "^="
   93                    | "|="

   94 expression: assignment_expression
   95           | expression ',' assignment_expression

   96 constant_expression: conditional_expression

   97 declaration: declaration_specifiers init_declarator_list ';'

   98 declaration_specifiers: storage_class_specifier
   99                       | type_specifier
  100                       | type_qualifier
  101                       | function_specifier
  102                       | declaration_specifiers storage_class_specifier
  103                       | declaration_specifiers type_specifier
  104                       | declaration_specifiers type_qualifier
  105                       | declaration_specifiers function_specifier

  106 init_declarator_list: init_declarator
  107                     | init_declarator_list ',' init_declarator

  108 init_declarator: declarator
  109                | declarator '=' initializer

  110 storage_class_specifier: EXTERN
  111                        | STATIC
  112                        | AUTO
  113                        | REGISTER

  114 type_specifier: VOID
  115               | CHAR
  116               | SHORT
  117               | INT
  118               | LONG
  119               | FLOAT
  120               | DOUBLE
  121               | SIGNED
  122               | UNSIGNED
  123               | _BOOL
  124               | _COMPLEX
  125               | struct_or_union_specifier
  126               | enum_specifier

  127 type_qualifier: CONST
  128               | RESTRICT
  129               | VOLATILE

  130 function_specifier: INLINE

  131 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}'
  132                          | struct_or_union IDENT '{' struct_declaration_list '}'
  133                          | struct_or_union IDENT

  134 struct_or_union: STRUCT
  135                | UNION

  136 struct_declaration_list: struct_declaration
  137                        | struct_declaration_list struct_declaration

  138 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  139 specifier_qualifier_list: type_specifier
  140                         | specifier_qualifier_list type_specifier
  141                         | type_qualifier
  142                         | specifier_qualifier_list type_qualifier

  143 struct_declarator_list: struct_declarator
  144                       | struct_declarator_list ',' struct_declarator

  145 struct_declarator: declarator
  146                  | ':' constant_expression
  147                  | declarator ':' constant_expression

  148 enum_specifier: ENUM identifier
  149               | ENUM '{' enumerator_list '}'
  150               | ENUM identifier '{' enumerator_list '}'
  151               | ENUM '{' enumerator_list ',' '}'
  152               | ENUM identifier '{' enumerator_list ',' '}'

  153 enumerator_list: enumerator
  154                | enumerator_list ',' enumerator

  155 enumerator: identifier
  156           | identifier '=' constant_expression

  157 declarator: direct_declarator
  158           | pointer direct_declarator

  159 direct_declarator: identifier
  160                  | '(' declarator ')'
  161                  | direct_declarator '[' ']'
  162                  | direct_declarator '[' type_qualifier_list ']'
  163                  | direct_declarator '[' assignment_expression ']'
  164                  | direct_declarator '[' type_qualifier_list assignment_expression ']'
  165                  | direct_declarator '[' STATIC assignment_expression ']'
  166                  | direct_declarator '[' STATIC type_qualifier_list assignment_expression ']'
  167                  | direct_declarator '[' type_qualifier_list STATIC assignment_expression ']'
  168                  | direct_declarator '[' type_qualifier_list '*' ']'
  169                  | direct_declarator '[' '*' ']'
  170                  | direct_declarator '(' parameter_type_list ')'
  171                  | direct_declarator '(' identifier_list ')'
  172                  | direct_declarator '(' ')'

  173 pointer: '*'
  174        | '*' type_qualifier_list
  175        | '*' pointer
  176        | '*' type_qualifier_list pointer

  177 type_qualifier_list: type_qualifier
  178                    | type_qualifier_list type_qualifier

  179 parameter_type_list: parameter_list
  180                    | parameter_list ',' "..."

  181 parameter_list: parameter_declaration
  182               | parameter_list ',' parameter_declaration

  183 parameter_declaration: declaration_specifiers declarator
  184                      | declaration_specifiers
  185                      | declaration_specifiers abstract_declarator

  186 identifier_list: identifier
  187                | identifier_list ',' identifier

  188 type_name: specifier_qualifier_list
  189          | specifier_qualifier_list abstract_declarator

  190 abstract_declarator: pointer
  191                    | direct_abstract_declarator
  192                    | pointer direct_abstract_declarator

  193 direct_abstract_declarator: '(' abstract_declarator ')'
  194                           | '[' ']'
  195                           | direct_abstract_declarator '[' ']'
  196                           | '[' assignment_expression ']'
  197                           | direct_abstract_declarator '[' assignment_expression ']'
  198                           | '[' '*' ']'
  199                           | direct_abstract_declarator '[' '*' ']'
  200                           | '(' ')'
  201                           | direct_abstract_declarator '(' ')'
  202                           | '(' parameter_type_list ')'
  203                           | direct_abstract_declarator '(' parameter_type_list ')'

  204 initializer: assignment_expression


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 45
    '%' (37) 54
    '&' (38) 40 70
    '(' (40) 26 29 30 47 50 160 170 171 172 193 200 201 202 203
    ')' (41) 26 29 30 47 50 160 170 171 172 193 200 201 202 203
    '*' (42) 41 52 168 169 173 174 175 176 198 199
    '+' (43) 42 56
    ',' (44) 36 95 107 144 151 152 154 180 182 187
    '-' (45) 43 57
    '.' (46) 31
    '/' (47) 53
    ':' (58) 80 146 147
    ';' (59) 17 18 97 138
    '<' (60) 62
    '=' (61) 83 109 156
    '>' (62) 64
    '?' (63) 80
    '[' (91) 28 161 162 163 164 165 166 167 168 169 194 195 196 197 198 199
    ']' (93) 28 161 162 163 164 165 166 167 168 169 194 195 196 197 198 199
    '^' (94) 72
    '{' (123) 9 10 131 132 149 150 151 152
    '|' (124) 74
    '}' (125) 9 10 131 132 149 150 151 152
    '~' (126) 44
    error (256)
    IDENT <string> (258) 19 132 133
    CHARLIT <string> (259) 21
    STRINGLIT <string> (260) 20
    NUMBERLIT <number> (261) 22
    "->" (262) 32
    "++" (263) 33 38
    "--" (264) 34 39
    "<<" (265) 59
    ">>" (266) 60
    "<=" (267) 63
    ">=" (268) 65
    "==" (269) 67
    "!=" (270) 68
    "&&" (271) 76
    "||" (272) 78
    "..." (273) 180
    "*=" (274) 84
    "/=" (275) 85
    "%=" (276) 86
    "+=" (277) 87
    "-=" (278) 88
    "<<=" (279) 89
    ">>=" (280) 90
    "&=" (281) 91
    "|=" (282) 93
    "^=" (283) 92
    AUTO (284) 112
    ALIGNOF (285) 48
    BREAK (286)
    CASE (287)
    CHAR (288) 115
    CONST (289) 127
    CONTINUE (290)
    DEFAULT (291)
    DO (292)
    DOUBLE (293) 120
    ELSE (294)
    ENUM (295) 148 149 150 151 152
    EXTERN (296) 110
    FLOAT (297) 119
    FOR (298)
    GOTO (299)
    IF (300)
    INLINE (301) 130
    INT (302) 117
    LONG (303) 118
    REGISTER (304) 113
    RESTRICT (305) 128
    RETURN (306)
    SHORT (307) 116
    SIGNED (308) 121
    SIZEOF (309) 46 47
    STATIC (310) 111 165 166 167
    STRUCT (311) 134
    SWITCH (312)
    TYPEDEF (313)
    UNION (314) 135
    UNSIGNED (315) 122
    VOID (316) 114
    VOLATILE (317) 129
    WHILE (318)
    _BOOL (319) 123
    _COMPLEX (320) 124
    _IMAGINARY (321)


Nonterminals, with rules where they appear

    $accept (91)
        on left: 0
    external_declaration_list (92)
        on left: 1 2
        on right: 0 2
    external_declaration (93)
        on left: 3 4
        on right: 1 2
    function_definition (94)
        on left: 5 6
        on right: 3
    declaration_list (95)
        on left: 7 8
        on right: 6 8
    compound_statement (96)
        on left: 9 10
        on right: 5 6 15
    block_item_list (97)
        on left: 11 12
        on right: 9 12
    block_item (98)
        on left: 13 14
        on right: 11 12
    statement (99)
        on left: 15 16
        on right: 14
    expression_statement (100)
        on left: 17 18
        on right: 16
    identifier <node> (101)
        on left: 19
        on right: 23 31 32 148 150 152 155 156 159 186 187
    string_literal <node> (102)
        on left: 20
        on right: 25
    constant <node> (103)
        on left: 21 22
        on right: 24
    primary_expression <node> (104)
        on left: 23 24 25 26
        on right: 27
    postfix_expression <node> (105)
        on left: 27 28 29 30 31 32 33 34
        on right: 28 29 30 31 32 33 34 37
    argument_expression_list <node_list> (106)
        on left: 35 36
        on right: 30 36
    unary_expression <node> (107)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48
        on right: 38 39 46 48 49 82
    cast_expression <node> (108)
        on left: 49 50
        on right: 40 41 42 43 44 45 50 51 52 53 54
    multiplicative_expression <node> (109)
        on left: 51 52 53 54
        on right: 52 53 54 55 56 57
    additive_expression <node> (110)
        on left: 55 56 57
        on right: 56 57 58 59 60
    shift_expression <node> (111)
        on left: 58 59 60
        on right: 59 60 61 62 63 64 65
    relational_expression <node> (112)
        on left: 61 62 63 64 65
        on right: 62 63 64 65 66 67 68
    equality_expression <node> (113)
        on left: 66 67 68
        on right: 67 68 69 70
    and_expression <node> (114)
        on left: 69 70
        on right: 70 71 72
    xor_expression <node> (115)
        on left: 71 72
        on right: 72 73 74
    or_expression <node> (116)
        on left: 73 74
        on right: 74 75 76
    logical_and_expression <node> (117)
        on left: 75 76
        on right: 76 77 78
    logical_or_expression <node> (118)
        on left: 77 78
        on right: 78 79 80
    conditional_expression <node> (119)
        on left: 79 80
        on right: 80 81 96
    assignment_expression <node> (120)
        on left: 81 82
        on right: 35 36 82 94 95 163 164 165 166 167 196 197 204
    assignment_operator <integer> (121)
        on left: 83 84 85 86 87 88 89 90 91 92 93
        on right: 82
    expression <node> (122)
        on left: 94 95
        on right: 17 26 28 80 95
    constant_expression <node> (123)
        on left: 96
        on right: 146 147 156
    declaration (124)
        on left: 97
        on right: 4 7 8 13
    declaration_specifiers <node> (125)
        on left: 98 99 100 101 102 103 104 105
        on right: 5 6 97 102 103 104 105 183 184 185
    init_declarator_list (126)
        on left: 106 107
        on right: 97 107
    init_declarator (127)
        on left: 108 109
        on right: 106 107
    storage_class_specifier <storage_class_specifier> (128)
        on left: 110 111 112 113
        on right: 98 102
    type_specifier <type_specifier> (129)
        on left: 114 115 116 117 118 119 120 121 122 123 124 125 126
        on right: 99 103 139 140
    type_qualifier <type_qualifier> (130)
        on left: 127 128 129
        on right: 100 104 141 142 177 178
    function_specifier <function_specifier> (131)
        on left: 130
        on right: 101 105
    struct_or_union_specifier <node> (132)
        on left: 131 132 133
        on right: 125
    struct_or_union (133)
        on left: 134 135
        on right: 131 132 133
    struct_declaration_list (134)
        on left: 136 137
        on right: 131 132 137
    struct_declaration (135)
        on left: 138
        on right: 136 137
    specifier_qualifier_list (136)
        on left: 139 140 141 142
        on right: 138 140 142 188 189
    struct_declarator_list (137)
        on left: 143 144
        on right: 138 144
    struct_declarator (138)
        on left: 145 146 147
        on right: 143 144
    enum_specifier <node> (139)
        on left: 148 149 150 151 152
        on right: 126
    enumerator_list (140)
        on left: 153 154
        on right: 149 150 151 152 154
    enumerator (141)
        on left: 155 156
        on right: 153 154
    declarator (142)
        on left: 157 158
        on right: 5 6 108 109 145 147 160 183
    direct_declarator (143)
        on left: 159 160 161 162 163 164 165 166 167 168 169 170 171 172
        on right: 157 158 161 162 163 164 165 166 167 168 169 170 171 172
    pointer (144)
        on left: 173 174 175 176
        on right: 158 175 176 190 192
    type_qualifier_list <type_qualifier> (145)
        on left: 177 178
        on right: 162 164 166 167 168 174 176 178
    parameter_type_list (146)
        on left: 179 180
        on right: 170 202 203
    parameter_list (147)
        on left: 181 182
        on right: 179 180 182
    parameter_declaration (148)
        on left: 183 184 185
        on right: 181 182
    identifier_list (149)
        on left: 186 187
        on right: 171 187
    type_name (150)
        on left: 188 189
        on right: 47 50
    abstract_declarator (151)
        on left: 190 191 192
        on right: 185 189 193
    direct_abstract_declarator (152)
        on left: 193 194 195 196 197 198 199 200 201 202 203
        on right: 191 192 195 197 199 201 203
    initializer <node> (153)
        on left: 204
        on right: 109


State 0

    0 $accept: • external_declaration_list $end

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    external_declaration_list  go to state 23
    external_declaration       go to state 24
    function_definition        go to state 25
    declaration                go to state 26
    declaration_specifiers     go to state 27
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 1

  112 storage_class_specifier: AUTO •

    $default  reduce using rule 112 (storage_class_specifier)


State 2

  115 type_specifier: CHAR •

    $default  reduce using rule 115 (type_specifier)


State 3

  127 type_qualifier: CONST •

    $default  reduce using rule 127 (type_qualifier)


State 4

  120 type_specifier: DOUBLE •

    $default  reduce using rule 120 (type_specifier)


State 5

  148 enum_specifier: ENUM • identifier
  149               | ENUM • '{' enumerator_list '}'
  150               | ENUM • identifier '{' enumerator_list '}'
  151               | ENUM • '{' enumerator_list ',' '}'
  152               | ENUM • identifier '{' enumerator_list ',' '}'

    IDENT  shift, and go to state 35
    '{'    shift, and go to state 36

    identifier  go to state 37


State 6

  110 storage_class_specifier: EXTERN •

    $default  reduce using rule 110 (storage_class_specifier)


State 7

  119 type_specifier: FLOAT •

    $default  reduce using rule 119 (type_specifier)


State 8

  130 function_specifier: INLINE •

    $default  reduce using rule 130 (function_specifier)


State 9

  117 type_specifier: INT •

    $default  reduce using rule 117 (type_specifier)


State 10

  118 type_specifier: LONG •

    $default  reduce using rule 118 (type_specifier)


State 11

  113 storage_class_specifier: REGISTER •

    $default  reduce using rule 113 (storage_class_specifier)


State 12

  128 type_qualifier: RESTRICT •

    $default  reduce using rule 128 (type_qualifier)


State 13

  116 type_specifier: SHORT •

    $default  reduce using rule 116 (type_specifier)


State 14

  121 type_specifier: SIGNED •

    $default  reduce using rule 121 (type_specifier)


State 15

  111 storage_class_specifier: STATIC •

    $default  reduce using rule 111 (storage_class_specifier)


State 16

  134 struct_or_union: STRUCT •

    $default  reduce using rule 134 (struct_or_union)


State 17

  135 struct_or_union: UNION •

    $default  reduce using rule 135 (struct_or_union)


State 18

  122 type_specifier: UNSIGNED •

    $default  reduce using rule 122 (type_specifier)


State 19

  114 type_specifier: VOID •

    $default  reduce using rule 114 (type_specifier)


State 20

  129 type_qualifier: VOLATILE •

    $default  reduce using rule 129 (type_qualifier)


State 21

  123 type_specifier: _BOOL •

    $default  reduce using rule 123 (type_specifier)


State 22

  124 type_specifier: _COMPLEX •

    $default  reduce using rule 124 (type_specifier)


State 23

    0 $accept: external_declaration_list • $end
    2 external_declaration_list: external_declaration_list • external_declaration

    $end      shift, and go to state 38
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    external_declaration       go to state 39
    function_definition        go to state 25
    declaration                go to state 26
    declaration_specifiers     go to state 27
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 24

    1 external_declaration_list: external_declaration •

    $default  reduce using rule 1 (external_declaration_list)


State 25

    3 external_declaration: function_definition •

    $default  reduce using rule 3 (external_declaration)


State 26

    4 external_declaration: declaration •

    $default  reduce using rule 4 (external_declaration)


State 27

    5 function_definition: declaration_specifiers • declarator compound_statement
    6                    | declaration_specifiers • declarator declaration_list compound_statement
   97 declaration: declaration_specifiers • init_declarator_list ';'
  102 declaration_specifiers: declaration_specifiers • storage_class_specifier
  103                       | declaration_specifiers • type_specifier
  104                       | declaration_specifiers • type_qualifier
  105                       | declaration_specifiers • function_specifier

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 40
    '*'       shift, and go to state 41

    identifier                 go to state 42
    init_declarator_list       go to state 43
    init_declarator            go to state 44
    storage_class_specifier    go to state 45
    type_specifier             go to state 46
    type_qualifier             go to state 47
    function_specifier         go to state 48
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    declarator                 go to state 49
    direct_declarator          go to state 50
    pointer                    go to state 51


State 28

   98 declaration_specifiers: storage_class_specifier •

    $default  reduce using rule 98 (declaration_specifiers)


State 29

   99 declaration_specifiers: type_specifier •

    $default  reduce using rule 99 (declaration_specifiers)


State 30

  100 declaration_specifiers: type_qualifier •

    $default  reduce using rule 100 (declaration_specifiers)


State 31

  101 declaration_specifiers: function_specifier •

    $default  reduce using rule 101 (declaration_specifiers)


State 32

  125 type_specifier: struct_or_union_specifier •

    $default  reduce using rule 125 (type_specifier)


State 33

  131 struct_or_union_specifier: struct_or_union • '{' struct_declaration_list '}'
  132                          | struct_or_union • IDENT '{' struct_declaration_list '}'
  133                          | struct_or_union • IDENT

    IDENT  shift, and go to state 52
    '{'    shift, and go to state 53


State 34

  126 type_specifier: enum_specifier •

    $default  reduce using rule 126 (type_specifier)


State 35

   19 identifier: IDENT •

    $default  reduce using rule 19 (identifier)


State 36

  149 enum_specifier: ENUM '{' • enumerator_list '}'
  151               | ENUM '{' • enumerator_list ',' '}'

    IDENT  shift, and go to state 35

    identifier       go to state 54
    enumerator_list  go to state 55
    enumerator       go to state 56


State 37

  148 enum_specifier: ENUM identifier •
  150               | ENUM identifier • '{' enumerator_list '}'
  152               | ENUM identifier • '{' enumerator_list ',' '}'

    '{'  shift, and go to state 57

    $default  reduce using rule 148 (enum_specifier)


State 38

    0 $accept: external_declaration_list $end •

    $default  accept


State 39

    2 external_declaration_list: external_declaration_list external_declaration •

    $default  reduce using rule 2 (external_declaration_list)


State 40

  160 direct_declarator: '(' • declarator ')'

    IDENT  shift, and go to state 35
    '('    shift, and go to state 40
    '*'    shift, and go to state 41

    identifier         go to state 42
    declarator         go to state 58
    direct_declarator  go to state 50
    pointer            go to state 51


State 41

  173 pointer: '*' •
  174        | '*' • type_qualifier_list
  175        | '*' • pointer
  176        | '*' • type_qualifier_list pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 20
    '*'       shift, and go to state 41

    $default  reduce using rule 173 (pointer)

    type_qualifier       go to state 59
    pointer              go to state 60
    type_qualifier_list  go to state 61


State 42

  159 direct_declarator: identifier •

    $default  reduce using rule 159 (direct_declarator)


State 43

   97 declaration: declaration_specifiers init_declarator_list • ';'
  107 init_declarator_list: init_declarator_list • ',' init_declarator

    ';'  shift, and go to state 62
    ','  shift, and go to state 63


State 44

  106 init_declarator_list: init_declarator •

    $default  reduce using rule 106 (init_declarator_list)


State 45

  102 declaration_specifiers: declaration_specifiers storage_class_specifier •

    $default  reduce using rule 102 (declaration_specifiers)


State 46

  103 declaration_specifiers: declaration_specifiers type_specifier •

    $default  reduce using rule 103 (declaration_specifiers)


State 47

  104 declaration_specifiers: declaration_specifiers type_qualifier •

    $default  reduce using rule 104 (declaration_specifiers)


State 48

  105 declaration_specifiers: declaration_specifiers function_specifier •

    $default  reduce using rule 105 (declaration_specifiers)


State 49

    5 function_definition: declaration_specifiers declarator • compound_statement
    6                    | declaration_specifiers declarator • declaration_list compound_statement
  108 init_declarator: declarator •
  109                | declarator • '=' initializer

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '{'       shift, and go to state 64
    '='       shift, and go to state 65

    $default  reduce using rule 108 (init_declarator)

    declaration_list           go to state 66
    compound_statement         go to state 67
    declaration                go to state 68
    declaration_specifiers     go to state 69
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 50

  157 declarator: direct_declarator •
  161 direct_declarator: direct_declarator • '[' ']'
  162                  | direct_declarator • '[' type_qualifier_list ']'
  163                  | direct_declarator • '[' assignment_expression ']'
  164                  | direct_declarator • '[' type_qualifier_list assignment_expression ']'
  165                  | direct_declarator • '[' STATIC assignment_expression ']'
  166                  | direct_declarator • '[' STATIC type_qualifier_list assignment_expression ']'
  167                  | direct_declarator • '[' type_qualifier_list STATIC assignment_expression ']'
  168                  | direct_declarator • '[' type_qualifier_list '*' ']'
  169                  | direct_declarator • '[' '*' ']'
  170                  | direct_declarator • '(' parameter_type_list ')'
  171                  | direct_declarator • '(' identifier_list ')'
  172                  | direct_declarator • '(' ')'

    '('  shift, and go to state 70
    '['  shift, and go to state 71

    $default  reduce using rule 157 (declarator)


State 51

  158 declarator: pointer • direct_declarator

    IDENT  shift, and go to state 35
    '('    shift, and go to state 40

    identifier         go to state 42
    direct_declarator  go to state 72


State 52

  132 struct_or_union_specifier: struct_or_union IDENT • '{' struct_declaration_list '}'
  133                          | struct_or_union IDENT •

    '{'  shift, and go to state 73

    $default  reduce using rule 133 (struct_or_union_specifier)


State 53

  131 struct_or_union_specifier: struct_or_union '{' • struct_declaration_list '}'

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    type_specifier             go to state 74
    type_qualifier             go to state 75
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration_list    go to state 76
    struct_declaration         go to state 77
    specifier_qualifier_list   go to state 78
    enum_specifier             go to state 34


State 54

  155 enumerator: identifier •
  156           | identifier • '=' constant_expression

    '='  shift, and go to state 79

    $default  reduce using rule 155 (enumerator)


State 55

  149 enum_specifier: ENUM '{' enumerator_list • '}'
  151               | ENUM '{' enumerator_list • ',' '}'
  154 enumerator_list: enumerator_list • ',' enumerator

    '}'  shift, and go to state 80
    ','  shift, and go to state 81


State 56

  153 enumerator_list: enumerator •

    $default  reduce using rule 153 (enumerator_list)


State 57

  150 enum_specifier: ENUM identifier '{' • enumerator_list '}'
  152               | ENUM identifier '{' • enumerator_list ',' '}'

    IDENT  shift, and go to state 35

    identifier       go to state 54
    enumerator_list  go to state 82
    enumerator       go to state 56


State 58

  160 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 83


State 59

  177 type_qualifier_list: type_qualifier •

    $default  reduce using rule 177 (type_qualifier_list)


State 60

  175 pointer: '*' pointer •

    $default  reduce using rule 175 (pointer)


State 61

  174 pointer: '*' type_qualifier_list •
  176        | '*' type_qualifier_list • pointer
  178 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 20
    '*'       shift, and go to state 41

    $default  reduce using rule 174 (pointer)

    type_qualifier  go to state 84
    pointer         go to state 85


State 62

   97 declaration: declaration_specifiers init_declarator_list ';' •

    $default  reduce using rule 97 (declaration)


State 63

  107 init_declarator_list: init_declarator_list ',' • init_declarator

    IDENT  shift, and go to state 35
    '('    shift, and go to state 40
    '*'    shift, and go to state 41

    identifier         go to state 42
    init_declarator    go to state 86
    declarator         go to state 87
    direct_declarator  go to state 50
    pointer            go to state 51


State 64

    9 compound_statement: '{' • block_item_list '}'
   10                   | '{' • '}'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    AUTO       shift, and go to state 1
    ALIGNOF    shift, and go to state 93
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    SIZEOF     shift, and go to state 94
    STATIC     shift, and go to state 15
    STRUCT     shift, and go to state 16
    UNION      shift, and go to state 17
    UNSIGNED   shift, and go to state 18
    VOID       shift, and go to state 19
    VOLATILE   shift, and go to state 20
    _BOOL      shift, and go to state 21
    _COMPLEX   shift, and go to state 22
    '{'        shift, and go to state 64
    '}'        shift, and go to state 95
    ';'        shift, and go to state 96
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    compound_statement         go to state 104
    block_item_list            go to state 105
    block_item                 go to state 106
    statement                  go to state 107
    expression_statement       go to state 108
    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 127
    expression                 go to state 128
    declaration                go to state 129
    declaration_specifiers     go to state 69
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 65

  109 init_declarator: declarator '=' • initializer

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 130
    initializer                go to state 131


State 66

    6 function_definition: declaration_specifiers declarator declaration_list • compound_statement
    8 declaration_list: declaration_list • declaration

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '{'       shift, and go to state 64

    compound_statement         go to state 132
    declaration                go to state 133
    declaration_specifiers     go to state 69
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 67

    5 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 5 (function_definition)


State 68

    7 declaration_list: declaration •

    $default  reduce using rule 7 (declaration_list)


State 69

   97 declaration: declaration_specifiers • init_declarator_list ';'
  102 declaration_specifiers: declaration_specifiers • storage_class_specifier
  103                       | declaration_specifiers • type_specifier
  104                       | declaration_specifiers • type_qualifier
  105                       | declaration_specifiers • function_specifier

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 40
    '*'       shift, and go to state 41

    identifier                 go to state 42
    init_declarator_list       go to state 43
    init_declarator            go to state 44
    storage_class_specifier    go to state 45
    type_specifier             go to state 46
    type_qualifier             go to state 47
    function_specifier         go to state 48
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    declarator                 go to state 87
    direct_declarator          go to state 50
    pointer                    go to state 51


State 70

  170 direct_declarator: direct_declarator '(' • parameter_type_list ')'
  171                  | direct_declarator '(' • identifier_list ')'
  172                  | direct_declarator '(' • ')'

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ')'       shift, and go to state 134

    identifier                 go to state 135
    declaration_specifiers     go to state 136
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    parameter_type_list        go to state 137
    parameter_list             go to state 138
    parameter_declaration      go to state 139
    identifier_list            go to state 140


State 71

  161 direct_declarator: direct_declarator '[' • ']'
  162                  | direct_declarator '[' • type_qualifier_list ']'
  163                  | direct_declarator '[' • assignment_expression ']'
  164                  | direct_declarator '[' • type_qualifier_list assignment_expression ']'
  165                  | direct_declarator '[' • STATIC assignment_expression ']'
  166                  | direct_declarator '[' • STATIC type_qualifier_list assignment_expression ']'
  167                  | direct_declarator '[' • type_qualifier_list STATIC assignment_expression ']'
  168                  | direct_declarator '[' • type_qualifier_list '*' ']'
  169                  | direct_declarator '[' • '*' ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    CONST      shift, and go to state 3
    RESTRICT   shift, and go to state 12
    SIZEOF     shift, and go to state 94
    STATIC     shift, and go to state 141
    VOLATILE   shift, and go to state 20
    '('        shift, and go to state 97
    ']'        shift, and go to state 142
    '&'        shift, and go to state 98
    '*'        shift, and go to state 143
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 144
    type_qualifier             go to state 59
    type_qualifier_list        go to state 145


State 72

  158 declarator: pointer direct_declarator •
  161 direct_declarator: direct_declarator • '[' ']'
  162                  | direct_declarator • '[' type_qualifier_list ']'
  163                  | direct_declarator • '[' assignment_expression ']'
  164                  | direct_declarator • '[' type_qualifier_list assignment_expression ']'
  165                  | direct_declarator • '[' STATIC assignment_expression ']'
  166                  | direct_declarator • '[' STATIC type_qualifier_list assignment_expression ']'
  167                  | direct_declarator • '[' type_qualifier_list STATIC assignment_expression ']'
  168                  | direct_declarator • '[' type_qualifier_list '*' ']'
  169                  | direct_declarator • '[' '*' ']'
  170                  | direct_declarator • '(' parameter_type_list ')'
  171                  | direct_declarator • '(' identifier_list ')'
  172                  | direct_declarator • '(' ')'

    '('  shift, and go to state 70
    '['  shift, and go to state 71

    $default  reduce using rule 158 (declarator)


State 73

  132 struct_or_union_specifier: struct_or_union IDENT '{' • struct_declaration_list '}'

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    type_specifier             go to state 74
    type_qualifier             go to state 75
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration_list    go to state 146
    struct_declaration         go to state 77
    specifier_qualifier_list   go to state 78
    enum_specifier             go to state 34


State 74

  139 specifier_qualifier_list: type_specifier •

    $default  reduce using rule 139 (specifier_qualifier_list)


State 75

  141 specifier_qualifier_list: type_qualifier •

    $default  reduce using rule 141 (specifier_qualifier_list)


State 76

  131 struct_or_union_specifier: struct_or_union '{' struct_declaration_list • '}'
  137 struct_declaration_list: struct_declaration_list • struct_declaration

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '}'       shift, and go to state 147

    type_specifier             go to state 74
    type_qualifier             go to state 75
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration         go to state 148
    specifier_qualifier_list   go to state 78
    enum_specifier             go to state 34


State 77

  136 struct_declaration_list: struct_declaration •

    $default  reduce using rule 136 (struct_declaration_list)


State 78

  138 struct_declaration: specifier_qualifier_list • struct_declarator_list ';'
  140 specifier_qualifier_list: specifier_qualifier_list • type_specifier
  142                         | specifier_qualifier_list • type_qualifier

    IDENT     shift, and go to state 35
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 40
    '*'       shift, and go to state 41
    ':'       shift, and go to state 149

    identifier                 go to state 42
    type_specifier             go to state 150
    type_qualifier             go to state 151
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declarator_list     go to state 152
    struct_declarator          go to state 153
    enum_specifier             go to state 34
    declarator                 go to state 154
    direct_declarator          go to state 50
    pointer                    go to state 51


State 79

  156 enumerator: identifier '=' • constant_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 156
    constant_expression        go to state 157


State 80

  149 enum_specifier: ENUM '{' enumerator_list '}' •

    $default  reduce using rule 149 (enum_specifier)


State 81

  151 enum_specifier: ENUM '{' enumerator_list ',' • '}'
  154 enumerator_list: enumerator_list ',' • enumerator

    IDENT  shift, and go to state 35
    '}'    shift, and go to state 158

    identifier  go to state 54
    enumerator  go to state 159


State 82

  150 enum_specifier: ENUM identifier '{' enumerator_list • '}'
  152               | ENUM identifier '{' enumerator_list • ',' '}'
  154 enumerator_list: enumerator_list • ',' enumerator

    '}'  shift, and go to state 160
    ','  shift, and go to state 161


State 83

  160 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 160 (direct_declarator)


State 84

  178 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 178 (type_qualifier_list)


State 85

  176 pointer: '*' type_qualifier_list pointer •

    $default  reduce using rule 176 (pointer)


State 86

  107 init_declarator_list: init_declarator_list ',' init_declarator •

    $default  reduce using rule 107 (init_declarator_list)


State 87

  108 init_declarator: declarator •
  109                | declarator • '=' initializer

    '='  shift, and go to state 65

    $default  reduce using rule 108 (init_declarator)


State 88

   21 constant: CHARLIT •

    $default  reduce using rule 21 (constant)


State 89

   20 string_literal: STRINGLIT •

    $default  reduce using rule 20 (string_literal)


State 90

   22 constant: NUMBERLIT •

    $default  reduce using rule 22 (constant)


State 91

   38 unary_expression: "++" • unary_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 162
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 163


State 92

   39 unary_expression: "--" • unary_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 162
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 164


State 93

   48 unary_expression: ALIGNOF • unary_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 162
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 165


State 94

   46 unary_expression: SIZEOF • unary_expression
   47                 | SIZEOF • '(' type_name ')'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 166
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 167


State 95

   10 compound_statement: '{' '}' •

    $default  reduce using rule 10 (compound_statement)


State 96

   18 expression_statement: ';' •

    $default  reduce using rule 18 (expression_statement)


State 97

   26 primary_expression: '(' • expression ')'
   50 cast_expression: '(' • type_name ')' cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    SIZEOF     shift, and go to state 94
    STRUCT     shift, and go to state 16
    UNION      shift, and go to state 17
    UNSIGNED   shift, and go to state 18
    VOID       shift, and go to state 19
    VOLATILE   shift, and go to state 20
    _BOOL      shift, and go to state 21
    _COMPLEX   shift, and go to state 22
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 127
    expression                 go to state 168
    type_specifier             go to state 74
    type_qualifier             go to state 75
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    specifier_qualifier_list   go to state 169
    enum_specifier             go to state 34
    type_name                  go to state 170


State 98

   40 unary_expression: '&' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 171


State 99

   41 unary_expression: '*' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 172


State 100

   42 unary_expression: '+' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 173


State 101

   43 unary_expression: '-' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 174


State 102

   44 unary_expression: '~' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 175


State 103

   45 unary_expression: '!' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 176


State 104

   15 statement: compound_statement •

    $default  reduce using rule 15 (statement)


State 105

    9 compound_statement: '{' block_item_list • '}'
   12 block_item_list: block_item_list • block_item

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    AUTO       shift, and go to state 1
    ALIGNOF    shift, and go to state 93
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    SIZEOF     shift, and go to state 94
    STATIC     shift, and go to state 15
    STRUCT     shift, and go to state 16
    UNION      shift, and go to state 17
    UNSIGNED   shift, and go to state 18
    VOID       shift, and go to state 19
    VOLATILE   shift, and go to state 20
    _BOOL      shift, and go to state 21
    _COMPLEX   shift, and go to state 22
    '{'        shift, and go to state 64
    '}'        shift, and go to state 177
    ';'        shift, and go to state 96
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    compound_statement         go to state 104
    block_item                 go to state 178
    statement                  go to state 107
    expression_statement       go to state 108
    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 127
    expression                 go to state 128
    declaration                go to state 129
    declaration_specifiers     go to state 69
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 106

   11 block_item_list: block_item •

    $default  reduce using rule 11 (block_item_list)


State 107

   14 block_item: statement •

    $default  reduce using rule 14 (block_item)


State 108

   16 statement: expression_statement •

    $default  reduce using rule 16 (statement)


State 109

   23 primary_expression: identifier •

    $default  reduce using rule 23 (primary_expression)


State 110

   25 primary_expression: string_literal •

    $default  reduce using rule 25 (primary_expression)


State 111

   24 primary_expression: constant •

    $default  reduce using rule 24 (primary_expression)


State 112

   27 postfix_expression: primary_expression •

    $default  reduce using rule 27 (postfix_expression)


State 113

   28 postfix_expression: postfix_expression • '[' expression ']'
   29                   | postfix_expression • '(' ')'
   30                   | postfix_expression • '(' argument_expression_list ')'
   31                   | postfix_expression • '.' identifier
   32                   | postfix_expression • "->" identifier
   33                   | postfix_expression • "++"
   34                   | postfix_expression • "--"
   37 unary_expression: postfix_expression •

    "->"  shift, and go to state 179
    "++"  shift, and go to state 180
    "--"  shift, and go to state 181
    '('   shift, and go to state 182
    '['   shift, and go to state 183
    '.'   shift, and go to state 184

    $default  reduce using rule 37 (unary_expression)


State 114

   49 cast_expression: unary_expression •
   82 assignment_expression: unary_expression • assignment_operator assignment_expression

    "*="   shift, and go to state 185
    "/="   shift, and go to state 186
    "%="   shift, and go to state 187
    "+="   shift, and go to state 188
    "-="   shift, and go to state 189
    "<<="  shift, and go to state 190
    ">>="  shift, and go to state 191
    "&="   shift, and go to state 192
    "|="   shift, and go to state 193
    "^="   shift, and go to state 194
    '='    shift, and go to state 195

    $default  reduce using rule 49 (cast_expression)

    assignment_operator  go to state 196


State 115

   51 multiplicative_expression: cast_expression •

    $default  reduce using rule 51 (multiplicative_expression)


State 116

   52 multiplicative_expression: multiplicative_expression • '*' cast_expression
   53                          | multiplicative_expression • '/' cast_expression
   54                          | multiplicative_expression • '%' cast_expression
   55 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 197
    '/'  shift, and go to state 198
    '%'  shift, and go to state 199

    $default  reduce using rule 55 (additive_expression)


State 117

   56 additive_expression: additive_expression • '+' multiplicative_expression
   57                    | additive_expression • '-' multiplicative_expression
   58 shift_expression: additive_expression •

    '+'  shift, and go to state 200
    '-'  shift, and go to state 201

    $default  reduce using rule 58 (shift_expression)


State 118

   59 shift_expression: shift_expression • "<<" additive_expression
   60                 | shift_expression • ">>" additive_expression
   61 relational_expression: shift_expression •

    "<<"  shift, and go to state 202
    ">>"  shift, and go to state 203

    $default  reduce using rule 61 (relational_expression)


State 119

   62 relational_expression: relational_expression • '<' shift_expression
   63                      | relational_expression • "<=" shift_expression
   64                      | relational_expression • '>' shift_expression
   65                      | relational_expression • ">=" shift_expression
   66 equality_expression: relational_expression •

    "<="  shift, and go to state 204
    ">="  shift, and go to state 205
    '<'   shift, and go to state 206
    '>'   shift, and go to state 207

    $default  reduce using rule 66 (equality_expression)


State 120

   67 equality_expression: equality_expression • "==" relational_expression
   68                    | equality_expression • "!=" relational_expression
   69 and_expression: equality_expression •

    "=="  shift, and go to state 208
    "!="  shift, and go to state 209

    $default  reduce using rule 69 (and_expression)


State 121

   70 and_expression: and_expression • '&' equality_expression
   71 xor_expression: and_expression •

    '&'  shift, and go to state 210

    $default  reduce using rule 71 (xor_expression)


State 122

   72 xor_expression: xor_expression • '^' and_expression
   73 or_expression: xor_expression •

    '^'  shift, and go to state 211

    $default  reduce using rule 73 (or_expression)


State 123

   74 or_expression: or_expression • '|' xor_expression
   75 logical_and_expression: or_expression •

    '|'  shift, and go to state 212

    $default  reduce using rule 75 (logical_and_expression)


State 124

   76 logical_and_expression: logical_and_expression • "&&" or_expression
   77 logical_or_expression: logical_and_expression •

    "&&"  shift, and go to state 213

    $default  reduce using rule 77 (logical_or_expression)


State 125

   78 logical_or_expression: logical_or_expression • "||" logical_and_expression
   79 conditional_expression: logical_or_expression •
   80                       | logical_or_expression • '?' expression ':' conditional_expression

    "||"  shift, and go to state 214
    '?'   shift, and go to state 215

    $default  reduce using rule 79 (conditional_expression)


State 126

   81 assignment_expression: conditional_expression •

    $default  reduce using rule 81 (assignment_expression)


State 127

   94 expression: assignment_expression •

    $default  reduce using rule 94 (expression)


State 128

   17 expression_statement: expression • ';'
   95 expression: expression • ',' assignment_expression

    ';'  shift, and go to state 216
    ','  shift, and go to state 217


State 129

   13 block_item: declaration •

    $default  reduce using rule 13 (block_item)


State 130

  204 initializer: assignment_expression •

    $default  reduce using rule 204 (initializer)


State 131

  109 init_declarator: declarator '=' initializer •

    $default  reduce using rule 109 (init_declarator)


State 132

    6 function_definition: declaration_specifiers declarator declaration_list compound_statement •

    $default  reduce using rule 6 (function_definition)


State 133

    8 declaration_list: declaration_list declaration •

    $default  reduce using rule 8 (declaration_list)


State 134

  172 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 172 (direct_declarator)


State 135

  186 identifier_list: identifier •

    $default  reduce using rule 186 (identifier_list)


State 136

  102 declaration_specifiers: declaration_specifiers • storage_class_specifier
  103                       | declaration_specifiers • type_specifier
  104                       | declaration_specifiers • type_qualifier
  105                       | declaration_specifiers • function_specifier
  183 parameter_declaration: declaration_specifiers • declarator
  184                      | declaration_specifiers •
  185                      | declaration_specifiers • abstract_declarator

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 218
    '['       shift, and go to state 219
    '*'       shift, and go to state 41

    $default  reduce using rule 184 (parameter_declaration)

    identifier                  go to state 42
    storage_class_specifier     go to state 45
    type_specifier              go to state 46
    type_qualifier              go to state 47
    function_specifier          go to state 48
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34
    declarator                  go to state 220
    direct_declarator           go to state 50
    pointer                     go to state 221
    abstract_declarator         go to state 222
    direct_abstract_declarator  go to state 223


State 137

  170 direct_declarator: direct_declarator '(' parameter_type_list • ')'

    ')'  shift, and go to state 224


State 138

  179 parameter_type_list: parameter_list •
  180                    | parameter_list • ',' "..."
  182 parameter_list: parameter_list • ',' parameter_declaration

    ','  shift, and go to state 225

    $default  reduce using rule 179 (parameter_type_list)


State 139

  181 parameter_list: parameter_declaration •

    $default  reduce using rule 181 (parameter_list)


State 140

  171 direct_declarator: direct_declarator '(' identifier_list • ')'
  187 identifier_list: identifier_list • ',' identifier

    ')'  shift, and go to state 226
    ','  shift, and go to state 227


State 141

  165 direct_declarator: direct_declarator '[' STATIC • assignment_expression ']'
  166                  | direct_declarator '[' STATIC • type_qualifier_list assignment_expression ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    CONST      shift, and go to state 3
    RESTRICT   shift, and go to state 12
    SIZEOF     shift, and go to state 94
    VOLATILE   shift, and go to state 20
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 228
    type_qualifier             go to state 59
    type_qualifier_list        go to state 229


State 142

  161 direct_declarator: direct_declarator '[' ']' •

    $default  reduce using rule 161 (direct_declarator)


State 143

   41 unary_expression: '*' • cast_expression
  169 direct_declarator: direct_declarator '[' '*' • ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    ']'        shift, and go to state 230
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 172


State 144

  163 direct_declarator: direct_declarator '[' assignment_expression • ']'

    ']'  shift, and go to state 231


State 145

  162 direct_declarator: direct_declarator '[' type_qualifier_list • ']'
  164                  | direct_declarator '[' type_qualifier_list • assignment_expression ']'
  167                  | direct_declarator '[' type_qualifier_list • STATIC assignment_expression ']'
  168                  | direct_declarator '[' type_qualifier_list • '*' ']'
  178 type_qualifier_list: type_qualifier_list • type_qualifier

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    CONST      shift, and go to state 3
    RESTRICT   shift, and go to state 12
    SIZEOF     shift, and go to state 94
    STATIC     shift, and go to state 232
    VOLATILE   shift, and go to state 20
    '('        shift, and go to state 97
    ']'        shift, and go to state 233
    '&'        shift, and go to state 98
    '*'        shift, and go to state 234
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 235
    type_qualifier             go to state 84


State 146

  132 struct_or_union_specifier: struct_or_union IDENT '{' struct_declaration_list • '}'
  137 struct_declaration_list: struct_declaration_list • struct_declaration

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '}'       shift, and go to state 236

    type_specifier             go to state 74
    type_qualifier             go to state 75
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration         go to state 148
    specifier_qualifier_list   go to state 78
    enum_specifier             go to state 34


State 147

  131 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}' •

    $default  reduce using rule 131 (struct_or_union_specifier)


State 148

  137 struct_declaration_list: struct_declaration_list struct_declaration •

    $default  reduce using rule 137 (struct_declaration_list)


State 149

  146 struct_declarator: ':' • constant_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 156
    constant_expression        go to state 237


State 150

  140 specifier_qualifier_list: specifier_qualifier_list type_specifier •

    $default  reduce using rule 140 (specifier_qualifier_list)


State 151

  142 specifier_qualifier_list: specifier_qualifier_list type_qualifier •

    $default  reduce using rule 142 (specifier_qualifier_list)


State 152

  138 struct_declaration: specifier_qualifier_list struct_declarator_list • ';'
  144 struct_declarator_list: struct_declarator_list • ',' struct_declarator

    ';'  shift, and go to state 238
    ','  shift, and go to state 239


State 153

  143 struct_declarator_list: struct_declarator •

    $default  reduce using rule 143 (struct_declarator_list)


State 154

  145 struct_declarator: declarator •
  147                  | declarator • ':' constant_expression

    ':'  shift, and go to state 240

    $default  reduce using rule 145 (struct_declarator)


State 155

   49 cast_expression: unary_expression •

    $default  reduce using rule 49 (cast_expression)


State 156

   96 constant_expression: conditional_expression •

    $default  reduce using rule 96 (constant_expression)


State 157

  156 enumerator: identifier '=' constant_expression •

    $default  reduce using rule 156 (enumerator)


State 158

  151 enum_specifier: ENUM '{' enumerator_list ',' '}' •

    $default  reduce using rule 151 (enum_specifier)


State 159

  154 enumerator_list: enumerator_list ',' enumerator •

    $default  reduce using rule 154 (enumerator_list)


State 160

  150 enum_specifier: ENUM identifier '{' enumerator_list '}' •

    $default  reduce using rule 150 (enum_specifier)


State 161

  152 enum_specifier: ENUM identifier '{' enumerator_list ',' • '}'
  154 enumerator_list: enumerator_list ',' • enumerator

    IDENT  shift, and go to state 35
    '}'    shift, and go to state 241

    identifier  go to state 54
    enumerator  go to state 159


State 162

   26 primary_expression: '(' • expression ')'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 127
    expression                 go to state 168


State 163

   38 unary_expression: "++" unary_expression •

    $default  reduce using rule 38 (unary_expression)


State 164

   39 unary_expression: "--" unary_expression •

    $default  reduce using rule 39 (unary_expression)


State 165

   48 unary_expression: ALIGNOF unary_expression •

    $default  reduce using rule 48 (unary_expression)


State 166

   26 primary_expression: '(' • expression ')'
   47 unary_expression: SIZEOF '(' • type_name ')'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    SIZEOF     shift, and go to state 94
    STRUCT     shift, and go to state 16
    UNION      shift, and go to state 17
    UNSIGNED   shift, and go to state 18
    VOID       shift, and go to state 19
    VOLATILE   shift, and go to state 20
    _BOOL      shift, and go to state 21
    _COMPLEX   shift, and go to state 22
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 127
    expression                 go to state 168
    type_specifier             go to state 74
    type_qualifier             go to state 75
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    specifier_qualifier_list   go to state 169
    enum_specifier             go to state 34
    type_name                  go to state 242


State 167

   46 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 46 (unary_expression)


State 168

   26 primary_expression: '(' expression • ')'
   95 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 243
    ','  shift, and go to state 217


State 169

  140 specifier_qualifier_list: specifier_qualifier_list • type_specifier
  142                         | specifier_qualifier_list • type_qualifier
  188 type_name: specifier_qualifier_list •
  189          | specifier_qualifier_list • abstract_declarator

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 244
    '['       shift, and go to state 219
    '*'       shift, and go to state 41

    $default  reduce using rule 188 (type_name)

    type_specifier              go to state 150
    type_qualifier              go to state 151
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34
    pointer                     go to state 245
    abstract_declarator         go to state 246
    direct_abstract_declarator  go to state 223


State 170

   50 cast_expression: '(' type_name • ')' cast_expression

    ')'  shift, and go to state 247


State 171

   40 unary_expression: '&' cast_expression •

    $default  reduce using rule 40 (unary_expression)


State 172

   41 unary_expression: '*' cast_expression •

    $default  reduce using rule 41 (unary_expression)


State 173

   42 unary_expression: '+' cast_expression •

    $default  reduce using rule 42 (unary_expression)


State 174

   43 unary_expression: '-' cast_expression •

    $default  reduce using rule 43 (unary_expression)


State 175

   44 unary_expression: '~' cast_expression •

    $default  reduce using rule 44 (unary_expression)


State 176

   45 unary_expression: '!' cast_expression •

    $default  reduce using rule 45 (unary_expression)


State 177

    9 compound_statement: '{' block_item_list '}' •

    $default  reduce using rule 9 (compound_statement)


State 178

   12 block_item_list: block_item_list block_item •

    $default  reduce using rule 12 (block_item_list)


State 179

   32 postfix_expression: postfix_expression "->" • identifier

    IDENT  shift, and go to state 35

    identifier  go to state 248


State 180

   33 postfix_expression: postfix_expression "++" •

    $default  reduce using rule 33 (postfix_expression)


State 181

   34 postfix_expression: postfix_expression "--" •

    $default  reduce using rule 34 (postfix_expression)


State 182

   29 postfix_expression: postfix_expression '(' • ')'
   30                   | postfix_expression '(' • argument_expression_list ')'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    ')'        shift, and go to state 249
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    argument_expression_list   go to state 250
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 251


State 183

   28 postfix_expression: postfix_expression '[' • expression ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 127
    expression                 go to state 252


State 184

   31 postfix_expression: postfix_expression '.' • identifier

    IDENT  shift, and go to state 35

    identifier  go to state 253


State 185

   84 assignment_operator: "*=" •

    $default  reduce using rule 84 (assignment_operator)


State 186

   85 assignment_operator: "/=" •

    $default  reduce using rule 85 (assignment_operator)


State 187

   86 assignment_operator: "%=" •

    $default  reduce using rule 86 (assignment_operator)


State 188

   87 assignment_operator: "+=" •

    $default  reduce using rule 87 (assignment_operator)


State 189

   88 assignment_operator: "-=" •

    $default  reduce using rule 88 (assignment_operator)


State 190

   89 assignment_operator: "<<=" •

    $default  reduce using rule 89 (assignment_operator)


State 191

   90 assignment_operator: ">>=" •

    $default  reduce using rule 90 (assignment_operator)


State 192

   91 assignment_operator: "&=" •

    $default  reduce using rule 91 (assignment_operator)


State 193

   93 assignment_operator: "|=" •

    $default  reduce using rule 93 (assignment_operator)


State 194

   92 assignment_operator: "^=" •

    $default  reduce using rule 92 (assignment_operator)


State 195

   83 assignment_operator: '=' •

    $default  reduce using rule 83 (assignment_operator)


State 196

   82 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 254


State 197

   52 multiplicative_expression: multiplicative_expression '*' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 255


State 198

   53 multiplicative_expression: multiplicative_expression '/' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 256


State 199

   54 multiplicative_expression: multiplicative_expression '%' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 257


State 200

   56 additive_expression: additive_expression '+' • multiplicative_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 258


State 201

   57 additive_expression: additive_expression '-' • multiplicative_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 259


State 202

   59 shift_expression: shift_expression "<<" • additive_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 260


State 203

   60 shift_expression: shift_expression ">>" • additive_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 261


State 204

   63 relational_expression: relational_expression "<=" • shift_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 262


State 205

   65 relational_expression: relational_expression ">=" • shift_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 263


State 206

   62 relational_expression: relational_expression '<' • shift_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 264


State 207

   64 relational_expression: relational_expression '>' • shift_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 265


State 208

   67 equality_expression: equality_expression "==" • relational_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 266


State 209

   68 equality_expression: equality_expression "!=" • relational_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 267


State 210

   70 and_expression: and_expression '&' • equality_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 268


State 211

   72 xor_expression: xor_expression '^' • and_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 269


State 212

   74 or_expression: or_expression '|' • xor_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 270


State 213

   76 logical_and_expression: logical_and_expression "&&" • or_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 271


State 214

   78 logical_or_expression: logical_or_expression "||" • logical_and_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 272


State 215

   80 conditional_expression: logical_or_expression '?' • expression ':' conditional_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 127
    expression                 go to state 273


State 216

   17 expression_statement: expression ';' •

    $default  reduce using rule 17 (expression_statement)


State 217

   95 expression: expression ',' • assignment_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 274


State 218

  160 direct_declarator: '(' • declarator ')'
  193 direct_abstract_declarator: '(' • abstract_declarator ')'
  200                           | '(' • ')'
  202                           | '(' • parameter_type_list ')'

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 218
    ')'       shift, and go to state 275
    '['       shift, and go to state 219
    '*'       shift, and go to state 41

    identifier                  go to state 42
    declaration_specifiers      go to state 136
    storage_class_specifier     go to state 28
    type_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34
    declarator                  go to state 58
    direct_declarator           go to state 50
    pointer                     go to state 221
    parameter_type_list         go to state 276
    parameter_list              go to state 138
    parameter_declaration       go to state 139
    abstract_declarator         go to state 277
    direct_abstract_declarator  go to state 223


State 219

  194 direct_abstract_declarator: '[' • ']'
  196                           | '[' • assignment_expression ']'
  198                           | '[' • '*' ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    ']'        shift, and go to state 278
    '&'        shift, and go to state 98
    '*'        shift, and go to state 279
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 280


State 220

  183 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 183 (parameter_declaration)


State 221

  158 declarator: pointer • direct_declarator
  190 abstract_declarator: pointer •
  192                    | pointer • direct_abstract_declarator

    IDENT  shift, and go to state 35
    '('    shift, and go to state 218
    '['    shift, and go to state 219

    $default  reduce using rule 190 (abstract_declarator)

    identifier                  go to state 42
    direct_declarator           go to state 72
    direct_abstract_declarator  go to state 281


State 222

  185 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 185 (parameter_declaration)


State 223

  191 abstract_declarator: direct_abstract_declarator •
  195 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
  197                           | direct_abstract_declarator • '[' assignment_expression ']'
  199                           | direct_abstract_declarator • '[' '*' ']'
  201                           | direct_abstract_declarator • '(' ')'
  203                           | direct_abstract_declarator • '(' parameter_type_list ')'

    '('  shift, and go to state 282
    '['  shift, and go to state 283

    $default  reduce using rule 191 (abstract_declarator)


State 224

  170 direct_declarator: direct_declarator '(' parameter_type_list ')' •

    $default  reduce using rule 170 (direct_declarator)


State 225

  180 parameter_type_list: parameter_list ',' • "..."
  182 parameter_list: parameter_list ',' • parameter_declaration

    "..."     shift, and go to state 284
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    declaration_specifiers     go to state 136
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    parameter_declaration      go to state 285


State 226

  171 direct_declarator: direct_declarator '(' identifier_list ')' •

    $default  reduce using rule 171 (direct_declarator)


State 227

  187 identifier_list: identifier_list ',' • identifier

    IDENT  shift, and go to state 35

    identifier  go to state 286


State 228

  165 direct_declarator: direct_declarator '[' STATIC assignment_expression • ']'

    ']'  shift, and go to state 287


State 229

  166 direct_declarator: direct_declarator '[' STATIC type_qualifier_list • assignment_expression ']'
  178 type_qualifier_list: type_qualifier_list • type_qualifier

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    CONST      shift, and go to state 3
    RESTRICT   shift, and go to state 12
    SIZEOF     shift, and go to state 94
    VOLATILE   shift, and go to state 20
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 288
    type_qualifier             go to state 84


State 230

  169 direct_declarator: direct_declarator '[' '*' ']' •

    $default  reduce using rule 169 (direct_declarator)


State 231

  163 direct_declarator: direct_declarator '[' assignment_expression ']' •

    $default  reduce using rule 163 (direct_declarator)


State 232

  167 direct_declarator: direct_declarator '[' type_qualifier_list STATIC • assignment_expression ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 289


State 233

  162 direct_declarator: direct_declarator '[' type_qualifier_list ']' •

    $default  reduce using rule 162 (direct_declarator)


State 234

   41 unary_expression: '*' • cast_expression
  168 direct_declarator: direct_declarator '[' type_qualifier_list '*' • ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    ']'        shift, and go to state 290
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 172


State 235

  164 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression • ']'

    ']'  shift, and go to state 291


State 236

  132 struct_or_union_specifier: struct_or_union IDENT '{' struct_declaration_list '}' •

    $default  reduce using rule 132 (struct_or_union_specifier)


State 237

  146 struct_declarator: ':' constant_expression •

    $default  reduce using rule 146 (struct_declarator)


State 238

  138 struct_declaration: specifier_qualifier_list struct_declarator_list ';' •

    $default  reduce using rule 138 (struct_declaration)


State 239

  144 struct_declarator_list: struct_declarator_list ',' • struct_declarator

    IDENT  shift, and go to state 35
    '('    shift, and go to state 40
    '*'    shift, and go to state 41
    ':'    shift, and go to state 149

    identifier         go to state 42
    struct_declarator  go to state 292
    declarator         go to state 154
    direct_declarator  go to state 50
    pointer            go to state 51


State 240

  147 struct_declarator: declarator ':' • constant_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 156
    constant_expression        go to state 293


State 241

  152 enum_specifier: ENUM identifier '{' enumerator_list ',' '}' •

    $default  reduce using rule 152 (enum_specifier)


State 242

   47 unary_expression: SIZEOF '(' type_name • ')'

    ')'  shift, and go to state 294


State 243

   26 primary_expression: '(' expression ')' •

    $default  reduce using rule 26 (primary_expression)


State 244

  193 direct_abstract_declarator: '(' • abstract_declarator ')'
  200                           | '(' • ')'
  202                           | '(' • parameter_type_list ')'

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 244
    ')'       shift, and go to state 275
    '['       shift, and go to state 219
    '*'       shift, and go to state 41

    declaration_specifiers      go to state 136
    storage_class_specifier     go to state 28
    type_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34
    pointer                     go to state 245
    parameter_type_list         go to state 276
    parameter_list              go to state 138
    parameter_declaration       go to state 139
    abstract_declarator         go to state 277
    direct_abstract_declarator  go to state 223


State 245

  190 abstract_declarator: pointer •
  192                    | pointer • direct_abstract_declarator

    '('  shift, and go to state 244
    '['  shift, and go to state 219

    $default  reduce using rule 190 (abstract_declarator)

    direct_abstract_declarator  go to state 281


State 246

  189 type_name: specifier_qualifier_list abstract_declarator •

    $default  reduce using rule 189 (type_name)


State 247

   50 cast_expression: '(' type_name ')' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 295


State 248

   32 postfix_expression: postfix_expression "->" identifier •

    $default  reduce using rule 32 (postfix_expression)


State 249

   29 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 29 (postfix_expression)


State 250

   30 postfix_expression: postfix_expression '(' argument_expression_list • ')'
   36 argument_expression_list: argument_expression_list • ',' assignment_expression

    ')'  shift, and go to state 296
    ','  shift, and go to state 297


State 251

   35 argument_expression_list: assignment_expression •

    $default  reduce using rule 35 (argument_expression_list)


State 252

   28 postfix_expression: postfix_expression '[' expression • ']'
   95 expression: expression • ',' assignment_expression

    ']'  shift, and go to state 298
    ','  shift, and go to state 217


State 253

   31 postfix_expression: postfix_expression '.' identifier •

    $default  reduce using rule 31 (postfix_expression)


State 254

   82 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 82 (assignment_expression)


State 255

   52 multiplicative_expression: multiplicative_expression '*' cast_expression •

    $default  reduce using rule 52 (multiplicative_expression)


State 256

   53 multiplicative_expression: multiplicative_expression '/' cast_expression •

    $default  reduce using rule 53 (multiplicative_expression)


State 257

   54 multiplicative_expression: multiplicative_expression '%' cast_expression •

    $default  reduce using rule 54 (multiplicative_expression)


State 258

   52 multiplicative_expression: multiplicative_expression • '*' cast_expression
   53                          | multiplicative_expression • '/' cast_expression
   54                          | multiplicative_expression • '%' cast_expression
   56 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 197
    '/'  shift, and go to state 198
    '%'  shift, and go to state 199

    $default  reduce using rule 56 (additive_expression)


State 259

   52 multiplicative_expression: multiplicative_expression • '*' cast_expression
   53                          | multiplicative_expression • '/' cast_expression
   54                          | multiplicative_expression • '%' cast_expression
   57 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 197
    '/'  shift, and go to state 198
    '%'  shift, and go to state 199

    $default  reduce using rule 57 (additive_expression)


State 260

   56 additive_expression: additive_expression • '+' multiplicative_expression
   57                    | additive_expression • '-' multiplicative_expression
   59 shift_expression: shift_expression "<<" additive_expression •

    '+'  shift, and go to state 200
    '-'  shift, and go to state 201

    $default  reduce using rule 59 (shift_expression)


State 261

   56 additive_expression: additive_expression • '+' multiplicative_expression
   57                    | additive_expression • '-' multiplicative_expression
   60 shift_expression: shift_expression ">>" additive_expression •

    '+'  shift, and go to state 200
    '-'  shift, and go to state 201

    $default  reduce using rule 60 (shift_expression)


State 262

   59 shift_expression: shift_expression • "<<" additive_expression
   60                 | shift_expression • ">>" additive_expression
   63 relational_expression: relational_expression "<=" shift_expression •

    "<<"  shift, and go to state 202
    ">>"  shift, and go to state 203

    $default  reduce using rule 63 (relational_expression)


State 263

   59 shift_expression: shift_expression • "<<" additive_expression
   60                 | shift_expression • ">>" additive_expression
   65 relational_expression: relational_expression ">=" shift_expression •

    "<<"  shift, and go to state 202
    ">>"  shift, and go to state 203

    $default  reduce using rule 65 (relational_expression)


State 264

   59 shift_expression: shift_expression • "<<" additive_expression
   60                 | shift_expression • ">>" additive_expression
   62 relational_expression: relational_expression '<' shift_expression •

    "<<"  shift, and go to state 202
    ">>"  shift, and go to state 203

    $default  reduce using rule 62 (relational_expression)


State 265

   59 shift_expression: shift_expression • "<<" additive_expression
   60                 | shift_expression • ">>" additive_expression
   64 relational_expression: relational_expression '>' shift_expression •

    "<<"  shift, and go to state 202
    ">>"  shift, and go to state 203

    $default  reduce using rule 64 (relational_expression)


State 266

   62 relational_expression: relational_expression • '<' shift_expression
   63                      | relational_expression • "<=" shift_expression
   64                      | relational_expression • '>' shift_expression
   65                      | relational_expression • ">=" shift_expression
   67 equality_expression: equality_expression "==" relational_expression •

    "<="  shift, and go to state 204
    ">="  shift, and go to state 205
    '<'   shift, and go to state 206
    '>'   shift, and go to state 207

    $default  reduce using rule 67 (equality_expression)


State 267

   62 relational_expression: relational_expression • '<' shift_expression
   63                      | relational_expression • "<=" shift_expression
   64                      | relational_expression • '>' shift_expression
   65                      | relational_expression • ">=" shift_expression
   68 equality_expression: equality_expression "!=" relational_expression •

    "<="  shift, and go to state 204
    ">="  shift, and go to state 205
    '<'   shift, and go to state 206
    '>'   shift, and go to state 207

    $default  reduce using rule 68 (equality_expression)


State 268

   67 equality_expression: equality_expression • "==" relational_expression
   68                    | equality_expression • "!=" relational_expression
   70 and_expression: and_expression '&' equality_expression •

    "=="  shift, and go to state 208
    "!="  shift, and go to state 209

    $default  reduce using rule 70 (and_expression)


State 269

   70 and_expression: and_expression • '&' equality_expression
   72 xor_expression: xor_expression '^' and_expression •

    '&'  shift, and go to state 210

    $default  reduce using rule 72 (xor_expression)


State 270

   72 xor_expression: xor_expression • '^' and_expression
   74 or_expression: or_expression '|' xor_expression •

    '^'  shift, and go to state 211

    $default  reduce using rule 74 (or_expression)


State 271

   74 or_expression: or_expression • '|' xor_expression
   76 logical_and_expression: logical_and_expression "&&" or_expression •

    '|'  shift, and go to state 212

    $default  reduce using rule 76 (logical_and_expression)


State 272

   76 logical_and_expression: logical_and_expression • "&&" or_expression
   78 logical_or_expression: logical_or_expression "||" logical_and_expression •

    "&&"  shift, and go to state 213

    $default  reduce using rule 78 (logical_or_expression)


State 273

   80 conditional_expression: logical_or_expression '?' expression • ':' conditional_expression
   95 expression: expression • ',' assignment_expression

    ','  shift, and go to state 217
    ':'  shift, and go to state 299


State 274

   95 expression: expression ',' assignment_expression •

    $default  reduce using rule 95 (expression)


State 275

  200 direct_abstract_declarator: '(' ')' •

    $default  reduce using rule 200 (direct_abstract_declarator)


State 276

  202 direct_abstract_declarator: '(' parameter_type_list • ')'

    ')'  shift, and go to state 300


State 277

  193 direct_abstract_declarator: '(' abstract_declarator • ')'

    ')'  shift, and go to state 301


State 278

  194 direct_abstract_declarator: '[' ']' •

    $default  reduce using rule 194 (direct_abstract_declarator)


State 279

   41 unary_expression: '*' • cast_expression
  198 direct_abstract_declarator: '[' '*' • ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    ']'        shift, and go to state 302
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 172


State 280

  196 direct_abstract_declarator: '[' assignment_expression • ']'

    ']'  shift, and go to state 303


State 281

  192 abstract_declarator: pointer direct_abstract_declarator •
  195 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
  197                           | direct_abstract_declarator • '[' assignment_expression ']'
  199                           | direct_abstract_declarator • '[' '*' ']'
  201                           | direct_abstract_declarator • '(' ')'
  203                           | direct_abstract_declarator • '(' parameter_type_list ')'

    '('  shift, and go to state 282
    '['  shift, and go to state 283

    $default  reduce using rule 192 (abstract_declarator)


State 282

  201 direct_abstract_declarator: direct_abstract_declarator '(' • ')'
  203                           | direct_abstract_declarator '(' • parameter_type_list ')'

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ')'       shift, and go to state 304

    declaration_specifiers     go to state 136
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    parameter_type_list        go to state 305
    parameter_list             go to state 138
    parameter_declaration      go to state 139


State 283

  195 direct_abstract_declarator: direct_abstract_declarator '[' • ']'
  197                           | direct_abstract_declarator '[' • assignment_expression ']'
  199                           | direct_abstract_declarator '[' • '*' ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    ']'        shift, and go to state 306
    '&'        shift, and go to state 98
    '*'        shift, and go to state 307
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 308


State 284

  180 parameter_type_list: parameter_list ',' "..." •

    $default  reduce using rule 180 (parameter_type_list)


State 285

  182 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 182 (parameter_list)


State 286

  187 identifier_list: identifier_list ',' identifier •

    $default  reduce using rule 187 (identifier_list)


State 287

  165 direct_declarator: direct_declarator '[' STATIC assignment_expression ']' •

    $default  reduce using rule 165 (direct_declarator)


State 288

  166 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression • ']'

    ']'  shift, and go to state 309


State 289

  167 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression • ']'

    ']'  shift, and go to state 310


State 290

  168 direct_declarator: direct_declarator '[' type_qualifier_list '*' ']' •

    $default  reduce using rule 168 (direct_declarator)


State 291

  164 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression ']' •

    $default  reduce using rule 164 (direct_declarator)


State 292

  144 struct_declarator_list: struct_declarator_list ',' struct_declarator •

    $default  reduce using rule 144 (struct_declarator_list)


State 293

  147 struct_declarator: declarator ':' constant_expression •

    $default  reduce using rule 147 (struct_declarator)


State 294

   47 unary_expression: SIZEOF '(' type_name ')' •

    $default  reduce using rule 47 (unary_expression)


State 295

   50 cast_expression: '(' type_name ')' cast_expression •

    $default  reduce using rule 50 (cast_expression)


State 296

   30 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  reduce using rule 30 (postfix_expression)


State 297

   36 argument_expression_list: argument_expression_list ',' • assignment_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 114
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 126
    assignment_expression      go to state 311


State 298

   28 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 28 (postfix_expression)


State 299

   80 conditional_expression: logical_or_expression '?' expression ':' • conditional_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier                 go to state 109
    string_literal             go to state 110
    constant                   go to state 111
    primary_expression         go to state 112
    postfix_expression         go to state 113
    unary_expression           go to state 155
    cast_expression            go to state 115
    multiplicative_expression  go to state 116
    additive_expression        go to state 117
    shift_expression           go to state 118
    relational_expression      go to state 119
    equality_expression        go to state 120
    and_expression             go to state 121
    xor_expression             go to state 122
    or_expression              go to state 123
    logical_and_expression     go to state 124
    logical_or_expression      go to state 125
    conditional_expression     go to state 312


State 300

  202 direct_abstract_declarator: '(' parameter_type_list ')' •

    $default  reduce using rule 202 (direct_abstract_declarator)


State 301

  193 direct_abstract_declarator: '(' abstract_declarator ')' •

    $default  reduce using rule 193 (direct_abstract_declarator)


State 302

  198 direct_abstract_declarator: '[' '*' ']' •

    $default  reduce using rule 198 (direct_abstract_declarator)


State 303

  196 direct_abstract_declarator: '[' assignment_expression ']' •

    $default  reduce using rule 196 (direct_abstract_declarator)


State 304

  201 direct_abstract_declarator: direct_abstract_declarator '(' ')' •

    $default  reduce using rule 201 (direct_abstract_declarator)


State 305

  203 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list • ')'

    ')'  shift, and go to state 313


State 306

  195 direct_abstract_declarator: direct_abstract_declarator '[' ']' •

    $default  reduce using rule 195 (direct_abstract_declarator)


State 307

   41 unary_expression: '*' • cast_expression
  199 direct_abstract_declarator: direct_abstract_declarator '[' '*' • ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 97
    ']'        shift, and go to state 314
    '&'        shift, and go to state 98
    '*'        shift, and go to state 99
    '+'        shift, and go to state 100
    '-'        shift, and go to state 101
    '~'        shift, and go to state 102
    '!'        shift, and go to state 103

    identifier          go to state 109
    string_literal      go to state 110
    constant            go to state 111
    primary_expression  go to state 112
    postfix_expression  go to state 113
    unary_expression    go to state 155
    cast_expression     go to state 172


State 308

  197 direct_abstract_declarator: direct_abstract_declarator '[' assignment_expression • ']'

    ']'  shift, and go to state 315


State 309

  166 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression ']' •

    $default  reduce using rule 166 (direct_declarator)


State 310

  167 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression ']' •

    $default  reduce using rule 167 (direct_declarator)


State 311

   36 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 36 (argument_expression_list)


State 312

   80 conditional_expression: logical_or_expression '?' expression ':' conditional_expression •

    $default  reduce using rule 80 (conditional_expression)


State 313

  203 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list ')' •

    $default  reduce using rule 203 (direct_abstract_declarator)


State 314

  199 direct_abstract_declarator: direct_abstract_declarator '[' '*' ']' •

    $default  reduce using rule 199 (direct_abstract_declarator)


State 315

  197 direct_abstract_declarator: direct_abstract_declarator '[' assignment_expression ']' •

    $default  reduce using rule 197 (direct_abstract_declarator)
