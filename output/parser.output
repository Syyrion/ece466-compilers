Terminals unused in grammar

    "..."
    BREAK
    CASE
    CONTINUE
    DEFAULT
    DO
    ELSE
    FOR
    GOTO
    IF
    RETURN
    SWITCH
    TYPEDEF
    WHILE
    _IMAGINARY


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration

    5 @1: ε

    6 function_definition: declaration_specifiers declarator @1 compound_statement

    7 @2: ε

    8 function_definition: declaration_specifiers declarator declaration_list @2 compound_statement

    9 declaration_list: declaration
   10                 | declaration_list declaration

   11 compound_statement: '{' block_item_list '}'
   12                   | '{' '}'

   13 block_item_list: block_item
   14                | block_item_list block_item

   15 block_item: declaration
   16           | statement

   17 $@3: ε

   18 statement: $@3 compound_statement
   19          | expression_statement

   20 expression_statement: expression ';'
   21                     | ';'

   22 identifier: IDENT

   23 string_literal: STRINGLIT

   24 constant: CHARLIT
   25         | NUMBERLIT

   26 primary_expression: identifier
   27                   | constant
   28                   | string_literal
   29                   | '(' expression ')'

   30 postfix_expression: primary_expression
   31                   | postfix_expression '[' expression ']'
   32                   | postfix_expression '(' ')'
   33                   | postfix_expression '(' argument_expression_list ')'
   34                   | postfix_expression '.' identifier
   35                   | postfix_expression "->" identifier
   36                   | postfix_expression "++"
   37                   | postfix_expression "--"

   38 argument_expression_list: assignment_expression
   39                         | argument_expression_list ',' assignment_expression

   40 unary_expression: postfix_expression
   41                 | "++" unary_expression
   42                 | "--" unary_expression
   43                 | '&' cast_expression
   44                 | '*' cast_expression
   45                 | '+' cast_expression
   46                 | '-' cast_expression
   47                 | '~' cast_expression
   48                 | '!' cast_expression
   49                 | SIZEOF unary_expression
   50                 | SIZEOF '(' type_name ')'
   51                 | ALIGNOF unary_expression

   52 cast_expression: unary_expression
   53                | '(' type_name ')' cast_expression

   54 multiplicative_expression: cast_expression
   55                          | multiplicative_expression '*' cast_expression
   56                          | multiplicative_expression '/' cast_expression
   57                          | multiplicative_expression '%' cast_expression

   58 additive_expression: multiplicative_expression
   59                    | additive_expression '+' multiplicative_expression
   60                    | additive_expression '-' multiplicative_expression

   61 shift_expression: additive_expression
   62                 | shift_expression "<<" additive_expression
   63                 | shift_expression ">>" additive_expression

   64 relational_expression: shift_expression
   65                      | relational_expression '<' shift_expression
   66                      | relational_expression "<=" shift_expression
   67                      | relational_expression '>' shift_expression
   68                      | relational_expression ">=" shift_expression

   69 equality_expression: relational_expression
   70                    | equality_expression "==" relational_expression
   71                    | equality_expression "!=" relational_expression

   72 and_expression: equality_expression
   73               | and_expression '&' equality_expression

   74 xor_expression: and_expression
   75               | xor_expression '^' and_expression

   76 or_expression: xor_expression
   77              | or_expression '|' xor_expression

   78 logical_and_expression: or_expression
   79                       | logical_and_expression "&&" or_expression

   80 logical_or_expression: logical_and_expression
   81                      | logical_or_expression "||" logical_and_expression

   82 conditional_expression: logical_or_expression
   83                       | logical_or_expression '?' expression ':' conditional_expression

   84 assignment_expression: conditional_expression
   85                      | unary_expression assignment_operator assignment_expression

   86 assignment_operator: '='
   87                    | "*="
   88                    | "/="
   89                    | "%="
   90                    | "+="
   91                    | "-="
   92                    | "<<="
   93                    | ">>="
   94                    | "&="
   95                    | "^="
   96                    | "|="

   97 expression: assignment_expression
   98           | expression ',' assignment_expression

   99 constant_expression: conditional_expression

  100 declaration: declaration_specifiers init_declarator_list ';'
  101            | declaration_specifiers ';'

  102 declaration_specifiers: type_specifier
  103                       | type_qualifier
  104                       | storage_class_specifier
  105                       | function_specifier
  106                       | declaration_specifiers type_specifier
  107                       | declaration_specifiers type_qualifier
  108                       | declaration_specifiers storage_class_specifier
  109                       | declaration_specifiers function_specifier

  110 storage_class_specifier: EXTERN
  111                        | STATIC
  112                        | AUTO
  113                        | REGISTER

  114 type_specifier: VOID
  115               | CHAR
  116               | SHORT
  117               | INT
  118               | LONG
  119               | FLOAT
  120               | DOUBLE
  121               | SIGNED
  122               | UNSIGNED
  123               | _BOOL
  124               | _COMPLEX
  125               | struct_or_union_specifier
  126               | enum_specifier

  127 type_qualifier: CONST
  128               | RESTRICT
  129               | VOLATILE

  130 function_specifier: INLINE

  131 init_declarator_list: init_declarator
  132                     | init_declarator_list ',' init_declarator

  133 init_declarator: declarator
  134                | declarator '=' initializer

  135 declarator: direct_declarator
  136           | pointer direct_declarator

  137 direct_declarator: identifier
  138                  | '(' declarator ')'
  139                  | direct_declarator '[' ']'
  140                  | direct_declarator '[' assignment_expression ']'
  141                  | direct_declarator '(' ')'
  142                  | direct_declarator '(' identifier_list ')'
  143                  | direct_declarator '(' parameter_type_list ')'

  144 pointer: '*'
  145        | '*' type_qualifier_list
  146        | '*' pointer
  147        | '*' type_qualifier_list pointer

  148 type_qualifier_list: type_qualifier
  149                    | type_qualifier_list type_qualifier

  150 parameter_type_list: parameter_list

  151 parameter_list: parameter_declaration
  152               | parameter_list ',' parameter_declaration

  153 parameter_declaration: declaration_specifiers declarator
  154                      | declaration_specifiers
  155                      | declaration_specifiers abstract_declarator

  156 identifier_list: identifier
  157                | identifier_list ',' identifier

  158 type_name: specifier_qualifier_list
  159          | specifier_qualifier_list abstract_declarator

  160 abstract_declarator: pointer
  161                    | direct_abstract_declarator
  162                    | pointer direct_abstract_declarator

  163 direct_abstract_declarator: '(' abstract_declarator ')'
  164                           | '[' ']'
  165                           | '[' assignment_expression ']'
  166                           | direct_abstract_declarator '[' ']'
  167                           | direct_abstract_declarator '[' assignment_expression ']'
  168                           | '(' ')'
  169                           | direct_abstract_declarator '(' ')'
  170                           | '(' parameter_type_list ')'
  171                           | direct_abstract_declarator '(' parameter_type_list ')'

  172 initializer: assignment_expression

  173 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}'

  174 @4: ε

  175 struct_or_union_specifier: struct_or_union IDENT '{' @4 struct_declaration_list '}'
  176                          | struct_or_union IDENT

  177 struct_or_union: STRUCT
  178                | UNION

  179 struct_declaration_list: struct_declaration
  180                        | struct_declaration_list struct_declaration

  181 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  182 specifier_qualifier_list: type_specifier
  183                         | type_qualifier
  184                         | specifier_qualifier_list type_specifier
  185                         | specifier_qualifier_list type_qualifier

  186 struct_declarator_list: struct_declarator
  187                       | struct_declarator_list ',' struct_declarator

  188 struct_declarator: declarator
  189                  | ':' constant_expression
  190                  | declarator ':' constant_expression

  191 enum_specifier: ENUM identifier
  192               | ENUM '{' enumerator_list '}'
  193               | ENUM identifier '{' enumerator_list '}'
  194               | ENUM '{' enumerator_list ',' '}'
  195               | ENUM identifier '{' enumerator_list ',' '}'

  196 enumerator_list: enumerator
  197                | enumerator_list ',' enumerator

  198 enumerator: identifier
  199           | identifier '=' constant_expression


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 48
    '%' (37) 57
    '&' (38) 43 73
    '(' (40) 29 32 33 50 53 138 141 142 143 163 168 169 170 171
    ')' (41) 29 32 33 50 53 138 141 142 143 163 168 169 170 171
    '*' (42) 44 55 144 145 146 147
    '+' (43) 45 59
    ',' (44) 39 98 132 152 157 187 194 195 197
    '-' (45) 46 60
    '.' (46) 34
    '/' (47) 56
    ':' (58) 83 189 190
    ';' (59) 20 21 100 101 181
    '<' (60) 65
    '=' (61) 86 134 199
    '>' (62) 67
    '?' (63) 83
    '[' (91) 31 139 140 164 165 166 167
    ']' (93) 31 139 140 164 165 166 167
    '^' (94) 75
    '{' (123) 11 12 173 175 192 193 194 195
    '|' (124) 77
    '}' (125) 11 12 173 175 192 193 194 195
    '~' (126) 47
    error (256)
    IDENT <string> (258) 22 175 176
    CHARLIT <string> (259) 24
    STRINGLIT <string> (260) 23
    NUMBERLIT <number> (261) 25
    "->" (262) 35
    "++" (263) 36 41
    "--" (264) 37 42
    "<<" (265) 62
    ">>" (266) 63
    "<=" (267) 66
    ">=" (268) 68
    "==" (269) 70
    "!=" (270) 71
    "&&" (271) 79
    "||" (272) 81
    "..." (273)
    "*=" (274) 87
    "/=" (275) 88
    "%=" (276) 89
    "+=" (277) 90
    "-=" (278) 91
    "<<=" (279) 92
    ">>=" (280) 93
    "&=" (281) 94
    "|=" (282) 96
    "^=" (283) 95
    AUTO (284) 112
    ALIGNOF (285) 51
    BREAK (286)
    CASE (287)
    CHAR (288) 115
    CONST (289) 127
    CONTINUE (290)
    DEFAULT (291)
    DO (292)
    DOUBLE (293) 120
    ELSE (294)
    ENUM (295) 191 192 193 194 195
    EXTERN (296) 110
    FLOAT (297) 119
    FOR (298)
    GOTO (299)
    IF (300)
    INLINE (301) 130
    INT (302) 117
    LONG (303) 118
    REGISTER (304) 113
    RESTRICT (305) 128
    RETURN (306)
    SHORT (307) 116
    SIGNED (308) 121
    SIZEOF (309) 49 50
    STATIC (310) 111
    STRUCT (311) 177
    SWITCH (312)
    TYPEDEF (313)
    UNION (314) 178
    UNSIGNED (315) 122
    VOID (316) 114
    VOLATILE (317) 129
    WHILE (318)
    _BOOL (319) 123
    _COMPLEX (320) 124
    _IMAGINARY (321)


Nonterminals, with rules where they appear

    $accept (91)
        on left: 0
    translation_unit (92)
        on left: 1 2
        on right: 0 2
    external_declaration (93)
        on left: 3 4
        on right: 1 2
    function_definition (94)
        on left: 6 8
        on right: 3
    @1 (95)
        on left: 5
        on right: 6
    @2 (96)
        on left: 7
        on right: 8
    declaration_list (97)
        on left: 9 10
        on right: 8 10
    compound_statement <namespace_group> (98)
        on left: 11 12
        on right: 6 8 18
    block_item_list (99)
        on left: 13 14
        on right: 11 14
    block_item (100)
        on left: 15 16
        on right: 13 14
    statement (101)
        on left: 18 19
        on right: 16
    $@3 (102)
        on left: 17
        on right: 18
    expression_statement (103)
        on left: 20 21
        on right: 19
    identifier <node> (104)
        on left: 22
        on right: 26 34 35 137 156 157 191 193 195 198 199
    string_literal <node> (105)
        on left: 23
        on right: 28
    constant <node> (106)
        on left: 24 25
        on right: 27
    primary_expression <node> (107)
        on left: 26 27 28 29
        on right: 30
    postfix_expression <node> (108)
        on left: 30 31 32 33 34 35 36 37
        on right: 31 32 33 34 35 36 37 40
    argument_expression_list <node_list> (109)
        on left: 38 39
        on right: 33 39
    unary_expression <node> (110)
        on left: 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 41 42 49 51 52 85
    cast_expression <node> (111)
        on left: 52 53
        on right: 43 44 45 46 47 48 53 54 55 56 57
    multiplicative_expression <node> (112)
        on left: 54 55 56 57
        on right: 55 56 57 58 59 60
    additive_expression <node> (113)
        on left: 58 59 60
        on right: 59 60 61 62 63
    shift_expression <node> (114)
        on left: 61 62 63
        on right: 62 63 64 65 66 67 68
    relational_expression <node> (115)
        on left: 64 65 66 67 68
        on right: 65 66 67 68 69 70 71
    equality_expression <node> (116)
        on left: 69 70 71
        on right: 70 71 72 73
    and_expression <node> (117)
        on left: 72 73
        on right: 73 74 75
    xor_expression <node> (118)
        on left: 74 75
        on right: 75 76 77
    or_expression <node> (119)
        on left: 76 77
        on right: 77 78 79
    logical_and_expression <node> (120)
        on left: 78 79
        on right: 79 80 81
    logical_or_expression <node> (121)
        on left: 80 81
        on right: 81 82 83
    conditional_expression <node> (122)
        on left: 82 83
        on right: 83 84 99
    assignment_expression <node> (123)
        on left: 84 85
        on right: 38 39 85 97 98 140 165 167 172
    assignment_operator <integer> (124)
        on left: 86 87 88 89 90 91 92 93 94 95 96
        on right: 85
    expression <node> (125)
        on left: 97 98
        on right: 20 29 31 83 98
    constant_expression <node> (126)
        on left: 99
        on right: 189 190 199
    declaration <declaration_package> (127)
        on left: 100 101
        on right: 4 9 10 15
    declaration_specifiers <declaration_specifiers> (128)
        on left: 102 103 104 105 106 107 108 109
        on right: 6 8 100 101 106 107 108 109 153 154 155
    storage_class_specifier <storage_class_specifier> (129)
        on left: 110 111 112 113
        on right: 104 108
    type_specifier <type_specifier> (130)
        on left: 114 115 116 117 118 119 120 121 122 123 124 125 126
        on right: 102 106 182 184
    type_qualifier <type_qualifier> (131)
        on left: 127 128 129
        on right: 103 107 148 149 183 185
    function_specifier <function_specifier> (132)
        on left: 130
        on right: 105 109
    init_declarator_list <declaration_package> (133)
        on left: 131 132
        on right: 100 132
    init_declarator <declarator_helper> (134)
        on left: 133 134
        on right: 131 132
    declarator <declarator_helper> (135)
        on left: 135 136
        on right: 6 8 133 134 138 153 188 190
    direct_declarator <declarator_helper> (136)
        on left: 137 138 139 140 141 142 143
        on right: 135 136 139 140 141 142 143
    pointer <declarator_helper> (137)
        on left: 144 145 146 147
        on right: 136 146 147 160 162
    type_qualifier_list <type_qualifier> (138)
        on left: 148 149
        on right: 145 147 149
    parameter_type_list <symbol_table> (139)
        on left: 150
        on right: 143 170 171
    parameter_list <symbol_table> (140)
        on left: 151 152
        on right: 150 152
    parameter_declaration <node> (141)
        on left: 153 154 155
        on right: 151 152
    identifier_list <symbol_table> (142)
        on left: 156 157
        on right: 142 157
    type_name <node> (143)
        on left: 158 159
        on right: 50 53
    abstract_declarator <declarator_helper> (144)
        on left: 160 161 162
        on right: 155 159 163
    direct_abstract_declarator <declarator_helper> (145)
        on left: 163 164 165 166 167 168 169 170 171
        on right: 161 162 166 167 169 171
    initializer <node> (146)
        on left: 172
        on right: 134
    struct_or_union_specifier <node> (147)
        on left: 173 175 176
        on right: 125
    @4 (148)
        on left: 174
        on right: 175
    struct_or_union <integer> (149)
        on left: 177 178
        on right: 173 175 176
    struct_declaration_list <symbol_table> (150)
        on left: 179 180
        on right: 173 175 180
    struct_declaration <declaration_package> (151)
        on left: 181
        on right: 179 180
    specifier_qualifier_list <declaration_specifiers> (152)
        on left: 182 183 184 185
        on right: 158 159 181 184 185
    struct_declarator_list <declaration_package> (153)
        on left: 186 187
        on right: 181 187
    struct_declarator <declarator_helper> (154)
        on left: 188 189 190
        on right: 186 187
    enum_specifier <node> (155)
        on left: 191 192 193 194 195
        on right: 126
    enumerator_list (156)
        on left: 196 197
        on right: 192 193 194 195 197
    enumerator (157)
        on left: 198 199
        on right: 196 197


State 0

    0 $accept: • translation_unit $end

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    translation_unit           go to state 23
    external_declaration       go to state 24
    function_definition        go to state 25
    declaration                go to state 26
    declaration_specifiers     go to state 27
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 1

  112 storage_class_specifier: AUTO •

    $default  reduce using rule 112 (storage_class_specifier)


State 2

  115 type_specifier: CHAR •

    $default  reduce using rule 115 (type_specifier)


State 3

  127 type_qualifier: CONST •

    $default  reduce using rule 127 (type_qualifier)


State 4

  120 type_specifier: DOUBLE •

    $default  reduce using rule 120 (type_specifier)


State 5

  191 enum_specifier: ENUM • identifier
  192               | ENUM • '{' enumerator_list '}'
  193               | ENUM • identifier '{' enumerator_list '}'
  194               | ENUM • '{' enumerator_list ',' '}'
  195               | ENUM • identifier '{' enumerator_list ',' '}'

    IDENT  shift, and go to state 35
    '{'    shift, and go to state 36

    identifier  go to state 37


State 6

  110 storage_class_specifier: EXTERN •

    $default  reduce using rule 110 (storage_class_specifier)


State 7

  119 type_specifier: FLOAT •

    $default  reduce using rule 119 (type_specifier)


State 8

  130 function_specifier: INLINE •

    $default  reduce using rule 130 (function_specifier)


State 9

  117 type_specifier: INT •

    $default  reduce using rule 117 (type_specifier)


State 10

  118 type_specifier: LONG •

    $default  reduce using rule 118 (type_specifier)


State 11

  113 storage_class_specifier: REGISTER •

    $default  reduce using rule 113 (storage_class_specifier)


State 12

  128 type_qualifier: RESTRICT •

    $default  reduce using rule 128 (type_qualifier)


State 13

  116 type_specifier: SHORT •

    $default  reduce using rule 116 (type_specifier)


State 14

  121 type_specifier: SIGNED •

    $default  reduce using rule 121 (type_specifier)


State 15

  111 storage_class_specifier: STATIC •

    $default  reduce using rule 111 (storage_class_specifier)


State 16

  177 struct_or_union: STRUCT •

    $default  reduce using rule 177 (struct_or_union)


State 17

  178 struct_or_union: UNION •

    $default  reduce using rule 178 (struct_or_union)


State 18

  122 type_specifier: UNSIGNED •

    $default  reduce using rule 122 (type_specifier)


State 19

  114 type_specifier: VOID •

    $default  reduce using rule 114 (type_specifier)


State 20

  129 type_qualifier: VOLATILE •

    $default  reduce using rule 129 (type_qualifier)


State 21

  123 type_specifier: _BOOL •

    $default  reduce using rule 123 (type_specifier)


State 22

  124 type_specifier: _COMPLEX •

    $default  reduce using rule 124 (type_specifier)


State 23

    0 $accept: translation_unit • $end
    2 translation_unit: translation_unit • external_declaration

    $end      shift, and go to state 38
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    external_declaration       go to state 39
    function_definition        go to state 25
    declaration                go to state 26
    declaration_specifiers     go to state 27
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 24

    1 translation_unit: external_declaration •

    $default  reduce using rule 1 (translation_unit)


State 25

    3 external_declaration: function_definition •

    $default  reduce using rule 3 (external_declaration)


State 26

    4 external_declaration: declaration •

    $default  reduce using rule 4 (external_declaration)


State 27

    6 function_definition: declaration_specifiers • declarator @1 compound_statement
    8                    | declaration_specifiers • declarator declaration_list @2 compound_statement
  100 declaration: declaration_specifiers • init_declarator_list ';'
  101            | declaration_specifiers • ';'
  106 declaration_specifiers: declaration_specifiers • type_specifier
  107                       | declaration_specifiers • type_qualifier
  108                       | declaration_specifiers • storage_class_specifier
  109                       | declaration_specifiers • function_specifier

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ';'       shift, and go to state 40
    '('       shift, and go to state 41
    '*'       shift, and go to state 42

    identifier                 go to state 43
    storage_class_specifier    go to state 44
    type_specifier             go to state 45
    type_qualifier             go to state 46
    function_specifier         go to state 47
    init_declarator_list       go to state 48
    init_declarator            go to state 49
    declarator                 go to state 50
    direct_declarator          go to state 51
    pointer                    go to state 52
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 28

  104 declaration_specifiers: storage_class_specifier •

    $default  reduce using rule 104 (declaration_specifiers)


State 29

  102 declaration_specifiers: type_specifier •

    $default  reduce using rule 102 (declaration_specifiers)


State 30

  103 declaration_specifiers: type_qualifier •

    $default  reduce using rule 103 (declaration_specifiers)


State 31

  105 declaration_specifiers: function_specifier •

    $default  reduce using rule 105 (declaration_specifiers)


State 32

  125 type_specifier: struct_or_union_specifier •

    $default  reduce using rule 125 (type_specifier)


State 33

  173 struct_or_union_specifier: struct_or_union • '{' struct_declaration_list '}'
  175                          | struct_or_union • IDENT '{' @4 struct_declaration_list '}'
  176                          | struct_or_union • IDENT

    IDENT  shift, and go to state 53
    '{'    shift, and go to state 54


State 34

  126 type_specifier: enum_specifier •

    $default  reduce using rule 126 (type_specifier)


State 35

   22 identifier: IDENT •

    $default  reduce using rule 22 (identifier)


State 36

  192 enum_specifier: ENUM '{' • enumerator_list '}'
  194               | ENUM '{' • enumerator_list ',' '}'

    IDENT  shift, and go to state 35

    identifier       go to state 55
    enumerator_list  go to state 56
    enumerator       go to state 57


State 37

  191 enum_specifier: ENUM identifier •
  193               | ENUM identifier • '{' enumerator_list '}'
  195               | ENUM identifier • '{' enumerator_list ',' '}'

    '{'  shift, and go to state 58

    $default  reduce using rule 191 (enum_specifier)


State 38

    0 $accept: translation_unit $end •

    $default  accept


State 39

    2 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 2 (translation_unit)


State 40

  101 declaration: declaration_specifiers ';' •

    $default  reduce using rule 101 (declaration)


State 41

  138 direct_declarator: '(' • declarator ')'

    IDENT  shift, and go to state 35
    '('    shift, and go to state 41
    '*'    shift, and go to state 42

    identifier         go to state 43
    declarator         go to state 59
    direct_declarator  go to state 51
    pointer            go to state 52


State 42

  144 pointer: '*' •
  145        | '*' • type_qualifier_list
  146        | '*' • pointer
  147        | '*' • type_qualifier_list pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 20
    '*'       shift, and go to state 42

    $default  reduce using rule 144 (pointer)

    type_qualifier       go to state 60
    pointer              go to state 61
    type_qualifier_list  go to state 62


State 43

  137 direct_declarator: identifier •

    $default  reduce using rule 137 (direct_declarator)


State 44

  108 declaration_specifiers: declaration_specifiers storage_class_specifier •

    $default  reduce using rule 108 (declaration_specifiers)


State 45

  106 declaration_specifiers: declaration_specifiers type_specifier •

    $default  reduce using rule 106 (declaration_specifiers)


State 46

  107 declaration_specifiers: declaration_specifiers type_qualifier •

    $default  reduce using rule 107 (declaration_specifiers)


State 47

  109 declaration_specifiers: declaration_specifiers function_specifier •

    $default  reduce using rule 109 (declaration_specifiers)


State 48

  100 declaration: declaration_specifiers init_declarator_list • ';'
  132 init_declarator_list: init_declarator_list • ',' init_declarator

    ';'  shift, and go to state 63
    ','  shift, and go to state 64


State 49

  131 init_declarator_list: init_declarator •

    $default  reduce using rule 131 (init_declarator_list)


State 50

    6 function_definition: declaration_specifiers declarator • @1 compound_statement
    8                    | declaration_specifiers declarator • declaration_list @2 compound_statement
  133 init_declarator: declarator •
  134                | declarator • '=' initializer

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '='       shift, and go to state 65

    '{'       reduce using rule 5 (@1)
    $default  reduce using rule 133 (init_declarator)

    @1                         go to state 66
    declaration_list           go to state 67
    declaration                go to state 68
    declaration_specifiers     go to state 69
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 51

  135 declarator: direct_declarator •
  139 direct_declarator: direct_declarator • '[' ']'
  140                  | direct_declarator • '[' assignment_expression ']'
  141                  | direct_declarator • '(' ')'
  142                  | direct_declarator • '(' identifier_list ')'
  143                  | direct_declarator • '(' parameter_type_list ')'

    '('  shift, and go to state 70
    '['  shift, and go to state 71

    $default  reduce using rule 135 (declarator)


State 52

  136 declarator: pointer • direct_declarator

    IDENT  shift, and go to state 35
    '('    shift, and go to state 41

    identifier         go to state 43
    direct_declarator  go to state 72


State 53

  175 struct_or_union_specifier: struct_or_union IDENT • '{' @4 struct_declaration_list '}'
  176                          | struct_or_union IDENT •

    '{'  shift, and go to state 73

    $default  reduce using rule 176 (struct_or_union_specifier)


State 54

  173 struct_or_union_specifier: struct_or_union '{' • struct_declaration_list '}'

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    type_specifier             go to state 74
    type_qualifier             go to state 75
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration_list    go to state 76
    struct_declaration         go to state 77
    specifier_qualifier_list   go to state 78
    enum_specifier             go to state 34


State 55

  198 enumerator: identifier •
  199           | identifier • '=' constant_expression

    '='  shift, and go to state 79

    $default  reduce using rule 198 (enumerator)


State 56

  192 enum_specifier: ENUM '{' enumerator_list • '}'
  194               | ENUM '{' enumerator_list • ',' '}'
  197 enumerator_list: enumerator_list • ',' enumerator

    '}'  shift, and go to state 80
    ','  shift, and go to state 81


State 57

  196 enumerator_list: enumerator •

    $default  reduce using rule 196 (enumerator_list)


State 58

  193 enum_specifier: ENUM identifier '{' • enumerator_list '}'
  195               | ENUM identifier '{' • enumerator_list ',' '}'

    IDENT  shift, and go to state 35

    identifier       go to state 55
    enumerator_list  go to state 82
    enumerator       go to state 57


State 59

  138 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 83


State 60

  148 type_qualifier_list: type_qualifier •

    $default  reduce using rule 148 (type_qualifier_list)


State 61

  146 pointer: '*' pointer •

    $default  reduce using rule 146 (pointer)


State 62

  145 pointer: '*' type_qualifier_list •
  147        | '*' type_qualifier_list • pointer
  149 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 20
    '*'       shift, and go to state 42

    $default  reduce using rule 145 (pointer)

    type_qualifier  go to state 84
    pointer         go to state 85


State 63

  100 declaration: declaration_specifiers init_declarator_list ';' •

    $default  reduce using rule 100 (declaration)


State 64

  132 init_declarator_list: init_declarator_list ',' • init_declarator

    IDENT  shift, and go to state 35
    '('    shift, and go to state 41
    '*'    shift, and go to state 42

    identifier         go to state 43
    init_declarator    go to state 86
    declarator         go to state 87
    direct_declarator  go to state 51
    pointer            go to state 52


State 65

  134 init_declarator: declarator '=' • initializer

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 120
    initializer                go to state 121


State 66

    6 function_definition: declaration_specifiers declarator @1 • compound_statement

    '{'  shift, and go to state 122

    compound_statement  go to state 123


State 67

    8 function_definition: declaration_specifiers declarator declaration_list • @2 compound_statement
   10 declaration_list: declaration_list • declaration

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    $default  reduce using rule 7 (@2)

    @2                         go to state 124
    declaration                go to state 125
    declaration_specifiers     go to state 69
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 68

    9 declaration_list: declaration •

    $default  reduce using rule 9 (declaration_list)


State 69

  100 declaration: declaration_specifiers • init_declarator_list ';'
  101            | declaration_specifiers • ';'
  106 declaration_specifiers: declaration_specifiers • type_specifier
  107                       | declaration_specifiers • type_qualifier
  108                       | declaration_specifiers • storage_class_specifier
  109                       | declaration_specifiers • function_specifier

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ';'       shift, and go to state 40
    '('       shift, and go to state 41
    '*'       shift, and go to state 42

    identifier                 go to state 43
    storage_class_specifier    go to state 44
    type_specifier             go to state 45
    type_qualifier             go to state 46
    function_specifier         go to state 47
    init_declarator_list       go to state 48
    init_declarator            go to state 49
    declarator                 go to state 87
    direct_declarator          go to state 51
    pointer                    go to state 52
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 70

  141 direct_declarator: direct_declarator '(' • ')'
  142                  | direct_declarator '(' • identifier_list ')'
  143                  | direct_declarator '(' • parameter_type_list ')'

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ')'       shift, and go to state 126

    identifier                 go to state 127
    declaration_specifiers     go to state 128
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    parameter_type_list        go to state 129
    parameter_list             go to state 130
    parameter_declaration      go to state 131
    identifier_list            go to state 132
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 71

  139 direct_declarator: direct_declarator '[' • ']'
  140                  | direct_declarator '[' • assignment_expression ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    ']'        shift, and go to state 133
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 134


State 72

  136 declarator: pointer direct_declarator •
  139 direct_declarator: direct_declarator • '[' ']'
  140                  | direct_declarator • '[' assignment_expression ']'
  141                  | direct_declarator • '(' ')'
  142                  | direct_declarator • '(' identifier_list ')'
  143                  | direct_declarator • '(' parameter_type_list ')'

    '('  shift, and go to state 70
    '['  shift, and go to state 71

    $default  reduce using rule 136 (declarator)


State 73

  175 struct_or_union_specifier: struct_or_union IDENT '{' • @4 struct_declaration_list '}'

    $default  reduce using rule 174 (@4)

    @4  go to state 135


State 74

  182 specifier_qualifier_list: type_specifier •

    $default  reduce using rule 182 (specifier_qualifier_list)


State 75

  183 specifier_qualifier_list: type_qualifier •

    $default  reduce using rule 183 (specifier_qualifier_list)


State 76

  173 struct_or_union_specifier: struct_or_union '{' struct_declaration_list • '}'
  180 struct_declaration_list: struct_declaration_list • struct_declaration

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '}'       shift, and go to state 136

    type_specifier             go to state 74
    type_qualifier             go to state 75
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration         go to state 137
    specifier_qualifier_list   go to state 78
    enum_specifier             go to state 34


State 77

  179 struct_declaration_list: struct_declaration •

    $default  reduce using rule 179 (struct_declaration_list)


State 78

  181 struct_declaration: specifier_qualifier_list • struct_declarator_list ';'
  184 specifier_qualifier_list: specifier_qualifier_list • type_specifier
  185                         | specifier_qualifier_list • type_qualifier

    IDENT     shift, and go to state 35
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 41
    '*'       shift, and go to state 42
    ':'       shift, and go to state 138

    identifier                 go to state 43
    type_specifier             go to state 139
    type_qualifier             go to state 140
    declarator                 go to state 141
    direct_declarator          go to state 51
    pointer                    go to state 52
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declarator_list     go to state 142
    struct_declarator          go to state 143
    enum_specifier             go to state 34


State 79

  199 enumerator: identifier '=' • constant_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 145
    constant_expression        go to state 146


State 80

  192 enum_specifier: ENUM '{' enumerator_list '}' •

    $default  reduce using rule 192 (enum_specifier)


State 81

  194 enum_specifier: ENUM '{' enumerator_list ',' • '}'
  197 enumerator_list: enumerator_list ',' • enumerator

    IDENT  shift, and go to state 35
    '}'    shift, and go to state 147

    identifier  go to state 55
    enumerator  go to state 148


State 82

  193 enum_specifier: ENUM identifier '{' enumerator_list • '}'
  195               | ENUM identifier '{' enumerator_list • ',' '}'
  197 enumerator_list: enumerator_list • ',' enumerator

    '}'  shift, and go to state 149
    ','  shift, and go to state 150


State 83

  138 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 138 (direct_declarator)


State 84

  149 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 149 (type_qualifier_list)


State 85

  147 pointer: '*' type_qualifier_list pointer •

    $default  reduce using rule 147 (pointer)


State 86

  132 init_declarator_list: init_declarator_list ',' init_declarator •

    $default  reduce using rule 132 (init_declarator_list)


State 87

  133 init_declarator: declarator •
  134                | declarator • '=' initializer

    '='  shift, and go to state 65

    $default  reduce using rule 133 (init_declarator)


State 88

   24 constant: CHARLIT •

    $default  reduce using rule 24 (constant)


State 89

   23 string_literal: STRINGLIT •

    $default  reduce using rule 23 (string_literal)


State 90

   25 constant: NUMBERLIT •

    $default  reduce using rule 25 (constant)


State 91

   41 unary_expression: "++" • unary_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 151
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 152


State 92

   42 unary_expression: "--" • unary_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 151
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 153


State 93

   51 unary_expression: ALIGNOF • unary_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 151
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 154


State 94

   49 unary_expression: SIZEOF • unary_expression
   50                 | SIZEOF • '(' type_name ')'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 155
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 156


State 95

   29 primary_expression: '(' • expression ')'
   53 cast_expression: '(' • type_name ')' cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    SIZEOF     shift, and go to state 94
    STRUCT     shift, and go to state 16
    UNION      shift, and go to state 17
    UNSIGNED   shift, and go to state 18
    VOID       shift, and go to state 19
    VOLATILE   shift, and go to state 20
    _BOOL      shift, and go to state 21
    _COMPLEX   shift, and go to state 22
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 157
    expression                 go to state 158
    type_specifier             go to state 74
    type_qualifier             go to state 75
    type_name                  go to state 159
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    specifier_qualifier_list   go to state 160
    enum_specifier             go to state 34


State 96

   43 unary_expression: '&' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 144
    cast_expression     go to state 161


State 97

   44 unary_expression: '*' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 144
    cast_expression     go to state 162


State 98

   45 unary_expression: '+' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 144
    cast_expression     go to state 163


State 99

   46 unary_expression: '-' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 144
    cast_expression     go to state 164


State 100

   47 unary_expression: '~' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 144
    cast_expression     go to state 165


State 101

   48 unary_expression: '!' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 144
    cast_expression     go to state 166


State 102

   26 primary_expression: identifier •

    $default  reduce using rule 26 (primary_expression)


State 103

   28 primary_expression: string_literal •

    $default  reduce using rule 28 (primary_expression)


State 104

   27 primary_expression: constant •

    $default  reduce using rule 27 (primary_expression)


State 105

   30 postfix_expression: primary_expression •

    $default  reduce using rule 30 (postfix_expression)


State 106

   31 postfix_expression: postfix_expression • '[' expression ']'
   32                   | postfix_expression • '(' ')'
   33                   | postfix_expression • '(' argument_expression_list ')'
   34                   | postfix_expression • '.' identifier
   35                   | postfix_expression • "->" identifier
   36                   | postfix_expression • "++"
   37                   | postfix_expression • "--"
   40 unary_expression: postfix_expression •

    "->"  shift, and go to state 167
    "++"  shift, and go to state 168
    "--"  shift, and go to state 169
    '('   shift, and go to state 170
    '['   shift, and go to state 171
    '.'   shift, and go to state 172

    $default  reduce using rule 40 (unary_expression)


State 107

   52 cast_expression: unary_expression •
   85 assignment_expression: unary_expression • assignment_operator assignment_expression

    "*="   shift, and go to state 173
    "/="   shift, and go to state 174
    "%="   shift, and go to state 175
    "+="   shift, and go to state 176
    "-="   shift, and go to state 177
    "<<="  shift, and go to state 178
    ">>="  shift, and go to state 179
    "&="   shift, and go to state 180
    "|="   shift, and go to state 181
    "^="   shift, and go to state 182
    '='    shift, and go to state 183

    $default  reduce using rule 52 (cast_expression)

    assignment_operator  go to state 184


State 108

   54 multiplicative_expression: cast_expression •

    $default  reduce using rule 54 (multiplicative_expression)


State 109

   55 multiplicative_expression: multiplicative_expression • '*' cast_expression
   56                          | multiplicative_expression • '/' cast_expression
   57                          | multiplicative_expression • '%' cast_expression
   58 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 185
    '/'  shift, and go to state 186
    '%'  shift, and go to state 187

    $default  reduce using rule 58 (additive_expression)


State 110

   59 additive_expression: additive_expression • '+' multiplicative_expression
   60                    | additive_expression • '-' multiplicative_expression
   61 shift_expression: additive_expression •

    '+'  shift, and go to state 188
    '-'  shift, and go to state 189

    $default  reduce using rule 61 (shift_expression)


State 111

   62 shift_expression: shift_expression • "<<" additive_expression
   63                 | shift_expression • ">>" additive_expression
   64 relational_expression: shift_expression •

    "<<"  shift, and go to state 190
    ">>"  shift, and go to state 191

    $default  reduce using rule 64 (relational_expression)


State 112

   65 relational_expression: relational_expression • '<' shift_expression
   66                      | relational_expression • "<=" shift_expression
   67                      | relational_expression • '>' shift_expression
   68                      | relational_expression • ">=" shift_expression
   69 equality_expression: relational_expression •

    "<="  shift, and go to state 192
    ">="  shift, and go to state 193
    '<'   shift, and go to state 194
    '>'   shift, and go to state 195

    $default  reduce using rule 69 (equality_expression)


State 113

   70 equality_expression: equality_expression • "==" relational_expression
   71                    | equality_expression • "!=" relational_expression
   72 and_expression: equality_expression •

    "=="  shift, and go to state 196
    "!="  shift, and go to state 197

    $default  reduce using rule 72 (and_expression)


State 114

   73 and_expression: and_expression • '&' equality_expression
   74 xor_expression: and_expression •

    '&'  shift, and go to state 198

    $default  reduce using rule 74 (xor_expression)


State 115

   75 xor_expression: xor_expression • '^' and_expression
   76 or_expression: xor_expression •

    '^'  shift, and go to state 199

    $default  reduce using rule 76 (or_expression)


State 116

   77 or_expression: or_expression • '|' xor_expression
   78 logical_and_expression: or_expression •

    '|'  shift, and go to state 200

    $default  reduce using rule 78 (logical_and_expression)


State 117

   79 logical_and_expression: logical_and_expression • "&&" or_expression
   80 logical_or_expression: logical_and_expression •

    "&&"  shift, and go to state 201

    $default  reduce using rule 80 (logical_or_expression)


State 118

   81 logical_or_expression: logical_or_expression • "||" logical_and_expression
   82 conditional_expression: logical_or_expression •
   83                       | logical_or_expression • '?' expression ':' conditional_expression

    "||"  shift, and go to state 202
    '?'   shift, and go to state 203

    $default  reduce using rule 82 (conditional_expression)


State 119

   84 assignment_expression: conditional_expression •

    $default  reduce using rule 84 (assignment_expression)


State 120

  172 initializer: assignment_expression •

    $default  reduce using rule 172 (initializer)


State 121

  134 init_declarator: declarator '=' initializer •

    $default  reduce using rule 134 (init_declarator)


State 122

   11 compound_statement: '{' • block_item_list '}'
   12                   | '{' • '}'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    AUTO       shift, and go to state 1
    ALIGNOF    shift, and go to state 93
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    SIZEOF     shift, and go to state 94
    STATIC     shift, and go to state 15
    STRUCT     shift, and go to state 16
    UNION      shift, and go to state 17
    UNSIGNED   shift, and go to state 18
    VOID       shift, and go to state 19
    VOLATILE   shift, and go to state 20
    _BOOL      shift, and go to state 21
    _COMPLEX   shift, and go to state 22
    '}'        shift, and go to state 204
    ';'        shift, and go to state 205
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    $default  reduce using rule 17 ($@3)

    block_item_list            go to state 206
    block_item                 go to state 207
    statement                  go to state 208
    $@3                        go to state 209
    expression_statement       go to state 210
    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 157
    expression                 go to state 211
    declaration                go to state 212
    declaration_specifiers     go to state 69
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 123

    6 function_definition: declaration_specifiers declarator @1 compound_statement •

    $default  reduce using rule 6 (function_definition)


State 124

    8 function_definition: declaration_specifiers declarator declaration_list @2 • compound_statement

    '{'  shift, and go to state 122

    compound_statement  go to state 213


State 125

   10 declaration_list: declaration_list declaration •

    $default  reduce using rule 10 (declaration_list)


State 126

  141 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 141 (direct_declarator)


State 127

  156 identifier_list: identifier •

    $default  reduce using rule 156 (identifier_list)


State 128

  106 declaration_specifiers: declaration_specifiers • type_specifier
  107                       | declaration_specifiers • type_qualifier
  108                       | declaration_specifiers • storage_class_specifier
  109                       | declaration_specifiers • function_specifier
  153 parameter_declaration: declaration_specifiers • declarator
  154                      | declaration_specifiers •
  155                      | declaration_specifiers • abstract_declarator

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 214
    '['       shift, and go to state 215
    '*'       shift, and go to state 42

    $default  reduce using rule 154 (parameter_declaration)

    identifier                  go to state 43
    storage_class_specifier     go to state 44
    type_specifier              go to state 45
    type_qualifier              go to state 46
    function_specifier          go to state 47
    declarator                  go to state 216
    direct_declarator           go to state 51
    pointer                     go to state 217
    abstract_declarator         go to state 218
    direct_abstract_declarator  go to state 219
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34


State 129

  143 direct_declarator: direct_declarator '(' parameter_type_list • ')'

    ')'  shift, and go to state 220


State 130

  150 parameter_type_list: parameter_list •
  152 parameter_list: parameter_list • ',' parameter_declaration

    ','  shift, and go to state 221

    $default  reduce using rule 150 (parameter_type_list)


State 131

  151 parameter_list: parameter_declaration •

    $default  reduce using rule 151 (parameter_list)


State 132

  142 direct_declarator: direct_declarator '(' identifier_list • ')'
  157 identifier_list: identifier_list • ',' identifier

    ')'  shift, and go to state 222
    ','  shift, and go to state 223


State 133

  139 direct_declarator: direct_declarator '[' ']' •

    $default  reduce using rule 139 (direct_declarator)


State 134

  140 direct_declarator: direct_declarator '[' assignment_expression • ']'

    ']'  shift, and go to state 224


State 135

  175 struct_or_union_specifier: struct_or_union IDENT '{' @4 • struct_declaration_list '}'

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    type_specifier             go to state 74
    type_qualifier             go to state 75
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration_list    go to state 225
    struct_declaration         go to state 77
    specifier_qualifier_list   go to state 78
    enum_specifier             go to state 34


State 136

  173 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}' •

    $default  reduce using rule 173 (struct_or_union_specifier)


State 137

  180 struct_declaration_list: struct_declaration_list struct_declaration •

    $default  reduce using rule 180 (struct_declaration_list)


State 138

  189 struct_declarator: ':' • constant_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 145
    constant_expression        go to state 226


State 139

  184 specifier_qualifier_list: specifier_qualifier_list type_specifier •

    $default  reduce using rule 184 (specifier_qualifier_list)


State 140

  185 specifier_qualifier_list: specifier_qualifier_list type_qualifier •

    $default  reduce using rule 185 (specifier_qualifier_list)


State 141

  188 struct_declarator: declarator •
  190                  | declarator • ':' constant_expression

    ':'  shift, and go to state 227

    $default  reduce using rule 188 (struct_declarator)


State 142

  181 struct_declaration: specifier_qualifier_list struct_declarator_list • ';'
  187 struct_declarator_list: struct_declarator_list • ',' struct_declarator

    ';'  shift, and go to state 228
    ','  shift, and go to state 229


State 143

  186 struct_declarator_list: struct_declarator •

    $default  reduce using rule 186 (struct_declarator_list)


State 144

   52 cast_expression: unary_expression •

    $default  reduce using rule 52 (cast_expression)


State 145

   99 constant_expression: conditional_expression •

    $default  reduce using rule 99 (constant_expression)


State 146

  199 enumerator: identifier '=' constant_expression •

    $default  reduce using rule 199 (enumerator)


State 147

  194 enum_specifier: ENUM '{' enumerator_list ',' '}' •

    $default  reduce using rule 194 (enum_specifier)


State 148

  197 enumerator_list: enumerator_list ',' enumerator •

    $default  reduce using rule 197 (enumerator_list)


State 149

  193 enum_specifier: ENUM identifier '{' enumerator_list '}' •

    $default  reduce using rule 193 (enum_specifier)


State 150

  195 enum_specifier: ENUM identifier '{' enumerator_list ',' • '}'
  197 enumerator_list: enumerator_list ',' • enumerator

    IDENT  shift, and go to state 35
    '}'    shift, and go to state 230

    identifier  go to state 55
    enumerator  go to state 148


State 151

   29 primary_expression: '(' • expression ')'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 157
    expression                 go to state 158


State 152

   41 unary_expression: "++" unary_expression •

    $default  reduce using rule 41 (unary_expression)


State 153

   42 unary_expression: "--" unary_expression •

    $default  reduce using rule 42 (unary_expression)


State 154

   51 unary_expression: ALIGNOF unary_expression •

    $default  reduce using rule 51 (unary_expression)


State 155

   29 primary_expression: '(' • expression ')'
   50 unary_expression: SIZEOF '(' • type_name ')'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    SIZEOF     shift, and go to state 94
    STRUCT     shift, and go to state 16
    UNION      shift, and go to state 17
    UNSIGNED   shift, and go to state 18
    VOID       shift, and go to state 19
    VOLATILE   shift, and go to state 20
    _BOOL      shift, and go to state 21
    _COMPLEX   shift, and go to state 22
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 157
    expression                 go to state 158
    type_specifier             go to state 74
    type_qualifier             go to state 75
    type_name                  go to state 231
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    specifier_qualifier_list   go to state 160
    enum_specifier             go to state 34


State 156

   49 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 49 (unary_expression)


State 157

   97 expression: assignment_expression •

    $default  reduce using rule 97 (expression)


State 158

   29 primary_expression: '(' expression • ')'
   98 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 232
    ','  shift, and go to state 233


State 159

   53 cast_expression: '(' type_name • ')' cast_expression

    ')'  shift, and go to state 234


State 160

  158 type_name: specifier_qualifier_list •
  159          | specifier_qualifier_list • abstract_declarator
  184 specifier_qualifier_list: specifier_qualifier_list • type_specifier
  185                         | specifier_qualifier_list • type_qualifier

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 235
    '['       shift, and go to state 215
    '*'       shift, and go to state 42

    $default  reduce using rule 158 (type_name)

    type_specifier              go to state 139
    type_qualifier              go to state 140
    pointer                     go to state 236
    abstract_declarator         go to state 237
    direct_abstract_declarator  go to state 219
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34


State 161

   43 unary_expression: '&' cast_expression •

    $default  reduce using rule 43 (unary_expression)


State 162

   44 unary_expression: '*' cast_expression •

    $default  reduce using rule 44 (unary_expression)


State 163

   45 unary_expression: '+' cast_expression •

    $default  reduce using rule 45 (unary_expression)


State 164

   46 unary_expression: '-' cast_expression •

    $default  reduce using rule 46 (unary_expression)


State 165

   47 unary_expression: '~' cast_expression •

    $default  reduce using rule 47 (unary_expression)


State 166

   48 unary_expression: '!' cast_expression •

    $default  reduce using rule 48 (unary_expression)


State 167

   35 postfix_expression: postfix_expression "->" • identifier

    IDENT  shift, and go to state 35

    identifier  go to state 238


State 168

   36 postfix_expression: postfix_expression "++" •

    $default  reduce using rule 36 (postfix_expression)


State 169

   37 postfix_expression: postfix_expression "--" •

    $default  reduce using rule 37 (postfix_expression)


State 170

   32 postfix_expression: postfix_expression '(' • ')'
   33                   | postfix_expression '(' • argument_expression_list ')'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    ')'        shift, and go to state 239
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    argument_expression_list   go to state 240
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 241


State 171

   31 postfix_expression: postfix_expression '[' • expression ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 157
    expression                 go to state 242


State 172

   34 postfix_expression: postfix_expression '.' • identifier

    IDENT  shift, and go to state 35

    identifier  go to state 243


State 173

   87 assignment_operator: "*=" •

    $default  reduce using rule 87 (assignment_operator)


State 174

   88 assignment_operator: "/=" •

    $default  reduce using rule 88 (assignment_operator)


State 175

   89 assignment_operator: "%=" •

    $default  reduce using rule 89 (assignment_operator)


State 176

   90 assignment_operator: "+=" •

    $default  reduce using rule 90 (assignment_operator)


State 177

   91 assignment_operator: "-=" •

    $default  reduce using rule 91 (assignment_operator)


State 178

   92 assignment_operator: "<<=" •

    $default  reduce using rule 92 (assignment_operator)


State 179

   93 assignment_operator: ">>=" •

    $default  reduce using rule 93 (assignment_operator)


State 180

   94 assignment_operator: "&=" •

    $default  reduce using rule 94 (assignment_operator)


State 181

   96 assignment_operator: "|=" •

    $default  reduce using rule 96 (assignment_operator)


State 182

   95 assignment_operator: "^=" •

    $default  reduce using rule 95 (assignment_operator)


State 183

   86 assignment_operator: '=' •

    $default  reduce using rule 86 (assignment_operator)


State 184

   85 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 244


State 185

   55 multiplicative_expression: multiplicative_expression '*' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 144
    cast_expression     go to state 245


State 186

   56 multiplicative_expression: multiplicative_expression '/' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 144
    cast_expression     go to state 246


State 187

   57 multiplicative_expression: multiplicative_expression '%' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 144
    cast_expression     go to state 247


State 188

   59 additive_expression: additive_expression '+' • multiplicative_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 248


State 189

   60 additive_expression: additive_expression '-' • multiplicative_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 249


State 190

   62 shift_expression: shift_expression "<<" • additive_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 250


State 191

   63 shift_expression: shift_expression ">>" • additive_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 251


State 192

   66 relational_expression: relational_expression "<=" • shift_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 252


State 193

   68 relational_expression: relational_expression ">=" • shift_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 253


State 194

   65 relational_expression: relational_expression '<' • shift_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 254


State 195

   67 relational_expression: relational_expression '>' • shift_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 255


State 196

   70 equality_expression: equality_expression "==" • relational_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 256


State 197

   71 equality_expression: equality_expression "!=" • relational_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 257


State 198

   73 and_expression: and_expression '&' • equality_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 258


State 199

   75 xor_expression: xor_expression '^' • and_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 259


State 200

   77 or_expression: or_expression '|' • xor_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 260


State 201

   79 logical_and_expression: logical_and_expression "&&" • or_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 261


State 202

   81 logical_or_expression: logical_or_expression "||" • logical_and_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 262


State 203

   83 conditional_expression: logical_or_expression '?' • expression ':' conditional_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 157
    expression                 go to state 263


State 204

   12 compound_statement: '{' '}' •

    $default  reduce using rule 12 (compound_statement)


State 205

   21 expression_statement: ';' •

    $default  reduce using rule 21 (expression_statement)


State 206

   11 compound_statement: '{' block_item_list • '}'
   14 block_item_list: block_item_list • block_item

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    AUTO       shift, and go to state 1
    ALIGNOF    shift, and go to state 93
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    SIZEOF     shift, and go to state 94
    STATIC     shift, and go to state 15
    STRUCT     shift, and go to state 16
    UNION      shift, and go to state 17
    UNSIGNED   shift, and go to state 18
    VOID       shift, and go to state 19
    VOLATILE   shift, and go to state 20
    _BOOL      shift, and go to state 21
    _COMPLEX   shift, and go to state 22
    '}'        shift, and go to state 264
    ';'        shift, and go to state 205
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    $default  reduce using rule 17 ($@3)

    block_item                 go to state 265
    statement                  go to state 208
    $@3                        go to state 209
    expression_statement       go to state 210
    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 157
    expression                 go to state 211
    declaration                go to state 212
    declaration_specifiers     go to state 69
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 207

   13 block_item_list: block_item •

    $default  reduce using rule 13 (block_item_list)


State 208

   16 block_item: statement •

    $default  reduce using rule 16 (block_item)


State 209

   18 statement: $@3 • compound_statement

    '{'  shift, and go to state 122

    compound_statement  go to state 266


State 210

   19 statement: expression_statement •

    $default  reduce using rule 19 (statement)


State 211

   20 expression_statement: expression • ';'
   98 expression: expression • ',' assignment_expression

    ';'  shift, and go to state 267
    ','  shift, and go to state 233


State 212

   15 block_item: declaration •

    $default  reduce using rule 15 (block_item)


State 213

    8 function_definition: declaration_specifiers declarator declaration_list @2 compound_statement •

    $default  reduce using rule 8 (function_definition)


State 214

  138 direct_declarator: '(' • declarator ')'
  163 direct_abstract_declarator: '(' • abstract_declarator ')'
  168                           | '(' • ')'
  170                           | '(' • parameter_type_list ')'

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 214
    ')'       shift, and go to state 268
    '['       shift, and go to state 215
    '*'       shift, and go to state 42

    identifier                  go to state 43
    declaration_specifiers      go to state 128
    storage_class_specifier     go to state 28
    type_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31
    declarator                  go to state 59
    direct_declarator           go to state 51
    pointer                     go to state 217
    parameter_type_list         go to state 269
    parameter_list              go to state 130
    parameter_declaration       go to state 131
    abstract_declarator         go to state 270
    direct_abstract_declarator  go to state 219
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34


State 215

  164 direct_abstract_declarator: '[' • ']'
  165                           | '[' • assignment_expression ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    ']'        shift, and go to state 271
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 272


State 216

  153 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 153 (parameter_declaration)


State 217

  136 declarator: pointer • direct_declarator
  160 abstract_declarator: pointer •
  162                    | pointer • direct_abstract_declarator

    IDENT  shift, and go to state 35
    '('    shift, and go to state 214
    '['    shift, and go to state 215

    $default  reduce using rule 160 (abstract_declarator)

    identifier                  go to state 43
    direct_declarator           go to state 72
    direct_abstract_declarator  go to state 273


State 218

  155 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 155 (parameter_declaration)


State 219

  161 abstract_declarator: direct_abstract_declarator •
  166 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
  167                           | direct_abstract_declarator • '[' assignment_expression ']'
  169                           | direct_abstract_declarator • '(' ')'
  171                           | direct_abstract_declarator • '(' parameter_type_list ')'

    '('  shift, and go to state 274
    '['  shift, and go to state 275

    $default  reduce using rule 161 (abstract_declarator)


State 220

  143 direct_declarator: direct_declarator '(' parameter_type_list ')' •

    $default  reduce using rule 143 (direct_declarator)


State 221

  152 parameter_list: parameter_list ',' • parameter_declaration

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    declaration_specifiers     go to state 128
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    parameter_declaration      go to state 276
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 222

  142 direct_declarator: direct_declarator '(' identifier_list ')' •

    $default  reduce using rule 142 (direct_declarator)


State 223

  157 identifier_list: identifier_list ',' • identifier

    IDENT  shift, and go to state 35

    identifier  go to state 277


State 224

  140 direct_declarator: direct_declarator '[' assignment_expression ']' •

    $default  reduce using rule 140 (direct_declarator)


State 225

  175 struct_or_union_specifier: struct_or_union IDENT '{' @4 struct_declaration_list • '}'
  180 struct_declaration_list: struct_declaration_list • struct_declaration

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '}'       shift, and go to state 278

    type_specifier             go to state 74
    type_qualifier             go to state 75
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration         go to state 137
    specifier_qualifier_list   go to state 78
    enum_specifier             go to state 34


State 226

  189 struct_declarator: ':' constant_expression •

    $default  reduce using rule 189 (struct_declarator)


State 227

  190 struct_declarator: declarator ':' • constant_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 145
    constant_expression        go to state 279


State 228

  181 struct_declaration: specifier_qualifier_list struct_declarator_list ';' •

    $default  reduce using rule 181 (struct_declaration)


State 229

  187 struct_declarator_list: struct_declarator_list ',' • struct_declarator

    IDENT  shift, and go to state 35
    '('    shift, and go to state 41
    '*'    shift, and go to state 42
    ':'    shift, and go to state 138

    identifier         go to state 43
    declarator         go to state 141
    direct_declarator  go to state 51
    pointer            go to state 52
    struct_declarator  go to state 280


State 230

  195 enum_specifier: ENUM identifier '{' enumerator_list ',' '}' •

    $default  reduce using rule 195 (enum_specifier)


State 231

   50 unary_expression: SIZEOF '(' type_name • ')'

    ')'  shift, and go to state 281


State 232

   29 primary_expression: '(' expression ')' •

    $default  reduce using rule 29 (primary_expression)


State 233

   98 expression: expression ',' • assignment_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 282


State 234

   53 cast_expression: '(' type_name ')' • cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier          go to state 102
    string_literal      go to state 103
    constant            go to state 104
    primary_expression  go to state 105
    postfix_expression  go to state 106
    unary_expression    go to state 144
    cast_expression     go to state 283


State 235

  163 direct_abstract_declarator: '(' • abstract_declarator ')'
  168                           | '(' • ')'
  170                           | '(' • parameter_type_list ')'

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 235
    ')'       shift, and go to state 268
    '['       shift, and go to state 215
    '*'       shift, and go to state 42

    declaration_specifiers      go to state 128
    storage_class_specifier     go to state 28
    type_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31
    pointer                     go to state 236
    parameter_type_list         go to state 269
    parameter_list              go to state 130
    parameter_declaration       go to state 131
    abstract_declarator         go to state 270
    direct_abstract_declarator  go to state 219
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34


State 236

  160 abstract_declarator: pointer •
  162                    | pointer • direct_abstract_declarator

    '('  shift, and go to state 235
    '['  shift, and go to state 215

    $default  reduce using rule 160 (abstract_declarator)

    direct_abstract_declarator  go to state 273


State 237

  159 type_name: specifier_qualifier_list abstract_declarator •

    $default  reduce using rule 159 (type_name)


State 238

   35 postfix_expression: postfix_expression "->" identifier •

    $default  reduce using rule 35 (postfix_expression)


State 239

   32 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 32 (postfix_expression)


State 240

   33 postfix_expression: postfix_expression '(' argument_expression_list • ')'
   39 argument_expression_list: argument_expression_list • ',' assignment_expression

    ')'  shift, and go to state 284
    ','  shift, and go to state 285


State 241

   38 argument_expression_list: assignment_expression •

    $default  reduce using rule 38 (argument_expression_list)


State 242

   31 postfix_expression: postfix_expression '[' expression • ']'
   98 expression: expression • ',' assignment_expression

    ']'  shift, and go to state 286
    ','  shift, and go to state 233


State 243

   34 postfix_expression: postfix_expression '.' identifier •

    $default  reduce using rule 34 (postfix_expression)


State 244

   85 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 85 (assignment_expression)


State 245

   55 multiplicative_expression: multiplicative_expression '*' cast_expression •

    $default  reduce using rule 55 (multiplicative_expression)


State 246

   56 multiplicative_expression: multiplicative_expression '/' cast_expression •

    $default  reduce using rule 56 (multiplicative_expression)


State 247

   57 multiplicative_expression: multiplicative_expression '%' cast_expression •

    $default  reduce using rule 57 (multiplicative_expression)


State 248

   55 multiplicative_expression: multiplicative_expression • '*' cast_expression
   56                          | multiplicative_expression • '/' cast_expression
   57                          | multiplicative_expression • '%' cast_expression
   59 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 185
    '/'  shift, and go to state 186
    '%'  shift, and go to state 187

    $default  reduce using rule 59 (additive_expression)


State 249

   55 multiplicative_expression: multiplicative_expression • '*' cast_expression
   56                          | multiplicative_expression • '/' cast_expression
   57                          | multiplicative_expression • '%' cast_expression
   60 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 185
    '/'  shift, and go to state 186
    '%'  shift, and go to state 187

    $default  reduce using rule 60 (additive_expression)


State 250

   59 additive_expression: additive_expression • '+' multiplicative_expression
   60                    | additive_expression • '-' multiplicative_expression
   62 shift_expression: shift_expression "<<" additive_expression •

    '+'  shift, and go to state 188
    '-'  shift, and go to state 189

    $default  reduce using rule 62 (shift_expression)


State 251

   59 additive_expression: additive_expression • '+' multiplicative_expression
   60                    | additive_expression • '-' multiplicative_expression
   63 shift_expression: shift_expression ">>" additive_expression •

    '+'  shift, and go to state 188
    '-'  shift, and go to state 189

    $default  reduce using rule 63 (shift_expression)


State 252

   62 shift_expression: shift_expression • "<<" additive_expression
   63                 | shift_expression • ">>" additive_expression
   66 relational_expression: relational_expression "<=" shift_expression •

    "<<"  shift, and go to state 190
    ">>"  shift, and go to state 191

    $default  reduce using rule 66 (relational_expression)


State 253

   62 shift_expression: shift_expression • "<<" additive_expression
   63                 | shift_expression • ">>" additive_expression
   68 relational_expression: relational_expression ">=" shift_expression •

    "<<"  shift, and go to state 190
    ">>"  shift, and go to state 191

    $default  reduce using rule 68 (relational_expression)


State 254

   62 shift_expression: shift_expression • "<<" additive_expression
   63                 | shift_expression • ">>" additive_expression
   65 relational_expression: relational_expression '<' shift_expression •

    "<<"  shift, and go to state 190
    ">>"  shift, and go to state 191

    $default  reduce using rule 65 (relational_expression)


State 255

   62 shift_expression: shift_expression • "<<" additive_expression
   63                 | shift_expression • ">>" additive_expression
   67 relational_expression: relational_expression '>' shift_expression •

    "<<"  shift, and go to state 190
    ">>"  shift, and go to state 191

    $default  reduce using rule 67 (relational_expression)


State 256

   65 relational_expression: relational_expression • '<' shift_expression
   66                      | relational_expression • "<=" shift_expression
   67                      | relational_expression • '>' shift_expression
   68                      | relational_expression • ">=" shift_expression
   70 equality_expression: equality_expression "==" relational_expression •

    "<="  shift, and go to state 192
    ">="  shift, and go to state 193
    '<'   shift, and go to state 194
    '>'   shift, and go to state 195

    $default  reduce using rule 70 (equality_expression)


State 257

   65 relational_expression: relational_expression • '<' shift_expression
   66                      | relational_expression • "<=" shift_expression
   67                      | relational_expression • '>' shift_expression
   68                      | relational_expression • ">=" shift_expression
   71 equality_expression: equality_expression "!=" relational_expression •

    "<="  shift, and go to state 192
    ">="  shift, and go to state 193
    '<'   shift, and go to state 194
    '>'   shift, and go to state 195

    $default  reduce using rule 71 (equality_expression)


State 258

   70 equality_expression: equality_expression • "==" relational_expression
   71                    | equality_expression • "!=" relational_expression
   73 and_expression: and_expression '&' equality_expression •

    "=="  shift, and go to state 196
    "!="  shift, and go to state 197

    $default  reduce using rule 73 (and_expression)


State 259

   73 and_expression: and_expression • '&' equality_expression
   75 xor_expression: xor_expression '^' and_expression •

    '&'  shift, and go to state 198

    $default  reduce using rule 75 (xor_expression)


State 260

   75 xor_expression: xor_expression • '^' and_expression
   77 or_expression: or_expression '|' xor_expression •

    '^'  shift, and go to state 199

    $default  reduce using rule 77 (or_expression)


State 261

   77 or_expression: or_expression • '|' xor_expression
   79 logical_and_expression: logical_and_expression "&&" or_expression •

    '|'  shift, and go to state 200

    $default  reduce using rule 79 (logical_and_expression)


State 262

   79 logical_and_expression: logical_and_expression • "&&" or_expression
   81 logical_or_expression: logical_or_expression "||" logical_and_expression •

    "&&"  shift, and go to state 201

    $default  reduce using rule 81 (logical_or_expression)


State 263

   83 conditional_expression: logical_or_expression '?' expression • ':' conditional_expression
   98 expression: expression • ',' assignment_expression

    ','  shift, and go to state 233
    ':'  shift, and go to state 287


State 264

   11 compound_statement: '{' block_item_list '}' •

    $default  reduce using rule 11 (compound_statement)


State 265

   14 block_item_list: block_item_list block_item •

    $default  reduce using rule 14 (block_item_list)


State 266

   18 statement: $@3 compound_statement •

    $default  reduce using rule 18 (statement)


State 267

   20 expression_statement: expression ';' •

    $default  reduce using rule 20 (expression_statement)


State 268

  168 direct_abstract_declarator: '(' ')' •

    $default  reduce using rule 168 (direct_abstract_declarator)


State 269

  170 direct_abstract_declarator: '(' parameter_type_list • ')'

    ')'  shift, and go to state 288


State 270

  163 direct_abstract_declarator: '(' abstract_declarator • ')'

    ')'  shift, and go to state 289


State 271

  164 direct_abstract_declarator: '[' ']' •

    $default  reduce using rule 164 (direct_abstract_declarator)


State 272

  165 direct_abstract_declarator: '[' assignment_expression • ']'

    ']'  shift, and go to state 290


State 273

  162 abstract_declarator: pointer direct_abstract_declarator •
  166 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
  167                           | direct_abstract_declarator • '[' assignment_expression ']'
  169                           | direct_abstract_declarator • '(' ')'
  171                           | direct_abstract_declarator • '(' parameter_type_list ')'

    '('  shift, and go to state 274
    '['  shift, and go to state 275

    $default  reduce using rule 162 (abstract_declarator)


State 274

  169 direct_abstract_declarator: direct_abstract_declarator '(' • ')'
  171                           | direct_abstract_declarator '(' • parameter_type_list ')'

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ')'       shift, and go to state 291

    declaration_specifiers     go to state 128
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    parameter_type_list        go to state 292
    parameter_list             go to state 130
    parameter_declaration      go to state 131
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 275

  166 direct_abstract_declarator: direct_abstract_declarator '[' • ']'
  167                           | direct_abstract_declarator '[' • assignment_expression ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    ']'        shift, and go to state 293
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 294


State 276

  152 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 152 (parameter_list)


State 277

  157 identifier_list: identifier_list ',' identifier •

    $default  reduce using rule 157 (identifier_list)


State 278

  175 struct_or_union_specifier: struct_or_union IDENT '{' @4 struct_declaration_list '}' •

    $default  reduce using rule 175 (struct_or_union_specifier)


State 279

  190 struct_declarator: declarator ':' constant_expression •

    $default  reduce using rule 190 (struct_declarator)


State 280

  187 struct_declarator_list: struct_declarator_list ',' struct_declarator •

    $default  reduce using rule 187 (struct_declarator_list)


State 281

   50 unary_expression: SIZEOF '(' type_name ')' •

    $default  reduce using rule 50 (unary_expression)


State 282

   98 expression: expression ',' assignment_expression •

    $default  reduce using rule 98 (expression)


State 283

   53 cast_expression: '(' type_name ')' cast_expression •

    $default  reduce using rule 53 (cast_expression)


State 284

   33 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  reduce using rule 33 (postfix_expression)


State 285

   39 argument_expression_list: argument_expression_list ',' • assignment_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 107
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 119
    assignment_expression      go to state 295


State 286

   31 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 31 (postfix_expression)


State 287

   83 conditional_expression: logical_or_expression '?' expression ':' • conditional_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 88
    STRINGLIT  shift, and go to state 89
    NUMBERLIT  shift, and go to state 90
    "++"       shift, and go to state 91
    "--"       shift, and go to state 92
    ALIGNOF    shift, and go to state 93
    SIZEOF     shift, and go to state 94
    '('        shift, and go to state 95
    '&'        shift, and go to state 96
    '*'        shift, and go to state 97
    '+'        shift, and go to state 98
    '-'        shift, and go to state 99
    '~'        shift, and go to state 100
    '!'        shift, and go to state 101

    identifier                 go to state 102
    string_literal             go to state 103
    constant                   go to state 104
    primary_expression         go to state 105
    postfix_expression         go to state 106
    unary_expression           go to state 144
    cast_expression            go to state 108
    multiplicative_expression  go to state 109
    additive_expression        go to state 110
    shift_expression           go to state 111
    relational_expression      go to state 112
    equality_expression        go to state 113
    and_expression             go to state 114
    xor_expression             go to state 115
    or_expression              go to state 116
    logical_and_expression     go to state 117
    logical_or_expression      go to state 118
    conditional_expression     go to state 296


State 288

  170 direct_abstract_declarator: '(' parameter_type_list ')' •

    $default  reduce using rule 170 (direct_abstract_declarator)


State 289

  163 direct_abstract_declarator: '(' abstract_declarator ')' •

    $default  reduce using rule 163 (direct_abstract_declarator)


State 290

  165 direct_abstract_declarator: '[' assignment_expression ']' •

    $default  reduce using rule 165 (direct_abstract_declarator)


State 291

  169 direct_abstract_declarator: direct_abstract_declarator '(' ')' •

    $default  reduce using rule 169 (direct_abstract_declarator)


State 292

  171 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list • ')'

    ')'  shift, and go to state 297


State 293

  166 direct_abstract_declarator: direct_abstract_declarator '[' ']' •

    $default  reduce using rule 166 (direct_abstract_declarator)


State 294

  167 direct_abstract_declarator: direct_abstract_declarator '[' assignment_expression • ']'

    ']'  shift, and go to state 298


State 295

   39 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 39 (argument_expression_list)


State 296

   83 conditional_expression: logical_or_expression '?' expression ':' conditional_expression •

    $default  reduce using rule 83 (conditional_expression)


State 297

  171 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list ')' •

    $default  reduce using rule 171 (direct_abstract_declarator)


State 298

  167 direct_abstract_declarator: direct_abstract_declarator '[' assignment_expression ']' •

    $default  reduce using rule 167 (direct_abstract_declarator)
