Terminals unused in grammar

    BREAK
    CASE
    CONTINUE
    DEFAULT
    DO
    ELSE
    FOR
    GOTO
    IF
    RETURN
    SWITCH
    TYPEDEF
    WHILE
    _IMAGINARY


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration

    5 function_definition: declaration_specifiers declarator compound_statement
    6                    | declaration_specifiers declarator declaration_list compound_statement

    7 declaration_list: declaration
    8                 | declaration_list declaration

    9 compound_statement: '{' block_item_list '}'
   10                   | '{' '}'

   11 block_item_list: block_item
   12                | block_item_list block_item

   13 block_item: declaration
   14           | statement

   15 statement: compound_statement
   16          | expression_statement

   17 expression_statement: expression ';'
   18                     | ';'

   19 identifier: IDENT

   20 string_literal: STRINGLIT

   21 constant: CHARLIT
   22         | NUMBERLIT

   23 primary_expression: identifier
   24                   | constant
   25                   | string_literal
   26                   | '(' expression ')'

   27 postfix_expression: primary_expression
   28                   | postfix_expression '[' expression ']'
   29                   | postfix_expression '(' ')'
   30                   | postfix_expression '(' argument_expression_list ')'
   31                   | postfix_expression '.' identifier
   32                   | postfix_expression "->" identifier
   33                   | postfix_expression "++"
   34                   | postfix_expression "--"

   35 argument_expression_list: assignment_expression
   36                         | argument_expression_list ',' assignment_expression

   37 unary_expression: postfix_expression
   38                 | "++" unary_expression
   39                 | "--" unary_expression
   40                 | '&' cast_expression
   41                 | '*' cast_expression
   42                 | '+' cast_expression
   43                 | '-' cast_expression
   44                 | '~' cast_expression
   45                 | '!' cast_expression
   46                 | SIZEOF unary_expression
   47                 | SIZEOF '(' type_name ')'
   48                 | ALIGNOF unary_expression

   49 cast_expression: unary_expression
   50                | '(' type_name ')' cast_expression

   51 multiplicative_expression: cast_expression
   52                          | multiplicative_expression '*' cast_expression
   53                          | multiplicative_expression '/' cast_expression
   54                          | multiplicative_expression '%' cast_expression

   55 additive_expression: multiplicative_expression
   56                    | additive_expression '+' multiplicative_expression
   57                    | additive_expression '-' multiplicative_expression

   58 shift_expression: additive_expression
   59                 | shift_expression "<<" additive_expression
   60                 | shift_expression ">>" additive_expression

   61 relational_expression: shift_expression
   62                      | relational_expression '<' shift_expression
   63                      | relational_expression "<=" shift_expression
   64                      | relational_expression '>' shift_expression
   65                      | relational_expression ">=" shift_expression

   66 equality_expression: relational_expression
   67                    | equality_expression "==" relational_expression
   68                    | equality_expression "!=" relational_expression

   69 and_expression: equality_expression
   70               | and_expression '&' equality_expression

   71 xor_expression: and_expression
   72               | xor_expression '^' and_expression

   73 or_expression: xor_expression
   74              | or_expression '|' xor_expression

   75 logical_and_expression: or_expression
   76                       | logical_and_expression "&&" or_expression

   77 logical_or_expression: logical_and_expression
   78                      | logical_or_expression "||" logical_and_expression

   79 conditional_expression: logical_or_expression
   80                       | logical_or_expression '?' expression ':' conditional_expression

   81 assignment_expression: conditional_expression
   82                      | unary_expression assignment_operator assignment_expression

   83 assignment_operator: '='
   84                    | "*="
   85                    | "/="
   86                    | "%="
   87                    | "+="
   88                    | "-="
   89                    | "<<="
   90                    | ">>="
   91                    | "&="
   92                    | "^="
   93                    | "|="

   94 expression: assignment_expression
   95           | expression ',' assignment_expression

   96 constant_expression: conditional_expression

   97 declaration: declaration_specifiers init_declarator_list ';'
   98            | declaration_specifiers ';'

   99 declaration_specifiers: type_specifier
  100                       | type_qualifier
  101                       | storage_class_specifier
  102                       | function_specifier
  103                       | declaration_specifiers type_specifier
  104                       | declaration_specifiers type_qualifier
  105                       | declaration_specifiers storage_class_specifier
  106                       | declaration_specifiers function_specifier

  107 init_declarator_list: init_declarator
  108                     | init_declarator_list ',' init_declarator

  109 init_declarator: declarator
  110                | declarator '=' initializer

  111 storage_class_specifier: EXTERN
  112                        | STATIC
  113                        | AUTO
  114                        | REGISTER

  115 type_specifier: VOID
  116               | CHAR
  117               | SHORT
  118               | INT
  119               | LONG
  120               | FLOAT
  121               | DOUBLE
  122               | SIGNED
  123               | UNSIGNED
  124               | _BOOL
  125               | _COMPLEX
  126               | struct_or_union_specifier
  127               | enum_specifier

  128 type_qualifier: CONST
  129               | RESTRICT
  130               | VOLATILE

  131 function_specifier: INLINE

  132 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}'

  133 @1: Îµ

  134 struct_or_union_specifier: struct_or_union IDENT '{' @1 struct_declaration_list '}'
  135                          | struct_or_union IDENT

  136 struct_or_union: STRUCT
  137                | UNION

  138 struct_declaration_list: struct_declaration
  139                        | struct_declaration_list struct_declaration

  140 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  141 specifier_qualifier_list: type_specifier
  142                         | type_qualifier
  143                         | specifier_qualifier_list type_specifier
  144                         | specifier_qualifier_list type_qualifier

  145 struct_declarator_list: struct_declarator
  146                       | struct_declarator_list ',' struct_declarator

  147 struct_declarator: declarator
  148                  | ':' constant_expression
  149                  | declarator ':' constant_expression

  150 enum_specifier: ENUM identifier
  151               | ENUM '{' enumerator_list '}'
  152               | ENUM identifier '{' enumerator_list '}'
  153               | ENUM '{' enumerator_list ',' '}'
  154               | ENUM identifier '{' enumerator_list ',' '}'

  155 enumerator_list: enumerator
  156                | enumerator_list ',' enumerator

  157 enumerator: identifier
  158           | identifier '=' constant_expression

  159 declarator: direct_declarator
  160           | pointer direct_declarator

  161 direct_declarator: identifier
  162                  | '(' declarator ')'
  163                  | direct_declarator '[' ']'
  164                  | direct_declarator '[' assignment_expression ']'
  165                  | direct_declarator '(' parameter_type_list ')'
  166                  | direct_declarator '(' identifier_list ')'
  167                  | direct_declarator '(' ')'

  168 pointer: '*'
  169        | '*' type_qualifier_list
  170        | '*' pointer
  171        | '*' type_qualifier_list pointer

  172 type_qualifier_list: type_qualifier
  173                    | type_qualifier_list type_qualifier

  174 parameter_type_list: parameter_list
  175                    | parameter_list ',' "..."

  176 parameter_list: parameter_declaration
  177               | parameter_list ',' parameter_declaration

  178 parameter_declaration: declaration_specifiers declarator
  179                      | declaration_specifiers
  180                      | declaration_specifiers abstract_declarator

  181 identifier_list: identifier
  182                | identifier_list ',' identifier

  183 type_name: specifier_qualifier_list
  184          | specifier_qualifier_list abstract_declarator

  185 abstract_declarator: pointer
  186                    | direct_abstract_declarator
  187                    | pointer direct_abstract_declarator

  188 direct_abstract_declarator: '(' abstract_declarator ')'
  189                           | '[' ']'
  190                           | '[' assignment_expression ']'
  191                           | direct_abstract_declarator '[' ']'
  192                           | direct_abstract_declarator '[' assignment_expression ']'
  193                           | '(' ')'
  194                           | direct_abstract_declarator '(' ')'
  195                           | '(' parameter_type_list ')'
  196                           | direct_abstract_declarator '(' parameter_type_list ')'

  197 initializer: assignment_expression


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 45
    '%' (37) 54
    '&' (38) 40 70
    '(' (40) 26 29 30 47 50 162 165 166 167 188 193 194 195 196
    ')' (41) 26 29 30 47 50 162 165 166 167 188 193 194 195 196
    '*' (42) 41 52 168 169 170 171
    '+' (43) 42 56
    ',' (44) 36 95 108 146 153 154 156 175 177 182
    '-' (45) 43 57
    '.' (46) 31
    '/' (47) 53
    ':' (58) 80 148 149
    ';' (59) 17 18 97 98 140
    '<' (60) 62
    '=' (61) 83 110 158
    '>' (62) 64
    '?' (63) 80
    '[' (91) 28 163 164 189 190 191 192
    ']' (93) 28 163 164 189 190 191 192
    '^' (94) 72
    '{' (123) 9 10 132 134 151 152 153 154
    '|' (124) 74
    '}' (125) 9 10 132 134 151 152 153 154
    '~' (126) 44
    error (256)
    IDENT <string> (258) 19 134 135
    CHARLIT <string> (259) 21
    STRINGLIT <string> (260) 20
    NUMBERLIT <number> (261) 22
    "->" (262) 32
    "++" (263) 33 38
    "--" (264) 34 39
    "<<" (265) 59
    ">>" (266) 60
    "<=" (267) 63
    ">=" (268) 65
    "==" (269) 67
    "!=" (270) 68
    "&&" (271) 76
    "||" (272) 78
    "..." (273) 175
    "*=" (274) 84
    "/=" (275) 85
    "%=" (276) 86
    "+=" (277) 87
    "-=" (278) 88
    "<<=" (279) 89
    ">>=" (280) 90
    "&=" (281) 91
    "|=" (282) 93
    "^=" (283) 92
    AUTO (284) 113
    ALIGNOF (285) 48
    BREAK (286)
    CASE (287)
    CHAR (288) 116
    CONST (289) 128
    CONTINUE (290)
    DEFAULT (291)
    DO (292)
    DOUBLE (293) 121
    ELSE (294)
    ENUM (295) 150 151 152 153 154
    EXTERN (296) 111
    FLOAT (297) 120
    FOR (298)
    GOTO (299)
    IF (300)
    INLINE (301) 131
    INT (302) 118
    LONG (303) 119
    REGISTER (304) 114
    RESTRICT (305) 129
    RETURN (306)
    SHORT (307) 117
    SIGNED (308) 122
    SIZEOF (309) 46 47
    STATIC (310) 112
    STRUCT (311) 136
    SWITCH (312)
    TYPEDEF (313)
    UNION (314) 137
    UNSIGNED (315) 123
    VOID (316) 115
    VOLATILE (317) 130
    WHILE (318)
    _BOOL (319) 124
    _COMPLEX (320) 125
    _IMAGINARY (321)


Nonterminals, with rules where they appear

    $accept (91)
        on left: 0
    translation_unit (92)
        on left: 1 2
        on right: 0 2
    external_declaration (93)
        on left: 3 4
        on right: 1 2
    function_definition (94)
        on left: 5 6
        on right: 3
    declaration_list (95)
        on left: 7 8
        on right: 6 8
    compound_statement (96)
        on left: 9 10
        on right: 5 6 15
    block_item_list (97)
        on left: 11 12
        on right: 9 12
    block_item (98)
        on left: 13 14
        on right: 11 12
    statement (99)
        on left: 15 16
        on right: 14
    expression_statement (100)
        on left: 17 18
        on right: 16
    identifier <node> (101)
        on left: 19
        on right: 23 31 32 150 152 154 157 158 161 181 182
    string_literal <node> (102)
        on left: 20
        on right: 25
    constant <node> (103)
        on left: 21 22
        on right: 24
    primary_expression <node> (104)
        on left: 23 24 25 26
        on right: 27
    postfix_expression <node> (105)
        on left: 27 28 29 30 31 32 33 34
        on right: 28 29 30 31 32 33 34 37
    argument_expression_list <node_list> (106)
        on left: 35 36
        on right: 30 36
    unary_expression <node> (107)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48
        on right: 38 39 46 48 49 82
    cast_expression <node> (108)
        on left: 49 50
        on right: 40 41 42 43 44 45 50 51 52 53 54
    multiplicative_expression <node> (109)
        on left: 51 52 53 54
        on right: 52 53 54 55 56 57
    additive_expression <node> (110)
        on left: 55 56 57
        on right: 56 57 58 59 60
    shift_expression <node> (111)
        on left: 58 59 60
        on right: 59 60 61 62 63 64 65
    relational_expression <node> (112)
        on left: 61 62 63 64 65
        on right: 62 63 64 65 66 67 68
    equality_expression <node> (113)
        on left: 66 67 68
        on right: 67 68 69 70
    and_expression <node> (114)
        on left: 69 70
        on right: 70 71 72
    xor_expression <node> (115)
        on left: 71 72
        on right: 72 73 74
    or_expression <node> (116)
        on left: 73 74
        on right: 74 75 76
    logical_and_expression <node> (117)
        on left: 75 76
        on right: 76 77 78
    logical_or_expression <node> (118)
        on left: 77 78
        on right: 78 79 80
    conditional_expression <node> (119)
        on left: 79 80
        on right: 80 81 96
    assignment_expression <node> (120)
        on left: 81 82
        on right: 35 36 82 94 95 164 190 192 197
    assignment_operator <integer> (121)
        on left: 83 84 85 86 87 88 89 90 91 92 93
        on right: 82
    expression <node> (122)
        on left: 94 95
        on right: 17 26 28 80 95
    constant_expression <node> (123)
        on left: 96
        on right: 148 149 158
    declaration (124)
        on left: 97 98
        on right: 4 7 8 13
    declaration_specifiers <declaration_specifiers> (125)
        on left: 99 100 101 102 103 104 105 106
        on right: 5 6 97 98 103 104 105 106 178 179 180
    init_declarator_list <declaration_package> (126)
        on left: 107 108
        on right: 97 108
    init_declarator <declarator_helper> (127)
        on left: 109 110
        on right: 107 108
    storage_class_specifier <storage_class_specifier> (128)
        on left: 111 112 113 114
        on right: 101 105
    type_specifier <type_specifier> (129)
        on left: 115 116 117 118 119 120 121 122 123 124 125 126 127
        on right: 99 103 141 143
    type_qualifier <type_qualifier> (130)
        on left: 128 129 130
        on right: 100 104 142 144 172 173
    function_specifier <function_specifier> (131)
        on left: 131
        on right: 102 106
    struct_or_union_specifier <node> (132)
        on left: 132 134 135
        on right: 126
    @1 (133)
        on left: 133
        on right: 134
    struct_or_union <integer> (134)
        on left: 136 137
        on right: 132 134 135
    struct_declaration_list <symbol_table> (135)
        on left: 138 139
        on right: 132 134 139
    struct_declaration <declaration_package> (136)
        on left: 140
        on right: 138 139
    specifier_qualifier_list <declaration_specifiers> (137)
        on left: 141 142 143 144
        on right: 140 143 144 183 184
    struct_declarator_list <declaration_package> (138)
        on left: 145 146
        on right: 140 146
    struct_declarator <declarator_helper> (139)
        on left: 147 148 149
        on right: 145 146
    enum_specifier <node> (140)
        on left: 150 151 152 153 154
        on right: 127
    enumerator_list (141)
        on left: 155 156
        on right: 151 152 153 154 156
    enumerator (142)
        on left: 157 158
        on right: 155 156
    declarator <declarator_helper> (143)
        on left: 159 160
        on right: 5 6 109 110 147 149 162 178
    direct_declarator <declarator_helper> (144)
        on left: 161 162 163 164 165 166 167
        on right: 159 160 163 164 165 166 167
    pointer <declarator_helper> (145)
        on left: 168 169 170 171
        on right: 160 170 171 185 187
    type_qualifier_list <type_qualifier> (146)
        on left: 172 173
        on right: 169 171 173
    parameter_type_list (147)
        on left: 174 175
        on right: 165 195 196
    parameter_list (148)
        on left: 176 177
        on right: 174 175 177
    parameter_declaration (149)
        on left: 178 179 180
        on right: 176 177
    identifier_list <node_list> (150)
        on left: 181 182
        on right: 166 182
    type_name (151)
        on left: 183 184
        on right: 47 50
    abstract_declarator <declarator_helper> (152)
        on left: 185 186 187
        on right: 180 184 188
    direct_abstract_declarator <declarator_helper> (153)
        on left: 188 189 190 191 192 193 194 195 196
        on right: 186 187 191 192 194 196
    initializer <node> (154)
        on left: 197
        on right: 110


State 0

    0 $accept: â¢ translation_unit $end

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    translation_unit           go to state 23
    external_declaration       go to state 24
    function_definition        go to state 25
    declaration                go to state 26
    declaration_specifiers     go to state 27
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 1

  113 storage_class_specifier: AUTO â¢

    $default  reduce using rule 113 (storage_class_specifier)


State 2

  116 type_specifier: CHAR â¢

    $default  reduce using rule 116 (type_specifier)


State 3

  128 type_qualifier: CONST â¢

    $default  reduce using rule 128 (type_qualifier)


State 4

  121 type_specifier: DOUBLE â¢

    $default  reduce using rule 121 (type_specifier)


State 5

  150 enum_specifier: ENUM â¢ identifier
  151               | ENUM â¢ '{' enumerator_list '}'
  152               | ENUM â¢ identifier '{' enumerator_list '}'
  153               | ENUM â¢ '{' enumerator_list ',' '}'
  154               | ENUM â¢ identifier '{' enumerator_list ',' '}'

    IDENT  shift, and go to state 35
    '{'    shift, and go to state 36

    identifier  go to state 37


State 6

  111 storage_class_specifier: EXTERN â¢

    $default  reduce using rule 111 (storage_class_specifier)


State 7

  120 type_specifier: FLOAT â¢

    $default  reduce using rule 120 (type_specifier)


State 8

  131 function_specifier: INLINE â¢

    $default  reduce using rule 131 (function_specifier)


State 9

  118 type_specifier: INT â¢

    $default  reduce using rule 118 (type_specifier)


State 10

  119 type_specifier: LONG â¢

    $default  reduce using rule 119 (type_specifier)


State 11

  114 storage_class_specifier: REGISTER â¢

    $default  reduce using rule 114 (storage_class_specifier)


State 12

  129 type_qualifier: RESTRICT â¢

    $default  reduce using rule 129 (type_qualifier)


State 13

  117 type_specifier: SHORT â¢

    $default  reduce using rule 117 (type_specifier)


State 14

  122 type_specifier: SIGNED â¢

    $default  reduce using rule 122 (type_specifier)


State 15

  112 storage_class_specifier: STATIC â¢

    $default  reduce using rule 112 (storage_class_specifier)


State 16

  136 struct_or_union: STRUCT â¢

    $default  reduce using rule 136 (struct_or_union)


State 17

  137 struct_or_union: UNION â¢

    $default  reduce using rule 137 (struct_or_union)


State 18

  123 type_specifier: UNSIGNED â¢

    $default  reduce using rule 123 (type_specifier)


State 19

  115 type_specifier: VOID â¢

    $default  reduce using rule 115 (type_specifier)


State 20

  130 type_qualifier: VOLATILE â¢

    $default  reduce using rule 130 (type_qualifier)


State 21

  124 type_specifier: _BOOL â¢

    $default  reduce using rule 124 (type_specifier)


State 22

  125 type_specifier: _COMPLEX â¢

    $default  reduce using rule 125 (type_specifier)


State 23

    0 $accept: translation_unit â¢ $end
    2 translation_unit: translation_unit â¢ external_declaration

    $end      shift, and go to state 38
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    external_declaration       go to state 39
    function_definition        go to state 25
    declaration                go to state 26
    declaration_specifiers     go to state 27
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 24

    1 translation_unit: external_declaration â¢

    $default  reduce using rule 1 (translation_unit)


State 25

    3 external_declaration: function_definition â¢

    $default  reduce using rule 3 (external_declaration)


State 26

    4 external_declaration: declaration â¢

    $default  reduce using rule 4 (external_declaration)


State 27

    5 function_definition: declaration_specifiers â¢ declarator compound_statement
    6                    | declaration_specifiers â¢ declarator declaration_list compound_statement
   97 declaration: declaration_specifiers â¢ init_declarator_list ';'
   98            | declaration_specifiers â¢ ';'
  103 declaration_specifiers: declaration_specifiers â¢ type_specifier
  104                       | declaration_specifiers â¢ type_qualifier
  105                       | declaration_specifiers â¢ storage_class_specifier
  106                       | declaration_specifiers â¢ function_specifier

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ';'       shift, and go to state 40
    '('       shift, and go to state 41
    '*'       shift, and go to state 42

    identifier                 go to state 43
    init_declarator_list       go to state 44
    init_declarator            go to state 45
    storage_class_specifier    go to state 46
    type_specifier             go to state 47
    type_qualifier             go to state 48
    function_specifier         go to state 49
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    declarator                 go to state 50
    direct_declarator          go to state 51
    pointer                    go to state 52


State 28

  101 declaration_specifiers: storage_class_specifier â¢

    $default  reduce using rule 101 (declaration_specifiers)


State 29

   99 declaration_specifiers: type_specifier â¢

    $default  reduce using rule 99 (declaration_specifiers)


State 30

  100 declaration_specifiers: type_qualifier â¢

    $default  reduce using rule 100 (declaration_specifiers)


State 31

  102 declaration_specifiers: function_specifier â¢

    $default  reduce using rule 102 (declaration_specifiers)


State 32

  126 type_specifier: struct_or_union_specifier â¢

    $default  reduce using rule 126 (type_specifier)


State 33

  132 struct_or_union_specifier: struct_or_union â¢ '{' struct_declaration_list '}'
  134                          | struct_or_union â¢ IDENT '{' @1 struct_declaration_list '}'
  135                          | struct_or_union â¢ IDENT

    IDENT  shift, and go to state 53
    '{'    shift, and go to state 54


State 34

  127 type_specifier: enum_specifier â¢

    $default  reduce using rule 127 (type_specifier)


State 35

   19 identifier: IDENT â¢

    $default  reduce using rule 19 (identifier)


State 36

  151 enum_specifier: ENUM '{' â¢ enumerator_list '}'
  153               | ENUM '{' â¢ enumerator_list ',' '}'

    IDENT  shift, and go to state 35

    identifier       go to state 55
    enumerator_list  go to state 56
    enumerator       go to state 57


State 37

  150 enum_specifier: ENUM identifier â¢
  152               | ENUM identifier â¢ '{' enumerator_list '}'
  154               | ENUM identifier â¢ '{' enumerator_list ',' '}'

    '{'  shift, and go to state 58

    $default  reduce using rule 150 (enum_specifier)


State 38

    0 $accept: translation_unit $end â¢

    $default  accept


State 39

    2 translation_unit: translation_unit external_declaration â¢

    $default  reduce using rule 2 (translation_unit)


State 40

   98 declaration: declaration_specifiers ';' â¢

    $default  reduce using rule 98 (declaration)


State 41

  162 direct_declarator: '(' â¢ declarator ')'

    IDENT  shift, and go to state 35
    '('    shift, and go to state 41
    '*'    shift, and go to state 42

    identifier         go to state 43
    declarator         go to state 59
    direct_declarator  go to state 51
    pointer            go to state 52


State 42

  168 pointer: '*' â¢
  169        | '*' â¢ type_qualifier_list
  170        | '*' â¢ pointer
  171        | '*' â¢ type_qualifier_list pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 20
    '*'       shift, and go to state 42

    $default  reduce using rule 168 (pointer)

    type_qualifier       go to state 60
    pointer              go to state 61
    type_qualifier_list  go to state 62


State 43

  161 direct_declarator: identifier â¢

    $default  reduce using rule 161 (direct_declarator)


State 44

   97 declaration: declaration_specifiers init_declarator_list â¢ ';'
  108 init_declarator_list: init_declarator_list â¢ ',' init_declarator

    ';'  shift, and go to state 63
    ','  shift, and go to state 64


State 45

  107 init_declarator_list: init_declarator â¢

    $default  reduce using rule 107 (init_declarator_list)


State 46

  105 declaration_specifiers: declaration_specifiers storage_class_specifier â¢

    $default  reduce using rule 105 (declaration_specifiers)


State 47

  103 declaration_specifiers: declaration_specifiers type_specifier â¢

    $default  reduce using rule 103 (declaration_specifiers)


State 48

  104 declaration_specifiers: declaration_specifiers type_qualifier â¢

    $default  reduce using rule 104 (declaration_specifiers)


State 49

  106 declaration_specifiers: declaration_specifiers function_specifier â¢

    $default  reduce using rule 106 (declaration_specifiers)


State 50

    5 function_definition: declaration_specifiers declarator â¢ compound_statement
    6                    | declaration_specifiers declarator â¢ declaration_list compound_statement
  109 init_declarator: declarator â¢
  110                | declarator â¢ '=' initializer

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '{'       shift, and go to state 65
    '='       shift, and go to state 66

    $default  reduce using rule 109 (init_declarator)

    declaration_list           go to state 67
    compound_statement         go to state 68
    declaration                go to state 69
    declaration_specifiers     go to state 70
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 51

  159 declarator: direct_declarator â¢
  163 direct_declarator: direct_declarator â¢ '[' ']'
  164                  | direct_declarator â¢ '[' assignment_expression ']'
  165                  | direct_declarator â¢ '(' parameter_type_list ')'
  166                  | direct_declarator â¢ '(' identifier_list ')'
  167                  | direct_declarator â¢ '(' ')'

    '('  shift, and go to state 71
    '['  shift, and go to state 72

    $default  reduce using rule 159 (declarator)


State 52

  160 declarator: pointer â¢ direct_declarator

    IDENT  shift, and go to state 35
    '('    shift, and go to state 41

    identifier         go to state 43
    direct_declarator  go to state 73


State 53

  134 struct_or_union_specifier: struct_or_union IDENT â¢ '{' @1 struct_declaration_list '}'
  135                          | struct_or_union IDENT â¢

    '{'  shift, and go to state 74

    $default  reduce using rule 135 (struct_or_union_specifier)


State 54

  132 struct_or_union_specifier: struct_or_union '{' â¢ struct_declaration_list '}'

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    type_specifier             go to state 75
    type_qualifier             go to state 76
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration_list    go to state 77
    struct_declaration         go to state 78
    specifier_qualifier_list   go to state 79
    enum_specifier             go to state 34


State 55

  157 enumerator: identifier â¢
  158           | identifier â¢ '=' constant_expression

    '='  shift, and go to state 80

    $default  reduce using rule 157 (enumerator)


State 56

  151 enum_specifier: ENUM '{' enumerator_list â¢ '}'
  153               | ENUM '{' enumerator_list â¢ ',' '}'
  156 enumerator_list: enumerator_list â¢ ',' enumerator

    '}'  shift, and go to state 81
    ','  shift, and go to state 82


State 57

  155 enumerator_list: enumerator â¢

    $default  reduce using rule 155 (enumerator_list)


State 58

  152 enum_specifier: ENUM identifier '{' â¢ enumerator_list '}'
  154               | ENUM identifier '{' â¢ enumerator_list ',' '}'

    IDENT  shift, and go to state 35

    identifier       go to state 55
    enumerator_list  go to state 83
    enumerator       go to state 57


State 59

  162 direct_declarator: '(' declarator â¢ ')'

    ')'  shift, and go to state 84


State 60

  172 type_qualifier_list: type_qualifier â¢

    $default  reduce using rule 172 (type_qualifier_list)


State 61

  170 pointer: '*' pointer â¢

    $default  reduce using rule 170 (pointer)


State 62

  169 pointer: '*' type_qualifier_list â¢
  171        | '*' type_qualifier_list â¢ pointer
  173 type_qualifier_list: type_qualifier_list â¢ type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 20
    '*'       shift, and go to state 42

    $default  reduce using rule 169 (pointer)

    type_qualifier  go to state 85
    pointer         go to state 86


State 63

   97 declaration: declaration_specifiers init_declarator_list ';' â¢

    $default  reduce using rule 97 (declaration)


State 64

  108 init_declarator_list: init_declarator_list ',' â¢ init_declarator

    IDENT  shift, and go to state 35
    '('    shift, and go to state 41
    '*'    shift, and go to state 42

    identifier         go to state 43
    init_declarator    go to state 87
    declarator         go to state 88
    direct_declarator  go to state 51
    pointer            go to state 52


State 65

    9 compound_statement: '{' â¢ block_item_list '}'
   10                   | '{' â¢ '}'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    AUTO       shift, and go to state 1
    ALIGNOF    shift, and go to state 94
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    SIZEOF     shift, and go to state 95
    STATIC     shift, and go to state 15
    STRUCT     shift, and go to state 16
    UNION      shift, and go to state 17
    UNSIGNED   shift, and go to state 18
    VOID       shift, and go to state 19
    VOLATILE   shift, and go to state 20
    _BOOL      shift, and go to state 21
    _COMPLEX   shift, and go to state 22
    '{'        shift, and go to state 65
    '}'        shift, and go to state 96
    ';'        shift, and go to state 97
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    compound_statement         go to state 105
    block_item_list            go to state 106
    block_item                 go to state 107
    statement                  go to state 108
    expression_statement       go to state 109
    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 129
    declaration                go to state 130
    declaration_specifiers     go to state 70
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 66

  110 init_declarator: declarator '=' â¢ initializer

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 131
    initializer                go to state 132


State 67

    6 function_definition: declaration_specifiers declarator declaration_list â¢ compound_statement
    8 declaration_list: declaration_list â¢ declaration

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '{'       shift, and go to state 65

    compound_statement         go to state 133
    declaration                go to state 134
    declaration_specifiers     go to state 70
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 68

    5 function_definition: declaration_specifiers declarator compound_statement â¢

    $default  reduce using rule 5 (function_definition)


State 69

    7 declaration_list: declaration â¢

    $default  reduce using rule 7 (declaration_list)


State 70

   97 declaration: declaration_specifiers â¢ init_declarator_list ';'
   98            | declaration_specifiers â¢ ';'
  103 declaration_specifiers: declaration_specifiers â¢ type_specifier
  104                       | declaration_specifiers â¢ type_qualifier
  105                       | declaration_specifiers â¢ storage_class_specifier
  106                       | declaration_specifiers â¢ function_specifier

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ';'       shift, and go to state 40
    '('       shift, and go to state 41
    '*'       shift, and go to state 42

    identifier                 go to state 43
    init_declarator_list       go to state 44
    init_declarator            go to state 45
    storage_class_specifier    go to state 46
    type_specifier             go to state 47
    type_qualifier             go to state 48
    function_specifier         go to state 49
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    declarator                 go to state 88
    direct_declarator          go to state 51
    pointer                    go to state 52


State 71

  165 direct_declarator: direct_declarator '(' â¢ parameter_type_list ')'
  166                  | direct_declarator '(' â¢ identifier_list ')'
  167                  | direct_declarator '(' â¢ ')'

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ')'       shift, and go to state 135

    identifier                 go to state 136
    declaration_specifiers     go to state 137
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    parameter_type_list        go to state 138
    parameter_list             go to state 139
    parameter_declaration      go to state 140
    identifier_list            go to state 141


State 72

  163 direct_declarator: direct_declarator '[' â¢ ']'
  164                  | direct_declarator '[' â¢ assignment_expression ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    ']'        shift, and go to state 142
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 143


State 73

  160 declarator: pointer direct_declarator â¢
  163 direct_declarator: direct_declarator â¢ '[' ']'
  164                  | direct_declarator â¢ '[' assignment_expression ']'
  165                  | direct_declarator â¢ '(' parameter_type_list ')'
  166                  | direct_declarator â¢ '(' identifier_list ')'
  167                  | direct_declarator â¢ '(' ')'

    '('  shift, and go to state 71
    '['  shift, and go to state 72

    $default  reduce using rule 160 (declarator)


State 74

  134 struct_or_union_specifier: struct_or_union IDENT '{' â¢ @1 struct_declaration_list '}'

    $default  reduce using rule 133 (@1)

    @1  go to state 144


State 75

  141 specifier_qualifier_list: type_specifier â¢

    $default  reduce using rule 141 (specifier_qualifier_list)


State 76

  142 specifier_qualifier_list: type_qualifier â¢

    $default  reduce using rule 142 (specifier_qualifier_list)


State 77

  132 struct_or_union_specifier: struct_or_union '{' struct_declaration_list â¢ '}'
  139 struct_declaration_list: struct_declaration_list â¢ struct_declaration

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '}'       shift, and go to state 145

    type_specifier             go to state 75
    type_qualifier             go to state 76
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration         go to state 146
    specifier_qualifier_list   go to state 79
    enum_specifier             go to state 34


State 78

  138 struct_declaration_list: struct_declaration â¢

    $default  reduce using rule 138 (struct_declaration_list)


State 79

  140 struct_declaration: specifier_qualifier_list â¢ struct_declarator_list ';'
  143 specifier_qualifier_list: specifier_qualifier_list â¢ type_specifier
  144                         | specifier_qualifier_list â¢ type_qualifier

    IDENT     shift, and go to state 35
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 41
    '*'       shift, and go to state 42
    ':'       shift, and go to state 147

    identifier                 go to state 43
    type_specifier             go to state 148
    type_qualifier             go to state 149
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declarator_list     go to state 150
    struct_declarator          go to state 151
    enum_specifier             go to state 34
    declarator                 go to state 152
    direct_declarator          go to state 51
    pointer                    go to state 52


State 80

  158 enumerator: identifier '=' â¢ constant_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 154
    constant_expression        go to state 155


State 81

  151 enum_specifier: ENUM '{' enumerator_list '}' â¢

    $default  reduce using rule 151 (enum_specifier)


State 82

  153 enum_specifier: ENUM '{' enumerator_list ',' â¢ '}'
  156 enumerator_list: enumerator_list ',' â¢ enumerator

    IDENT  shift, and go to state 35
    '}'    shift, and go to state 156

    identifier  go to state 55
    enumerator  go to state 157


State 83

  152 enum_specifier: ENUM identifier '{' enumerator_list â¢ '}'
  154               | ENUM identifier '{' enumerator_list â¢ ',' '}'
  156 enumerator_list: enumerator_list â¢ ',' enumerator

    '}'  shift, and go to state 158
    ','  shift, and go to state 159


State 84

  162 direct_declarator: '(' declarator ')' â¢

    $default  reduce using rule 162 (direct_declarator)


State 85

  173 type_qualifier_list: type_qualifier_list type_qualifier â¢

    $default  reduce using rule 173 (type_qualifier_list)


State 86

  171 pointer: '*' type_qualifier_list pointer â¢

    $default  reduce using rule 171 (pointer)


State 87

  108 init_declarator_list: init_declarator_list ',' init_declarator â¢

    $default  reduce using rule 108 (init_declarator_list)


State 88

  109 init_declarator: declarator â¢
  110                | declarator â¢ '=' initializer

    '='  shift, and go to state 66

    $default  reduce using rule 109 (init_declarator)


State 89

   21 constant: CHARLIT â¢

    $default  reduce using rule 21 (constant)


State 90

   20 string_literal: STRINGLIT â¢

    $default  reduce using rule 20 (string_literal)


State 91

   22 constant: NUMBERLIT â¢

    $default  reduce using rule 22 (constant)


State 92

   38 unary_expression: "++" â¢ unary_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 160
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 161


State 93

   39 unary_expression: "--" â¢ unary_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 160
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 162


State 94

   48 unary_expression: ALIGNOF â¢ unary_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 160
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 163


State 95

   46 unary_expression: SIZEOF â¢ unary_expression
   47                 | SIZEOF â¢ '(' type_name ')'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 164
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 165


State 96

   10 compound_statement: '{' '}' â¢

    $default  reduce using rule 10 (compound_statement)


State 97

   18 expression_statement: ';' â¢

    $default  reduce using rule 18 (expression_statement)


State 98

   26 primary_expression: '(' â¢ expression ')'
   50 cast_expression: '(' â¢ type_name ')' cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    SIZEOF     shift, and go to state 95
    STRUCT     shift, and go to state 16
    UNION      shift, and go to state 17
    UNSIGNED   shift, and go to state 18
    VOID       shift, and go to state 19
    VOLATILE   shift, and go to state 20
    _BOOL      shift, and go to state 21
    _COMPLEX   shift, and go to state 22
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 166
    type_specifier             go to state 75
    type_qualifier             go to state 76
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    specifier_qualifier_list   go to state 167
    enum_specifier             go to state 34
    type_name                  go to state 168


State 99

   40 unary_expression: '&' â¢ cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 153
    cast_expression     go to state 169


State 100

   41 unary_expression: '*' â¢ cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 153
    cast_expression     go to state 170


State 101

   42 unary_expression: '+' â¢ cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 153
    cast_expression     go to state 171


State 102

   43 unary_expression: '-' â¢ cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 153
    cast_expression     go to state 172


State 103

   44 unary_expression: '~' â¢ cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 153
    cast_expression     go to state 173


State 104

   45 unary_expression: '!' â¢ cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 153
    cast_expression     go to state 174


State 105

   15 statement: compound_statement â¢

    $default  reduce using rule 15 (statement)


State 106

    9 compound_statement: '{' block_item_list â¢ '}'
   12 block_item_list: block_item_list â¢ block_item

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    AUTO       shift, and go to state 1
    ALIGNOF    shift, and go to state 94
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    SIZEOF     shift, and go to state 95
    STATIC     shift, and go to state 15
    STRUCT     shift, and go to state 16
    UNION      shift, and go to state 17
    UNSIGNED   shift, and go to state 18
    VOID       shift, and go to state 19
    VOLATILE   shift, and go to state 20
    _BOOL      shift, and go to state 21
    _COMPLEX   shift, and go to state 22
    '{'        shift, and go to state 65
    '}'        shift, and go to state 175
    ';'        shift, and go to state 97
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    compound_statement         go to state 105
    block_item                 go to state 176
    statement                  go to state 108
    expression_statement       go to state 109
    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 129
    declaration                go to state 130
    declaration_specifiers     go to state 70
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34


State 107

   11 block_item_list: block_item â¢

    $default  reduce using rule 11 (block_item_list)


State 108

   14 block_item: statement â¢

    $default  reduce using rule 14 (block_item)


State 109

   16 statement: expression_statement â¢

    $default  reduce using rule 16 (statement)


State 110

   23 primary_expression: identifier â¢

    $default  reduce using rule 23 (primary_expression)


State 111

   25 primary_expression: string_literal â¢

    $default  reduce using rule 25 (primary_expression)


State 112

   24 primary_expression: constant â¢

    $default  reduce using rule 24 (primary_expression)


State 113

   27 postfix_expression: primary_expression â¢

    $default  reduce using rule 27 (postfix_expression)


State 114

   28 postfix_expression: postfix_expression â¢ '[' expression ']'
   29                   | postfix_expression â¢ '(' ')'
   30                   | postfix_expression â¢ '(' argument_expression_list ')'
   31                   | postfix_expression â¢ '.' identifier
   32                   | postfix_expression â¢ "->" identifier
   33                   | postfix_expression â¢ "++"
   34                   | postfix_expression â¢ "--"
   37 unary_expression: postfix_expression â¢

    "->"  shift, and go to state 177
    "++"  shift, and go to state 178
    "--"  shift, and go to state 179
    '('   shift, and go to state 180
    '['   shift, and go to state 181
    '.'   shift, and go to state 182

    $default  reduce using rule 37 (unary_expression)


State 115

   49 cast_expression: unary_expression â¢
   82 assignment_expression: unary_expression â¢ assignment_operator assignment_expression

    "*="   shift, and go to state 183
    "/="   shift, and go to state 184
    "%="   shift, and go to state 185
    "+="   shift, and go to state 186
    "-="   shift, and go to state 187
    "<<="  shift, and go to state 188
    ">>="  shift, and go to state 189
    "&="   shift, and go to state 190
    "|="   shift, and go to state 191
    "^="   shift, and go to state 192
    '='    shift, and go to state 193

    $default  reduce using rule 49 (cast_expression)

    assignment_operator  go to state 194


State 116

   51 multiplicative_expression: cast_expression â¢

    $default  reduce using rule 51 (multiplicative_expression)


State 117

   52 multiplicative_expression: multiplicative_expression â¢ '*' cast_expression
   53                          | multiplicative_expression â¢ '/' cast_expression
   54                          | multiplicative_expression â¢ '%' cast_expression
   55 additive_expression: multiplicative_expression â¢

    '*'  shift, and go to state 195
    '/'  shift, and go to state 196
    '%'  shift, and go to state 197

    $default  reduce using rule 55 (additive_expression)


State 118

   56 additive_expression: additive_expression â¢ '+' multiplicative_expression
   57                    | additive_expression â¢ '-' multiplicative_expression
   58 shift_expression: additive_expression â¢

    '+'  shift, and go to state 198
    '-'  shift, and go to state 199

    $default  reduce using rule 58 (shift_expression)


State 119

   59 shift_expression: shift_expression â¢ "<<" additive_expression
   60                 | shift_expression â¢ ">>" additive_expression
   61 relational_expression: shift_expression â¢

    "<<"  shift, and go to state 200
    ">>"  shift, and go to state 201

    $default  reduce using rule 61 (relational_expression)


State 120

   62 relational_expression: relational_expression â¢ '<' shift_expression
   63                      | relational_expression â¢ "<=" shift_expression
   64                      | relational_expression â¢ '>' shift_expression
   65                      | relational_expression â¢ ">=" shift_expression
   66 equality_expression: relational_expression â¢

    "<="  shift, and go to state 202
    ">="  shift, and go to state 203
    '<'   shift, and go to state 204
    '>'   shift, and go to state 205

    $default  reduce using rule 66 (equality_expression)


State 121

   67 equality_expression: equality_expression â¢ "==" relational_expression
   68                    | equality_expression â¢ "!=" relational_expression
   69 and_expression: equality_expression â¢

    "=="  shift, and go to state 206
    "!="  shift, and go to state 207

    $default  reduce using rule 69 (and_expression)


State 122

   70 and_expression: and_expression â¢ '&' equality_expression
   71 xor_expression: and_expression â¢

    '&'  shift, and go to state 208

    $default  reduce using rule 71 (xor_expression)


State 123

   72 xor_expression: xor_expression â¢ '^' and_expression
   73 or_expression: xor_expression â¢

    '^'  shift, and go to state 209

    $default  reduce using rule 73 (or_expression)


State 124

   74 or_expression: or_expression â¢ '|' xor_expression
   75 logical_and_expression: or_expression â¢

    '|'  shift, and go to state 210

    $default  reduce using rule 75 (logical_and_expression)


State 125

   76 logical_and_expression: logical_and_expression â¢ "&&" or_expression
   77 logical_or_expression: logical_and_expression â¢

    "&&"  shift, and go to state 211

    $default  reduce using rule 77 (logical_or_expression)


State 126

   78 logical_or_expression: logical_or_expression â¢ "||" logical_and_expression
   79 conditional_expression: logical_or_expression â¢
   80                       | logical_or_expression â¢ '?' expression ':' conditional_expression

    "||"  shift, and go to state 212
    '?'   shift, and go to state 213

    $default  reduce using rule 79 (conditional_expression)


State 127

   81 assignment_expression: conditional_expression â¢

    $default  reduce using rule 81 (assignment_expression)


State 128

   94 expression: assignment_expression â¢

    $default  reduce using rule 94 (expression)


State 129

   17 expression_statement: expression â¢ ';'
   95 expression: expression â¢ ',' assignment_expression

    ';'  shift, and go to state 214
    ','  shift, and go to state 215


State 130

   13 block_item: declaration â¢

    $default  reduce using rule 13 (block_item)


State 131

  197 initializer: assignment_expression â¢

    $default  reduce using rule 197 (initializer)


State 132

  110 init_declarator: declarator '=' initializer â¢

    $default  reduce using rule 110 (init_declarator)


State 133

    6 function_definition: declaration_specifiers declarator declaration_list compound_statement â¢

    $default  reduce using rule 6 (function_definition)


State 134

    8 declaration_list: declaration_list declaration â¢

    $default  reduce using rule 8 (declaration_list)


State 135

  167 direct_declarator: direct_declarator '(' ')' â¢

    $default  reduce using rule 167 (direct_declarator)


State 136

  181 identifier_list: identifier â¢

    $default  reduce using rule 181 (identifier_list)


State 137

  103 declaration_specifiers: declaration_specifiers â¢ type_specifier
  104                       | declaration_specifiers â¢ type_qualifier
  105                       | declaration_specifiers â¢ storage_class_specifier
  106                       | declaration_specifiers â¢ function_specifier
  178 parameter_declaration: declaration_specifiers â¢ declarator
  179                      | declaration_specifiers â¢
  180                      | declaration_specifiers â¢ abstract_declarator

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 216
    '['       shift, and go to state 217
    '*'       shift, and go to state 42

    $default  reduce using rule 179 (parameter_declaration)

    identifier                  go to state 43
    storage_class_specifier     go to state 46
    type_specifier              go to state 47
    type_qualifier              go to state 48
    function_specifier          go to state 49
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34
    declarator                  go to state 218
    direct_declarator           go to state 51
    pointer                     go to state 219
    abstract_declarator         go to state 220
    direct_abstract_declarator  go to state 221


State 138

  165 direct_declarator: direct_declarator '(' parameter_type_list â¢ ')'

    ')'  shift, and go to state 222


State 139

  174 parameter_type_list: parameter_list â¢
  175                    | parameter_list â¢ ',' "..."
  177 parameter_list: parameter_list â¢ ',' parameter_declaration

    ','  shift, and go to state 223

    $default  reduce using rule 174 (parameter_type_list)


State 140

  176 parameter_list: parameter_declaration â¢

    $default  reduce using rule 176 (parameter_list)


State 141

  166 direct_declarator: direct_declarator '(' identifier_list â¢ ')'
  182 identifier_list: identifier_list â¢ ',' identifier

    ')'  shift, and go to state 224
    ','  shift, and go to state 225


State 142

  163 direct_declarator: direct_declarator '[' ']' â¢

    $default  reduce using rule 163 (direct_declarator)


State 143

  164 direct_declarator: direct_declarator '[' assignment_expression â¢ ']'

    ']'  shift, and go to state 226


State 144

  134 struct_or_union_specifier: struct_or_union IDENT '{' @1 â¢ struct_declaration_list '}'

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    type_specifier             go to state 75
    type_qualifier             go to state 76
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration_list    go to state 227
    struct_declaration         go to state 78
    specifier_qualifier_list   go to state 79
    enum_specifier             go to state 34


State 145

  132 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}' â¢

    $default  reduce using rule 132 (struct_or_union_specifier)


State 146

  139 struct_declaration_list: struct_declaration_list struct_declaration â¢

    $default  reduce using rule 139 (struct_declaration_list)


State 147

  148 struct_declarator: ':' â¢ constant_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 154
    constant_expression        go to state 228


State 148

  143 specifier_qualifier_list: specifier_qualifier_list type_specifier â¢

    $default  reduce using rule 143 (specifier_qualifier_list)


State 149

  144 specifier_qualifier_list: specifier_qualifier_list type_qualifier â¢

    $default  reduce using rule 144 (specifier_qualifier_list)


State 150

  140 struct_declaration: specifier_qualifier_list struct_declarator_list â¢ ';'
  146 struct_declarator_list: struct_declarator_list â¢ ',' struct_declarator

    ';'  shift, and go to state 229
    ','  shift, and go to state 230


State 151

  145 struct_declarator_list: struct_declarator â¢

    $default  reduce using rule 145 (struct_declarator_list)


State 152

  147 struct_declarator: declarator â¢
  149                  | declarator â¢ ':' constant_expression

    ':'  shift, and go to state 231

    $default  reduce using rule 147 (struct_declarator)


State 153

   49 cast_expression: unary_expression â¢

    $default  reduce using rule 49 (cast_expression)


State 154

   96 constant_expression: conditional_expression â¢

    $default  reduce using rule 96 (constant_expression)


State 155

  158 enumerator: identifier '=' constant_expression â¢

    $default  reduce using rule 158 (enumerator)


State 156

  153 enum_specifier: ENUM '{' enumerator_list ',' '}' â¢

    $default  reduce using rule 153 (enum_specifier)


State 157

  156 enumerator_list: enumerator_list ',' enumerator â¢

    $default  reduce using rule 156 (enumerator_list)


State 158

  152 enum_specifier: ENUM identifier '{' enumerator_list '}' â¢

    $default  reduce using rule 152 (enum_specifier)


State 159

  154 enum_specifier: ENUM identifier '{' enumerator_list ',' â¢ '}'
  156 enumerator_list: enumerator_list ',' â¢ enumerator

    IDENT  shift, and go to state 35
    '}'    shift, and go to state 232

    identifier  go to state 55
    enumerator  go to state 157


State 160

   26 primary_expression: '(' â¢ expression ')'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 166


State 161

   38 unary_expression: "++" unary_expression â¢

    $default  reduce using rule 38 (unary_expression)


State 162

   39 unary_expression: "--" unary_expression â¢

    $default  reduce using rule 39 (unary_expression)


State 163

   48 unary_expression: ALIGNOF unary_expression â¢

    $default  reduce using rule 48 (unary_expression)


State 164

   26 primary_expression: '(' â¢ expression ')'
   47 unary_expression: SIZEOF '(' â¢ type_name ')'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    SIZEOF     shift, and go to state 95
    STRUCT     shift, and go to state 16
    UNION      shift, and go to state 17
    UNSIGNED   shift, and go to state 18
    VOID       shift, and go to state 19
    VOLATILE   shift, and go to state 20
    _BOOL      shift, and go to state 21
    _COMPLEX   shift, and go to state 22
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 166
    type_specifier             go to state 75
    type_qualifier             go to state 76
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    specifier_qualifier_list   go to state 167
    enum_specifier             go to state 34
    type_name                  go to state 233


State 165

   46 unary_expression: SIZEOF unary_expression â¢

    $default  reduce using rule 46 (unary_expression)


State 166

   26 primary_expression: '(' expression â¢ ')'
   95 expression: expression â¢ ',' assignment_expression

    ')'  shift, and go to state 234
    ','  shift, and go to state 215


State 167

  143 specifier_qualifier_list: specifier_qualifier_list â¢ type_specifier
  144                         | specifier_qualifier_list â¢ type_qualifier
  183 type_name: specifier_qualifier_list â¢
  184          | specifier_qualifier_list â¢ abstract_declarator

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 235
    '['       shift, and go to state 217
    '*'       shift, and go to state 42

    $default  reduce using rule 183 (type_name)

    type_specifier              go to state 148
    type_qualifier              go to state 149
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34
    pointer                     go to state 236
    abstract_declarator         go to state 237
    direct_abstract_declarator  go to state 221


State 168

   50 cast_expression: '(' type_name â¢ ')' cast_expression

    ')'  shift, and go to state 238


State 169

   40 unary_expression: '&' cast_expression â¢

    $default  reduce using rule 40 (unary_expression)


State 170

   41 unary_expression: '*' cast_expression â¢

    $default  reduce using rule 41 (unary_expression)


State 171

   42 unary_expression: '+' cast_expression â¢

    $default  reduce using rule 42 (unary_expression)


State 172

   43 unary_expression: '-' cast_expression â¢

    $default  reduce using rule 43 (unary_expression)


State 173

   44 unary_expression: '~' cast_expression â¢

    $default  reduce using rule 44 (unary_expression)


State 174

   45 unary_expression: '!' cast_expression â¢

    $default  reduce using rule 45 (unary_expression)


State 175

    9 compound_statement: '{' block_item_list '}' â¢

    $default  reduce using rule 9 (compound_statement)


State 176

   12 block_item_list: block_item_list block_item â¢

    $default  reduce using rule 12 (block_item_list)


State 177

   32 postfix_expression: postfix_expression "->" â¢ identifier

    IDENT  shift, and go to state 35

    identifier  go to state 239


State 178

   33 postfix_expression: postfix_expression "++" â¢

    $default  reduce using rule 33 (postfix_expression)


State 179

   34 postfix_expression: postfix_expression "--" â¢

    $default  reduce using rule 34 (postfix_expression)


State 180

   29 postfix_expression: postfix_expression '(' â¢ ')'
   30                   | postfix_expression '(' â¢ argument_expression_list ')'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    ')'        shift, and go to state 240
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    argument_expression_list   go to state 241
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 242


State 181

   28 postfix_expression: postfix_expression '[' â¢ expression ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 243


State 182

   31 postfix_expression: postfix_expression '.' â¢ identifier

    IDENT  shift, and go to state 35

    identifier  go to state 244


State 183

   84 assignment_operator: "*=" â¢

    $default  reduce using rule 84 (assignment_operator)


State 184

   85 assignment_operator: "/=" â¢

    $default  reduce using rule 85 (assignment_operator)


State 185

   86 assignment_operator: "%=" â¢

    $default  reduce using rule 86 (assignment_operator)


State 186

   87 assignment_operator: "+=" â¢

    $default  reduce using rule 87 (assignment_operator)


State 187

   88 assignment_operator: "-=" â¢

    $default  reduce using rule 88 (assignment_operator)


State 188

   89 assignment_operator: "<<=" â¢

    $default  reduce using rule 89 (assignment_operator)


State 189

   90 assignment_operator: ">>=" â¢

    $default  reduce using rule 90 (assignment_operator)


State 190

   91 assignment_operator: "&=" â¢

    $default  reduce using rule 91 (assignment_operator)


State 191

   93 assignment_operator: "|=" â¢

    $default  reduce using rule 93 (assignment_operator)


State 192

   92 assignment_operator: "^=" â¢

    $default  reduce using rule 92 (assignment_operator)


State 193

   83 assignment_operator: '=' â¢

    $default  reduce using rule 83 (assignment_operator)


State 194

   82 assignment_expression: unary_expression assignment_operator â¢ assignment_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 245


State 195

   52 multiplicative_expression: multiplicative_expression '*' â¢ cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 153
    cast_expression     go to state 246


State 196

   53 multiplicative_expression: multiplicative_expression '/' â¢ cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 153
    cast_expression     go to state 247


State 197

   54 multiplicative_expression: multiplicative_expression '%' â¢ cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 153
    cast_expression     go to state 248


State 198

   56 additive_expression: additive_expression '+' â¢ multiplicative_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 249


State 199

   57 additive_expression: additive_expression '-' â¢ multiplicative_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 250


State 200

   59 shift_expression: shift_expression "<<" â¢ additive_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 251


State 201

   60 shift_expression: shift_expression ">>" â¢ additive_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 252


State 202

   63 relational_expression: relational_expression "<=" â¢ shift_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 253


State 203

   65 relational_expression: relational_expression ">=" â¢ shift_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 254


State 204

   62 relational_expression: relational_expression '<' â¢ shift_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 255


State 205

   64 relational_expression: relational_expression '>' â¢ shift_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 256


State 206

   67 equality_expression: equality_expression "==" â¢ relational_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 257


State 207

   68 equality_expression: equality_expression "!=" â¢ relational_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 258


State 208

   70 and_expression: and_expression '&' â¢ equality_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 259


State 209

   72 xor_expression: xor_expression '^' â¢ and_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 260


State 210

   74 or_expression: or_expression '|' â¢ xor_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 261


State 211

   76 logical_and_expression: logical_and_expression "&&" â¢ or_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 262


State 212

   78 logical_or_expression: logical_or_expression "||" â¢ logical_and_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 263


State 213

   80 conditional_expression: logical_or_expression '?' â¢ expression ':' conditional_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 128
    expression                 go to state 264


State 214

   17 expression_statement: expression ';' â¢

    $default  reduce using rule 17 (expression_statement)


State 215

   95 expression: expression ',' â¢ assignment_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 265


State 216

  162 direct_declarator: '(' â¢ declarator ')'
  188 direct_abstract_declarator: '(' â¢ abstract_declarator ')'
  193                           | '(' â¢ ')'
  195                           | '(' â¢ parameter_type_list ')'

    IDENT     shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 216
    ')'       shift, and go to state 266
    '['       shift, and go to state 217
    '*'       shift, and go to state 42

    identifier                  go to state 43
    declaration_specifiers      go to state 137
    storage_class_specifier     go to state 28
    type_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34
    declarator                  go to state 59
    direct_declarator           go to state 51
    pointer                     go to state 219
    parameter_type_list         go to state 267
    parameter_list              go to state 139
    parameter_declaration       go to state 140
    abstract_declarator         go to state 268
    direct_abstract_declarator  go to state 221


State 217

  189 direct_abstract_declarator: '[' â¢ ']'
  190                           | '[' â¢ assignment_expression ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    ']'        shift, and go to state 269
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 270


State 218

  178 parameter_declaration: declaration_specifiers declarator â¢

    $default  reduce using rule 178 (parameter_declaration)


State 219

  160 declarator: pointer â¢ direct_declarator
  185 abstract_declarator: pointer â¢
  187                    | pointer â¢ direct_abstract_declarator

    IDENT  shift, and go to state 35
    '('    shift, and go to state 216
    '['    shift, and go to state 217

    $default  reduce using rule 185 (abstract_declarator)

    identifier                  go to state 43
    direct_declarator           go to state 73
    direct_abstract_declarator  go to state 271


State 220

  180 parameter_declaration: declaration_specifiers abstract_declarator â¢

    $default  reduce using rule 180 (parameter_declaration)


State 221

  186 abstract_declarator: direct_abstract_declarator â¢
  191 direct_abstract_declarator: direct_abstract_declarator â¢ '[' ']'
  192                           | direct_abstract_declarator â¢ '[' assignment_expression ']'
  194                           | direct_abstract_declarator â¢ '(' ')'
  196                           | direct_abstract_declarator â¢ '(' parameter_type_list ')'

    '('  shift, and go to state 272
    '['  shift, and go to state 273

    $default  reduce using rule 186 (abstract_declarator)


State 222

  165 direct_declarator: direct_declarator '(' parameter_type_list ')' â¢

    $default  reduce using rule 165 (direct_declarator)


State 223

  175 parameter_type_list: parameter_list ',' â¢ "..."
  177 parameter_list: parameter_list ',' â¢ parameter_declaration

    "..."     shift, and go to state 274
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    declaration_specifiers     go to state 137
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    parameter_declaration      go to state 275


State 224

  166 direct_declarator: direct_declarator '(' identifier_list ')' â¢

    $default  reduce using rule 166 (direct_declarator)


State 225

  182 identifier_list: identifier_list ',' â¢ identifier

    IDENT  shift, and go to state 35

    identifier  go to state 276


State 226

  164 direct_declarator: direct_declarator '[' assignment_expression ']' â¢

    $default  reduce using rule 164 (direct_declarator)


State 227

  134 struct_or_union_specifier: struct_or_union IDENT '{' @1 struct_declaration_list â¢ '}'
  139 struct_declaration_list: struct_declaration_list â¢ struct_declaration

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    FLOAT     shift, and go to state 7
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '}'       shift, and go to state 277

    type_specifier             go to state 75
    type_qualifier             go to state 76
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    struct_declaration         go to state 146
    specifier_qualifier_list   go to state 79
    enum_specifier             go to state 34


State 228

  148 struct_declarator: ':' constant_expression â¢

    $default  reduce using rule 148 (struct_declarator)


State 229

  140 struct_declaration: specifier_qualifier_list struct_declarator_list ';' â¢

    $default  reduce using rule 140 (struct_declaration)


State 230

  146 struct_declarator_list: struct_declarator_list ',' â¢ struct_declarator

    IDENT  shift, and go to state 35
    '('    shift, and go to state 41
    '*'    shift, and go to state 42
    ':'    shift, and go to state 147

    identifier         go to state 43
    struct_declarator  go to state 278
    declarator         go to state 152
    direct_declarator  go to state 51
    pointer            go to state 52


State 231

  149 struct_declarator: declarator ':' â¢ constant_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 154
    constant_expression        go to state 279


State 232

  154 enum_specifier: ENUM identifier '{' enumerator_list ',' '}' â¢

    $default  reduce using rule 154 (enum_specifier)


State 233

   47 unary_expression: SIZEOF '(' type_name â¢ ')'

    ')'  shift, and go to state 280


State 234

   26 primary_expression: '(' expression ')' â¢

    $default  reduce using rule 26 (primary_expression)


State 235

  188 direct_abstract_declarator: '(' â¢ abstract_declarator ')'
  193                           | '(' â¢ ')'
  195                           | '(' â¢ parameter_type_list ')'

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '('       shift, and go to state 235
    ')'       shift, and go to state 266
    '['       shift, and go to state 217
    '*'       shift, and go to state 42

    declaration_specifiers      go to state 137
    storage_class_specifier     go to state 28
    type_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31
    struct_or_union_specifier   go to state 32
    struct_or_union             go to state 33
    enum_specifier              go to state 34
    pointer                     go to state 236
    parameter_type_list         go to state 267
    parameter_list              go to state 139
    parameter_declaration       go to state 140
    abstract_declarator         go to state 268
    direct_abstract_declarator  go to state 221


State 236

  185 abstract_declarator: pointer â¢
  187                    | pointer â¢ direct_abstract_declarator

    '('  shift, and go to state 235
    '['  shift, and go to state 217

    $default  reduce using rule 185 (abstract_declarator)

    direct_abstract_declarator  go to state 271


State 237

  184 type_name: specifier_qualifier_list abstract_declarator â¢

    $default  reduce using rule 184 (type_name)


State 238

   50 cast_expression: '(' type_name ')' â¢ cast_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier          go to state 110
    string_literal      go to state 111
    constant            go to state 112
    primary_expression  go to state 113
    postfix_expression  go to state 114
    unary_expression    go to state 153
    cast_expression     go to state 281


State 239

   32 postfix_expression: postfix_expression "->" identifier â¢

    $default  reduce using rule 32 (postfix_expression)


State 240

   29 postfix_expression: postfix_expression '(' ')' â¢

    $default  reduce using rule 29 (postfix_expression)


State 241

   30 postfix_expression: postfix_expression '(' argument_expression_list â¢ ')'
   36 argument_expression_list: argument_expression_list â¢ ',' assignment_expression

    ')'  shift, and go to state 282
    ','  shift, and go to state 283


State 242

   35 argument_expression_list: assignment_expression â¢

    $default  reduce using rule 35 (argument_expression_list)


State 243

   28 postfix_expression: postfix_expression '[' expression â¢ ']'
   95 expression: expression â¢ ',' assignment_expression

    ']'  shift, and go to state 284
    ','  shift, and go to state 215


State 244

   31 postfix_expression: postfix_expression '.' identifier â¢

    $default  reduce using rule 31 (postfix_expression)


State 245

   82 assignment_expression: unary_expression assignment_operator assignment_expression â¢

    $default  reduce using rule 82 (assignment_expression)


State 246

   52 multiplicative_expression: multiplicative_expression '*' cast_expression â¢

    $default  reduce using rule 52 (multiplicative_expression)


State 247

   53 multiplicative_expression: multiplicative_expression '/' cast_expression â¢

    $default  reduce using rule 53 (multiplicative_expression)


State 248

   54 multiplicative_expression: multiplicative_expression '%' cast_expression â¢

    $default  reduce using rule 54 (multiplicative_expression)


State 249

   52 multiplicative_expression: multiplicative_expression â¢ '*' cast_expression
   53                          | multiplicative_expression â¢ '/' cast_expression
   54                          | multiplicative_expression â¢ '%' cast_expression
   56 additive_expression: additive_expression '+' multiplicative_expression â¢

    '*'  shift, and go to state 195
    '/'  shift, and go to state 196
    '%'  shift, and go to state 197

    $default  reduce using rule 56 (additive_expression)


State 250

   52 multiplicative_expression: multiplicative_expression â¢ '*' cast_expression
   53                          | multiplicative_expression â¢ '/' cast_expression
   54                          | multiplicative_expression â¢ '%' cast_expression
   57 additive_expression: additive_expression '-' multiplicative_expression â¢

    '*'  shift, and go to state 195
    '/'  shift, and go to state 196
    '%'  shift, and go to state 197

    $default  reduce using rule 57 (additive_expression)


State 251

   56 additive_expression: additive_expression â¢ '+' multiplicative_expression
   57                    | additive_expression â¢ '-' multiplicative_expression
   59 shift_expression: shift_expression "<<" additive_expression â¢

    '+'  shift, and go to state 198
    '-'  shift, and go to state 199

    $default  reduce using rule 59 (shift_expression)


State 252

   56 additive_expression: additive_expression â¢ '+' multiplicative_expression
   57                    | additive_expression â¢ '-' multiplicative_expression
   60 shift_expression: shift_expression ">>" additive_expression â¢

    '+'  shift, and go to state 198
    '-'  shift, and go to state 199

    $default  reduce using rule 60 (shift_expression)


State 253

   59 shift_expression: shift_expression â¢ "<<" additive_expression
   60                 | shift_expression â¢ ">>" additive_expression
   63 relational_expression: relational_expression "<=" shift_expression â¢

    "<<"  shift, and go to state 200
    ">>"  shift, and go to state 201

    $default  reduce using rule 63 (relational_expression)


State 254

   59 shift_expression: shift_expression â¢ "<<" additive_expression
   60                 | shift_expression â¢ ">>" additive_expression
   65 relational_expression: relational_expression ">=" shift_expression â¢

    "<<"  shift, and go to state 200
    ">>"  shift, and go to state 201

    $default  reduce using rule 65 (relational_expression)


State 255

   59 shift_expression: shift_expression â¢ "<<" additive_expression
   60                 | shift_expression â¢ ">>" additive_expression
   62 relational_expression: relational_expression '<' shift_expression â¢

    "<<"  shift, and go to state 200
    ">>"  shift, and go to state 201

    $default  reduce using rule 62 (relational_expression)


State 256

   59 shift_expression: shift_expression â¢ "<<" additive_expression
   60                 | shift_expression â¢ ">>" additive_expression
   64 relational_expression: relational_expression '>' shift_expression â¢

    "<<"  shift, and go to state 200
    ">>"  shift, and go to state 201

    $default  reduce using rule 64 (relational_expression)


State 257

   62 relational_expression: relational_expression â¢ '<' shift_expression
   63                      | relational_expression â¢ "<=" shift_expression
   64                      | relational_expression â¢ '>' shift_expression
   65                      | relational_expression â¢ ">=" shift_expression
   67 equality_expression: equality_expression "==" relational_expression â¢

    "<="  shift, and go to state 202
    ">="  shift, and go to state 203
    '<'   shift, and go to state 204
    '>'   shift, and go to state 205

    $default  reduce using rule 67 (equality_expression)


State 258

   62 relational_expression: relational_expression â¢ '<' shift_expression
   63                      | relational_expression â¢ "<=" shift_expression
   64                      | relational_expression â¢ '>' shift_expression
   65                      | relational_expression â¢ ">=" shift_expression
   68 equality_expression: equality_expression "!=" relational_expression â¢

    "<="  shift, and go to state 202
    ">="  shift, and go to state 203
    '<'   shift, and go to state 204
    '>'   shift, and go to state 205

    $default  reduce using rule 68 (equality_expression)


State 259

   67 equality_expression: equality_expression â¢ "==" relational_expression
   68                    | equality_expression â¢ "!=" relational_expression
   70 and_expression: and_expression '&' equality_expression â¢

    "=="  shift, and go to state 206
    "!="  shift, and go to state 207

    $default  reduce using rule 70 (and_expression)


State 260

   70 and_expression: and_expression â¢ '&' equality_expression
   72 xor_expression: xor_expression '^' and_expression â¢

    '&'  shift, and go to state 208

    $default  reduce using rule 72 (xor_expression)


State 261

   72 xor_expression: xor_expression â¢ '^' and_expression
   74 or_expression: or_expression '|' xor_expression â¢

    '^'  shift, and go to state 209

    $default  reduce using rule 74 (or_expression)


State 262

   74 or_expression: or_expression â¢ '|' xor_expression
   76 logical_and_expression: logical_and_expression "&&" or_expression â¢

    '|'  shift, and go to state 210

    $default  reduce using rule 76 (logical_and_expression)


State 263

   76 logical_and_expression: logical_and_expression â¢ "&&" or_expression
   78 logical_or_expression: logical_or_expression "||" logical_and_expression â¢

    "&&"  shift, and go to state 211

    $default  reduce using rule 78 (logical_or_expression)


State 264

   80 conditional_expression: logical_or_expression '?' expression â¢ ':' conditional_expression
   95 expression: expression â¢ ',' assignment_expression

    ','  shift, and go to state 215
    ':'  shift, and go to state 285


State 265

   95 expression: expression ',' assignment_expression â¢

    $default  reduce using rule 95 (expression)


State 266

  193 direct_abstract_declarator: '(' ')' â¢

    $default  reduce using rule 193 (direct_abstract_declarator)


State 267

  195 direct_abstract_declarator: '(' parameter_type_list â¢ ')'

    ')'  shift, and go to state 286


State 268

  188 direct_abstract_declarator: '(' abstract_declarator â¢ ')'

    ')'  shift, and go to state 287


State 269

  189 direct_abstract_declarator: '[' ']' â¢

    $default  reduce using rule 189 (direct_abstract_declarator)


State 270

  190 direct_abstract_declarator: '[' assignment_expression â¢ ']'

    ']'  shift, and go to state 288


State 271

  187 abstract_declarator: pointer direct_abstract_declarator â¢
  191 direct_abstract_declarator: direct_abstract_declarator â¢ '[' ']'
  192                           | direct_abstract_declarator â¢ '[' assignment_expression ']'
  194                           | direct_abstract_declarator â¢ '(' ')'
  196                           | direct_abstract_declarator â¢ '(' parameter_type_list ')'

    '('  shift, and go to state 272
    '['  shift, and go to state 273

    $default  reduce using rule 187 (abstract_declarator)


State 272

  194 direct_abstract_declarator: direct_abstract_declarator '(' â¢ ')'
  196                           | direct_abstract_declarator '(' â¢ parameter_type_list ')'

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    ENUM      shift, and go to state 5
    EXTERN    shift, and go to state 6
    FLOAT     shift, and go to state 7
    INLINE    shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    REGISTER  shift, and go to state 11
    RESTRICT  shift, and go to state 12
    SHORT     shift, and go to state 13
    SIGNED    shift, and go to state 14
    STATIC    shift, and go to state 15
    STRUCT    shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ')'       shift, and go to state 289

    declaration_specifiers     go to state 137
    storage_class_specifier    go to state 28
    type_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    struct_or_union_specifier  go to state 32
    struct_or_union            go to state 33
    enum_specifier             go to state 34
    parameter_type_list        go to state 290
    parameter_list             go to state 139
    parameter_declaration      go to state 140


State 273

  191 direct_abstract_declarator: direct_abstract_declarator '[' â¢ ']'
  192                           | direct_abstract_declarator '[' â¢ assignment_expression ']'

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    ']'        shift, and go to state 291
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 292


State 274

  175 parameter_type_list: parameter_list ',' "..." â¢

    $default  reduce using rule 175 (parameter_type_list)


State 275

  177 parameter_list: parameter_list ',' parameter_declaration â¢

    $default  reduce using rule 177 (parameter_list)


State 276

  182 identifier_list: identifier_list ',' identifier â¢

    $default  reduce using rule 182 (identifier_list)


State 277

  134 struct_or_union_specifier: struct_or_union IDENT '{' @1 struct_declaration_list '}' â¢

    $default  reduce using rule 134 (struct_or_union_specifier)


State 278

  146 struct_declarator_list: struct_declarator_list ',' struct_declarator â¢

    $default  reduce using rule 146 (struct_declarator_list)


State 279

  149 struct_declarator: declarator ':' constant_expression â¢

    $default  reduce using rule 149 (struct_declarator)


State 280

   47 unary_expression: SIZEOF '(' type_name ')' â¢

    $default  reduce using rule 47 (unary_expression)


State 281

   50 cast_expression: '(' type_name ')' cast_expression â¢

    $default  reduce using rule 50 (cast_expression)


State 282

   30 postfix_expression: postfix_expression '(' argument_expression_list ')' â¢

    $default  reduce using rule 30 (postfix_expression)


State 283

   36 argument_expression_list: argument_expression_list ',' â¢ assignment_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 115
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 127
    assignment_expression      go to state 293


State 284

   28 postfix_expression: postfix_expression '[' expression ']' â¢

    $default  reduce using rule 28 (postfix_expression)


State 285

   80 conditional_expression: logical_or_expression '?' expression ':' â¢ conditional_expression

    IDENT      shift, and go to state 35
    CHARLIT    shift, and go to state 89
    STRINGLIT  shift, and go to state 90
    NUMBERLIT  shift, and go to state 91
    "++"       shift, and go to state 92
    "--"       shift, and go to state 93
    ALIGNOF    shift, and go to state 94
    SIZEOF     shift, and go to state 95
    '('        shift, and go to state 98
    '&'        shift, and go to state 99
    '*'        shift, and go to state 100
    '+'        shift, and go to state 101
    '-'        shift, and go to state 102
    '~'        shift, and go to state 103
    '!'        shift, and go to state 104

    identifier                 go to state 110
    string_literal             go to state 111
    constant                   go to state 112
    primary_expression         go to state 113
    postfix_expression         go to state 114
    unary_expression           go to state 153
    cast_expression            go to state 116
    multiplicative_expression  go to state 117
    additive_expression        go to state 118
    shift_expression           go to state 119
    relational_expression      go to state 120
    equality_expression        go to state 121
    and_expression             go to state 122
    xor_expression             go to state 123
    or_expression              go to state 124
    logical_and_expression     go to state 125
    logical_or_expression      go to state 126
    conditional_expression     go to state 294


State 286

  195 direct_abstract_declarator: '(' parameter_type_list ')' â¢

    $default  reduce using rule 195 (direct_abstract_declarator)


State 287

  188 direct_abstract_declarator: '(' abstract_declarator ')' â¢

    $default  reduce using rule 188 (direct_abstract_declarator)


State 288

  190 direct_abstract_declarator: '[' assignment_expression ']' â¢

    $default  reduce using rule 190 (direct_abstract_declarator)


State 289

  194 direct_abstract_declarator: direct_abstract_declarator '(' ')' â¢

    $default  reduce using rule 194 (direct_abstract_declarator)


State 290

  196 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list â¢ ')'

    ')'  shift, and go to state 295


State 291

  191 direct_abstract_declarator: direct_abstract_declarator '[' ']' â¢

    $default  reduce using rule 191 (direct_abstract_declarator)


State 292

  192 direct_abstract_declarator: direct_abstract_declarator '[' assignment_expression â¢ ']'

    ']'  shift, and go to state 296


State 293

   36 argument_expression_list: argument_expression_list ',' assignment_expression â¢

    $default  reduce using rule 36 (argument_expression_list)


State 294

   80 conditional_expression: logical_or_expression '?' expression ':' conditional_expression â¢

    $default  reduce using rule 80 (conditional_expression)


State 295

  196 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list ')' â¢

    $default  reduce using rule 196 (direct_abstract_declarator)


State 296

  192 direct_abstract_declarator: direct_abstract_declarator '[' assignment_expression ']' â¢

    $default  reduce using rule 192 (direct_abstract_declarator)
