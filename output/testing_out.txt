EXTERNAL DECLARATION: The variable `printf` has storage class REGISTER and is a(n)
    function with unknown parameters returning
        INT 

EXTERNAL DECLARATION: The variable `u` has storage class REGISTER and is a(n)
    INT 

EXTERNAL DECLARATION: The variable `p` has storage class REGISTER and is a(n)
    pointer to a(n)
        INT 

EXTERNAL DECLARATION: The variable `s` has storage class REGISTER and is a(n)
    INT 

EXTERNAL DECLARATION: The variable `h` has storage class REGISTER and is a(n)
    array with size
    [
        NUMBERLIT    INTEGER    10    INT
    ]
    containing
        INT 

EXTERNAL DECLARATION: The variable `g` has storage class REGISTER and is a(n)
    INT 

FUNCTION DEFINITION: The variable `y` has storage class EXTERN and is a(n)
    function taking parameters
    (
        The variable `a` has storage class AUTO and is a(n)
            INT 
        The variable `b` has storage class AUTO and is a(n)
            INT 
    )
    returning
        INT 
0x36549880 : compound
{
    0x36549730 : expression
        FUNCTION_CALL        .name
            VARIABLE (resolved) "printf"
        .arg[0]
            STRINGLIT "arg %d %d\n"
        .arg[1]
            VARIABLE (resolved) "a"
        .arg[2]
            VARIABLE (resolved) "b"
    0x36549820 : return
        NUMBERLIT    INTEGER    0    INT
}

total arguments = 2
total local variables = 0
total temp variables = 2
total string literals = 1
(exit) BB0:
        ARGBEGIN        
    { %T1 CHAR *[11] }    LEA    { "arg %d %d\n" (0)CHAR [11] }    
        ARG    { b (1)arg AUTO INT  }    
        ARG    { a (0)arg AUTO INT  }    
        ARG    { %T1 CHAR *[11] }    
    { %T0 INT  }    CALL    printf    
        RET    { $0 INT  }    
DECLARATION: The variable `a` has storage class AUTO and is a(n)
    INT 
DECLARATION: The variable `b` has storage class AUTO and is a(n)
    INT 
DECLARATION: The variable `c` has storage class AUTO and is a(n)
    INT 
DECLARATION: The variable `d` has storage class AUTO and is a(n)
    pointer to a(n)
        INT 
DECLARATION: The variable `i` has storage class AUTO and is a(n)
    INT 
FUNCTION DEFINITION: The variable `main` has storage class EXTERN and is a(n)
    function with unknown parameters returning
        INT 
0x3654aa10 : compound
{
    0x3654a7b0 : for
    (
        BINARY_OP "="
        .left
            VARIABLE (resolved) "i"
        .right
            NUMBERLIT    INTEGER    0    INT
    ;
        BINARY_OP "<"
        .left
            VARIABLE (resolved) "i"
        .right
            NUMBERLIT    INTEGER    3    INT
    ;
        UNARY_OP "++"
        .operand
            VARIABLE (resolved) "i"
    )
    do
        0x3654aa90 : expression
            FUNCTION_CALL            .name
                VARIABLE (resolved) "printf"
            .arg[0]
                STRINGLIT "hello world %d, %d\n"
            .arg[1]
                VARIABLE (resolved) "i"
            .arg[2]
                BINARY_OP "*"
                .left
                    VARIABLE (resolved) "i"
                .right
                    NUMBERLIT    INTEGER    2    INT
    0x3654ae70 : expression
        FUNCTION_CALL        .name
            VARIABLE (resolved) "printf"
        .arg[0]
            STRINGLIT "ret %d\n"
        .arg[1]
            FUNCTION_CALL            .name
                VARIABLE (resolved) "y"
            .arg[0]
                NUMBERLIT    INTEGER    10    INT
            .arg[1]
                NUMBERLIT    INTEGER    4    INT
}

total arguments = 0
total local variables = 1
total temp variables = 8
total string literals = 2
BB0:
    { i (0)AUTO INT  }    MOV    { $0 INT  }    
        JP    BB3    
BB1:
        ARGBEGIN        
    { %T1 CHAR *[20] }    LEA    { "hello world %d, %d\n" (0)CHAR [20] }    
    { %T2 INT  }    MUL    { i (0)AUTO INT  }    { $2 INT  }
        ARG    { %T2 INT  }    
        ARG    { i (0)AUTO INT  }    
        ARG    { %T1 CHAR *[20] }    
    { %T0 INT  }    CALL    printf    
BB2:
    { %T3 INT  }    MOV    { i (0)AUTO INT  }    
    { i (0)AUTO INT  }    ADD    { i (0)AUTO INT  }    { $1 INT  }
BB3:
        CMP    { i (0)AUTO INT  }    { $3 INT  }
    { %T4 INT  }    SETM        
        CMP    { %T4 INT  }    { $0 INT  }
        JPNZ    BB1    
(exit) BB4:
        ARGBEGIN        
    { %T6 CHAR *[8] }    LEA    { "ret %d\n" (1)CHAR [8] }    
        ARGBEGIN        
        ARG    { $4 INT  }    
        ARG    { $10 INT  }    
    { %T7 INT  }    CALL    y    
        ARG    { %T7 INT  }    
        ARG    { %T6 CHAR *[8] }    
    { %T5 INT  }    CALL    printf    
        RET        
